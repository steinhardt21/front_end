{"version":3,"sources":["resources/differentResources/spinner.gif","resources/differentResources/Spinner.js","components/routing/PrivateRoute.js","components/routing/AdminRoute.js","resources/img/nucleus.png","actions/types.js","actions/alert.js","actions/auth.js","client/components/Navbar.js","client/components/Head.js","resources/img/avatar-user.svg","client/components/Menu.js","resources/img/logo_nucleus_symbol.svg","client/components/Footer.js","client/scenes/Dashboard/components/SummaryCandidature.js","actions/candidacy.js","actions/project.js","client/scenes/Dashboard/components/SummaryCall.js","client/scenes/Dashboard/Dashboard.js","actions/complementaryInfo.js","actions/profile.js","client/scenes/Profile/scenes/CreateProfile/CreateProfile.js","client/scenes/Project/scenes/CreateProject/components/PopupCreateProject.js","client/scenes/Project/scenes/CreateProject/CreateProject.js","actions/user.js","client/components/FooterPublic.js","client/components/NavbarPublic.js","client/scenes/Sign/Sign.js","client/scenes/Project/scenes/ProjectsOfTheUser/components/CallProject.js","client/scenes/Project/scenes/ProjectsOfTheUser/components/PopupCheckProfile.js","client/scenes/Project/scenes/ProjectsOfTheUser/ProjectsOfTheUser.js","client/scenes/Project/scenes/CreateCandidature/components/PopupCreateCandidature.js","client/scenes/Project/scenes/CreateCandidature/components/PopupGoDashboard.js","client/scenes/Project/scenes/CreateCandidature/components/PopupMessage.js","client/scenes/Project/scenes/CreateCandidature/components/PopupMessageGoDashboardjs.js","client/scenes/Project/scenes/CreateCandidature/CreateCandidature.js","client/scenes/Project/scenes/ListProjectsPlatform/components/CallProject.js","client/scenes/Project/scenes/ListProjectsPlatform/ListProjectsPlatform.js","client/scenes/Landing/components/CardProject.js","client/scenes/Landing/Landing.js","client/scenes/Project/scenes/CallView/componets/PopupCheckProfile.js","client/scenes/Project/scenes/CallView/CallView.js","client/scenes/Project/scenes/MotivationalLetter/components/PopupCandidature.js","client/scenes/Project/scenes/MotivationalLetter/MotivationalLetter.js","client/scenes/Candidature/scenes/CandidaciesOfTheUser/components/UserCandidacy.js","client/scenes/Candidature/scenes/CandidaciesOfTheUser/CandidaciesOfTheUser.js","client/scenes/Candidature/scenes/CandidatesForCall/components/PopupCandidature.js","client/scenes/Candidature/scenes/CandidatesForCall/components/PopupCandidatureReject.js","client/scenes/Candidature/scenes/CandidatesForCall/components/PopupCandidatureRejectFeedback.js","client/scenes/Candidature/scenes/CandidatesForCall/components/PopupCandidatureAcceptedCalendar.js","client/scenes/Candidature/scenes/CandidatesForCall/components/CandidateCall.js","client/scenes/Candidature/scenes/CandidatesForCall/CandidatesForCall.js","client/scenes/Candidature/scenes/UpdateCandidature/UpdateCandidature.js","resources/img/about_us_image_1.jpg","resources/img/about_us_image_2.jpg","client/scenes/AboutUs/AboutUs.js","client/scenes/Landing/components/PopupScopriProgetto.js","client/scenes/Landing/components/CallProject.js","client/scenes/Landing/ListCallPublic.js","client/scenes/Sign/ResetPassword.js","client/scenes/Sign/ResetPasswordConferma.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/project.js","reducers/candidacy.js","reducers/user.js","reducers/admin.js","reducers/authCollaborator.js","reducers/complementaryInfo.js","reducers/projectInformation.js","reducers/index.js","utils/setAuthToken.js","store.js","actions/authCollaborator.js","admin/components/LayoutAdmin.js","admin/components/LayoutAdminBody.js","admin/scenes/Dashboard/DashboardAdmin.js","actions/admin.js","admin/scenes/Sign/scenes/Login/LoginAdministrator.js","admin/scenes/Sign/scenes/Register/RegisterAdminstrator.js","admin/scenes/Analysis/scenes/UserDetail/UserDetailCard.js","admin/scenes/Analysis/scenes/UserDetail/UserDetail.js","admin/scenes/Analysis/scenes/ProjectDetail/ProjectDetail.js","admin/scenes/Utilities/scenes/ManagePosition/components/PositionForm.js","admin/scenes/Utilities/scenes/ManagePosition/ManagePosition.js","admin/scenes/Utilities/scenes/ManageIndustry/components/IndustryForm.js","admin/scenes/Utilities/scenes/ManageIndustry/ManageIndustry.js","admin/scenes/Utilities/scenes/ManagementDevStage/components/DevStageForm.js","admin/scenes/Utilities/scenes/ManagementDevStage/ManagementDevStage.js","admin/scenes/Utilities/scenes/ManageAnalysisQuestions/components/AnalysisQuestionForm.js","admin/scenes/Utilities/scenes/ManageAnalysisQuestions/ManageAnalysisQuestion.js","admin/scenes/Projects/scenes/ApproveProject/ApproveProject.js","admin/scenes/Projects/scenes/ApproveProject/ProjectDetailApprovation.js","admin/scenes/DownloadDocuments/DonwnloaDocuments.js","client/scenes/NotFound/NotFound.js","client/scenes/AboutUs/AboutUsPrivate.js","App.js","index.js"],"names":["src","spinner","style","width","margin","display","backgroundColor","alt","connect","state","auth","Component","component","isAuthenticated","loading","rest","render","props","Spinner","to","authCollaborator","collaborator","SET_ALERT","REMOVE_ALERT","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","ADMIN_AUTH_ERROR","LOGIN_FAIL","ADMIN_LOGIN_FAIL","ADMIN_LOGIN_SUCCESS","LOGOUT","LOGOUT_ADMIN","GET_PROFILE","PROFILE_ERROR","CLEAR_PROFILE","UPDATE_PROFILE","GET_PROFILES","GET_PROJECTS","GET_PROJECTS_SHOWCASE","PROJECT_ERROR","UPDATE_LIKES","DELETE_PROJECT","ADD_PROJECT","GET_PROJECT","CREATE_CANDIDACY","CANDIDACY_ERROR","GET_PROJECT_SHOWCASE","GET_CANDIDATES","GET_USER","USER_ERROR","UPDATE_STATUS_CANDIDACY","GET_CANDIDATURES_USER","GET_USERS","ADMIN_ERROR","ADMIN_LOADED","ADD_POSITION","GET_POSITIONS","ADD_INDUSTRY","USER_UPDATED","GET_INDUSTRIES","GET_PROJECT_INDUSTRIES","GET_POSITIONS_USER","COMPLEMENTARYINFO_ERROR","GET_INDUSTRIES_USER","GET_INDUSTRIES_PROFILE","GET_PROJECTS_OF_THE_USER","GET_DEV_STAGES","ADD_DEV_STAGE","GET_ANALYSIS_QUESTIONS","ADD_ANALYSIS_QUESTION","GET_ANALYSIS_QUESTIONS_PROJECT","ADD_CALL_PROJECT","GET_PROJECT_INDUSTRY","PROJECT_INFO_ERROR","GET_CALLS","GET_USER_CALLS","GET_CALL_INFORMATION","GET_CANDIDACIES_OF_THE_USER","GET_CANDIDATES_CALL","GET_CANDIDATURE","UPDATE_CANDIDACY","UPDATE_STATUS_CANDIDACY_BY_OWNER","GET_PUBLIC_CALLS","GET_CANDIDATES_CALL_SUMMARY","GET_PENDING_PROJECTS","UPDATE_STATE_PROJECT","GET_OWNER_PROJECT","GET_USERS_GENERAL_DATA","GET_CALLS_GENERAL_DATA","GET_CANDIDATURES_GENERAL_DATA","SAVE_CONTACT_USER","setAlert","msg","alertType","timeout","dispatch","id","uuid","type","payload","setTimeout","loadUser","a","axios","get","res","data","logout","Navbar","bg","expand","Brand","className","Logo","height","fontSize","Toggle","aria-controls","Collapse","Nav","onClick","Head","Helmet","rel","href","user","useState","name","surname","datiUtente","setDatiUtente","useEffect","Name","Surname","Image","Avatar","Footer","SummaryCandidature","candidacies","Approved","InProcess","Rejected","summaryCandidacies","setSummaryCandidacies","loadApproved","filter","element","Status","loadInProcess","loadRejected","length","Row","Col","getCandidaturesOfTheUser","response","statusText","status","getUserCalls","getPublicCalls","candidacy","getCandidatesCallSummary","callId","console","log","call","candidatesSummary","summaryCall","setSummaryCall","labels","datasets","hoverBackgroundColor","map","candidatureId","_id","candidate","Project","Position","Industry","Development_Stage","options","legend","project","userCandidacies","userCandidaciesLoading","userCalls","Container","fluid","calls","index","key","getAllPositions","errors","forEach","error","getAllIndustries","getCurrentProfile","profile","complementaryInfo","createProfile","formData","history","config","headers","post","undefined","push","updateUser","getProfileIndustries","profileId","withRouter","industries","loadingIndustries","match","Date","onChange","e","setProfileFormData","profileFormData","target","value","onChangeUserData","setUserFormData","userFormData","Email","City_Living","Biography","Skills","join","Telephone","Birthday","Form","onSubmit","preventDefault","params","Group","Label","Control","placeholder","required","minlength","as","positions","position","selected","industry","rows","maxlength","PopupCreateProject","Modal","size","aria-labelledby","centered","Header","closeButton","Title","Body","clickMe","onHide","analysisQuestion","createProject","edited","getAllDevelopmentStages","getAllAnalysisQuestions","modalShow","setModalShow","setFormData","Description","Headquarter","cols","dev_stages","dev_stage","analysis_questions","analysis_question","Question","onChangeAnalysisQuestion","show","registerEmailUser","contactUser","setContactUser","contactSaved","setContactSaved","inputForm","saveData","aria-describedby","NavbarPublic","login","email","password","body","JSON","stringify","register","EmailRegister","Password_1","Password","formDataLogIn","setFormDataLogIn","matchPassword","setMatchPassword","Password_2","formDataRegister","setFormDataRegister","onChangeRegister","Tab","defaultActiveKey","variant","Item","Link","eventKey","Content","Pane","controlId","Button","substring","PopupCheckProfile","getProjectsofTheUser","projectsOfTheUser","loadingUserCalls","PopupCreateCandidature","PopupGoDashboard","PopupMessage","PopupMessageGoDashboard","createCallProject","togleTypeCandidature","setTogleTypeCandidature","modalGoDashboard","setModalGoDashboard","modalMessage","setModalMessage","modalMessageGoDashboard","setModalMessageGoDashboard","newCandidacy","setNewCandidacy","checkbox","setCheckbox","Type_Colaboration","City_Presence_Required","InputGroup","Prepend","Checkbox","aria-label","defaultChecked","LogoSymbol","window","location","reload","publicCalls","loadingPublicCalls","CardProject","getProjectsShowcase","projects","loadingShowcase","marginTop","Carousel","touch","color","questions","flag","getCallInformation","getProjectOwner","projectId","loadingCall","owner","Analysis_Question","callData","setCallData","ProjectAnalysis","quesAns","Answer","ownerProject","setOwnerProject","User","Object","keys","PopupCandidature","createCandidature","Motivational_Letter","idCandidature","borderRadius","Call_Project","cursor","PopupCandidatureReject","PopupCandidatureRejectFeedback","updateFeedback","setFeebackForm","updateCallStatus","modalShowRejected","setModalShowRejected","modalShowRejectedFeedback","setModalShowRejectedFeedback","modalShowAcceptedCalendar","setModalShowAcceptedCalendark","PopupCandidatureAcceptedCalendar","Feedback","assign","newData","Profile","createHashHistory","getCandidatesCall","candidatesProject","candidatesProjectLoading","getCandidature","updateCandidature","candidature","candidacyLoading","Image_1","Image_2","PopupScopriProgetto","paddingTop","resetPassword","ResetPasswordConferma","initialState","token","localStorage","getItem","profiles","call_project","loadingUpdateStatus","loadCandidatesSummary","users","usercontact","usersGeneralData","pendingProjects","callsGeneralData","candidaturesGeneralData","loadingPendingProjects","combineReducers","alert","action","setItem","removeItem","likes","admin","projectInformation","setAuthToken","defaults","common","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","currentState","getState","subscribe","previousState","loadCollaborator","LayoutAdmin","http-equiv","content","children","data-toggle","data-target","aria-expanded","data-parent","role","aria-haspopup","getUsers","getProjects","cellspacing","loginAdmin","minLength","for","registerAdmin","password2","UserDetailCard","aria-selected","getProfileById","userId","addPosition","newPosition","setValue","getPositions","pos","Date_Inserted","addIndustry","newIndustry","getIndustries","ind","addDevStage","newDevStage","getDevStage","dev","addAnalysisQuestion","newAnalysisQuestion","question","question_exposed","getAnalysisQuestions","getPendingProjects","setProjects","countProject","getProjectById","updateStateProject","newState","projectDetail","setProjetDetail","analysis","myCSV","secondCSV","thirdCSV","getUsersGeneralData","getCallData","getCandidaturesData","usersList","setUsersList","callsList","setCallsList","candidaturesList","setCandidaturesList","Date_Of_Birth","Projects","CallCreated","numberCandidatures","numberCandidaturesAccepted","numberCandidaturesWaiting","numberCandidaturesRejected","Founder","Presence_Required","replace","Date_Closed","ProfileCandidate","IndustryCandidate","OwnerUser","OwnerProfile","OwnerIndustry","NotFound","App","vh","innerHeight","document","documentElement","setProperty","exact","path","Landing","CreateProfileUser","DashboardUser","CreateProjectUser","UserListProjects","CreateCandidature","ListProjects","CallView","MotivationalLetter","UserListCandidacies","ListCandidatesCall","UpdateCandidature","AboutUsPrivate","ResetPassword","SignUser","AboutUs","ListCallPublic","DashboardAdmin","LoginAdministrator","RegisterAdministrator","DetailUserAdministrator","DetailProjectAdministrator","ManagePosition","ManageIndustry","ManageDevelopmentStage","ManageAnalysisQuestion","ApproveProject","ProjectDetailApprovation","DownloadDocuments","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2cf14f3a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/spinner.67ea48d4.gif\";","import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nexport default () => (\r\n  <Fragment>\r\n    <img\r\n      src={spinner}\r\n      style={{ width: '50px', margin: 'auto', display: 'block', backgroundColor: 'transparent'}}\r\n      alt='Loading...'\r\n    />\r\n  </Fragment>\r\n);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../../resources/differentResources/Spinner'\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  auth: { isAuthenticated, loading },\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n\r\n        // !isAuthenticated && loading ? (\r\n        //   <Redirect to='/login'/>\r\n        // ) : (\r\n        //   <Component {...props} />\r\n        // )\r\n\r\n      loading ? (\r\n        <Spinner />\r\n      ) : isAuthenticated ? (\r\n         \r\n          <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/sign\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../../resources/differentResources/Spinner'\r\n\r\nconst AdminRoute = ({\r\n  component: Component,\r\n  auth: { isAuthenticated, loading, collaborator },\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>      \r\n      (loading) ? \r\n          (  <Spinner />) \r\n          : \r\n          (\r\n                (isAuthenticated )  ? \r\n                                      (<Component {...props} />) \r\n                                      : \r\n                                      ( <Redirect to=\"/admin/login\" />)\r\n          )\r\n\r\n    }\r\n  />\r\n);\r\n\r\nAdminRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.authCollaborator\r\n});\r\n\r\nexport default connect(mapStateToProps)(AdminRoute);","export default __webpack_public_path__ + \"static/media/nucleus.ecc45c11.png\";","export const SET_ALERT = 'SET_ALERT'\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT'\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL'\r\nexport const USER_LOADED = \"USER_LOADED\"\r\nexport const AUTH_ERROR = \"AUTH_ERROR\"\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\"\r\nexport const ADMIN_AUTH_ERROR = \"ADMIN_AUTH_ERROR\"\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\"\r\nexport const ADMIN_LOGIN_FAIL = \"ADMIN_LOGIN_FAIL\"\r\nexport const ADMIN_LOGIN_SUCCESS = \"ADMIN_LOGIN_SUCCESS\"\r\nexport const LOGOUT = \"LOGOUT\"\r\nexport const LOGOUT_ADMIN = \"LOGOUT_ADMIN\"\r\nexport const GET_PROFILE = \"GET_PROFILE\"\r\nexport const PROFILE_ERROR = \"PROFILE_ERROR\"\r\nexport const CLEAR_PROFILE = \"CLEAR_PROFILE\"\r\nexport const UPDATE_PROFILE =\"UPDATE_PROFILE\"\r\nexport const GET_PROFILES = \"GET_PROFILES\"\r\nexport const GET_PROJECTS = \"GET_PROJECTS\"\r\nexport const GET_PROJECTS_SHOWCASE = \"GET_PROJECTS_SHOWCASE\"\r\nexport const PROJECT_ERROR = \"PROJECT_ERROR\"\r\nexport const UPDATE_LIKES = \"UPDATE_LIKES\"\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\"\r\nexport const ADD_PROJECT = \"ADD_PROJECT\"\r\nexport const GET_PROJECT = \"GET_PROJECT\"\r\nexport const CREATE_CANDIDACY = \"CREATE_CANDIDACY\"\r\nexport const CANDIDACY_ERROR = \"CANDIDACY_ERROR\" \r\nexport const GET_PROJECT_SHOWCASE = \"GET_PROJECT_SHOWCASE\"\r\nexport const GET_CANDIDATES = \"GET_CANDIDATES\"\r\nexport const GET_USER = \"GET_USER\"\r\nexport const USER_ERROR = \"USER_ERROR\"\r\nexport const UPDATE_STATUS_CANDIDACY = \"UPDATE_STATUS_CANDIDACY\"\r\nexport const GET_CANDIDATURES_USER = \"GET_CANDIDATURES_USER\"\r\nexport const GET_USERS = \"GET_USERS\"\r\nexport const ADMIN_ERROR = \"ADMIN_ERROR\"\r\nexport const ADMIN_LOADED = \"ADMIN_LOADED\"\r\nexport const ADD_POSITION = \"ADD_POSITION\"\r\nexport const GET_POSITIONS = \"GET_POSITIONS\"\r\nexport const ADD_INDUSTRY = \"ADD_INDUSTRY\"\r\nexport const USER_UPDATED = \"USER_UPDATED\"\r\nexport const GET_INDUSTRIES = \"GET_INDUSTRIES\"\r\nexport const GET_PROJECT_INDUSTRIES = \"GET_PROJECT_INDUSTRIES\"\r\nexport const GET_POSITIONS_USER = \"GET_POSITIONS_USER\"\r\nexport const COMPLEMENTARYINFO_ERROR = \"COMPLEMENTARYINFO_ERROR\"\r\nexport const GET_INDUSTRIES_USER = \"GET_INDUSTRIES_USER\"\r\nexport const GET_INDUSTRIES_PROFILE = \"GET_INDUSTRIES_PROFILE\"\r\nexport const GET_PROJECTS_OF_THE_USER = \"GET_PROJECTS_OF_THE_USER\"\r\nexport const GET_DEV_STAGES = \"GET_DEV_STAGES\"\r\nexport const ADD_DEV_STAGE = \"ADD_DEV_STAGE\"\r\nexport const GET_PROJECT_DEV_STAGES = \"GET_PROJECT_DEV_STAGES\"\r\nexport const GET_ANALYSIS_QUESTIONS = \"GET_ANALYSIS_QUESTIONS\"\r\nexport const ADD_ANALYSIS_QUESTION = \"ADD_ANALYSIS_QUESTION\"\r\nexport const GET_ANALYSIS_QUESTIONS_PROJECT = \"GET_ANALYSIS_QUESTIONS_PROJECT\"\r\nexport const ADD_CALL_PROJECT = \"ADD_CALL_PROJECT\"\r\nexport const GET_PROJECT_INDUSTRY = \"GET_PROJECT_INDUSTRY\"\r\nexport const PROJECT_INFO_ERROR = \"PROJECT_INFO_ERROR\"\r\nexport const GET_CALLS = \"GET_CALLS\"\r\nexport const GET_USER_CALLS = \"GET_USER_CALLS\"\r\nexport const GET_CALL_INFORMATION = \"GET_CALL_INFORMATION\"\r\nexport const GET_CANDIDACIES_OF_THE_USER = \"GET_CANDIDACIES_OF_THE_USER\"\r\nexport const GET_CANDIDATES_CALL = \"GET_CANDIDATES_CALL\"\r\nexport const GET_CANDIDATURE = \"GET_CANDIDATURE\"\r\nexport const UPDATE_CANDIDACY = \"UPDATE_CANDIDACY\"\r\nexport const UPDATE_STATUS_CANDIDACY_BY_OWNER = \"UPDATE_STATUS_CANDIDACY_BY_OWNER\"\r\nexport const GET_PUBLIC_CALLS = 'GET_PUBLIC_CALLS'\r\nexport const GET_CANDIDATES_CALL_SUMMARY = 'GET_CANDIDATES_CALL_SUMMARY'\r\nexport const GET_PENDING_PROJECTS = 'GET_PENDING_PROJECTS'\r\nexport const UPDATE_STATE_PROJECT = 'UPDATE_STATE_PROJECT'\r\nexport const GET_OWNER_PROJECT = 'GET_OWNER_PROJECT'\r\nexport const GET_USERS_GENERAL_DATA = 'GET_USERS_GENERAL_DATA'\r\nexport const GET_CALLS_GENERAL_DATA = 'GET_CALLS_GENERAL_DATA'\r\nexport const GET_CANDIDATURES_GENERAL_DATA = 'GET_CANDIDATURES_GENERAL_DATA'\r\nexport const SAVE_CONTACT_USER = 'SAVE_CONTACT_USER'\r\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS'\r\n","import {v4 as uuid} from 'uuid'\r\n\r\nimport { SET_ALERT, REMOVE_ALERT} from './types'\r\n\r\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\r\n\r\n    const id = uuid; //generate id automatically\r\n    dispatch({\r\n        type: SET_ALERT,\r\n        payload: { msg, alertType, id}\r\n    })\r\n\r\n    setTimeout(() => dispatch({type:REMOVE_ALERT, payload: id}), timeout)\r\n}","import axios from 'axios'\r\nimport {setAlert} from './alert'\r\n\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGOUT,\r\n    USER_UPDATED,\r\n    USER_ERROR,\r\n    RESET_PASSWORD_SUCCESS\r\n} from './types'\r\n\r\n\r\n// Load User\r\nexport const loadUser = () => async dispatch => {\r\n     try{\r\n        const res = await axios.get('/api/auth')\r\n\r\n        dispatch({\r\n            type: USER_LOADED,\r\n            payload: res.data\r\n        })\r\n    }catch(err){\r\n\r\n        dispatch({\r\n            type: AUTH_ERROR\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (formData) => async dispatch => {\r\n    try{\r\n        console.log(formData)\r\n        const config = {headers:{'Content-Type' : 'application/json'}}\r\n        const res = await axios.post('/api/users/update', formData, config)\r\n        console.log('res ' + res)\r\n\r\n        dispatch({type: USER_UPDATED, payload: res.data})\r\n    }catch(err){\r\n        const errors = err.response.data.errors;\r\n        if(errors){ errors.forEach(error => dispatch(setAlert(error.msg,'danger')))}\r\n\r\n        dispatch({type: USER_ERROR,\r\n        payload:{msg: err.response.statusText, status: err.response.status}})\r\n    }\r\n}\r\n\r\nexport const resetPassword = (data, history) => async dispatch => {\r\n    console.log('ciao')\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    \r\n    // const body = JSON.stringify({email, password})\r\n\r\n    console.log('data', data)\r\n\r\n    try { \r\n        const res = await axios.post('/api/auth/reset-password', data, config)\r\n    \r\n        dispatch({\r\n            type: RESET_PASSWORD_SUCCESS,\r\n            payload: res.data\r\n        })\r\n\r\n        history.push(`/reset-password-conferma`)\r\n        \r\n    }catch(err) {\r\n\r\n        // const errors = err.response.data.errors;\r\n        console.log(err)\r\n        // if(errors){\r\n        //     errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        // }\r\n\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        })\r\n    }\r\n}\r\n\r\n//Register User\r\nexport const register = ({Name , Surname, EmailRegister, Password_1, history}, id) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    const body = JSON.stringify({Name, Surname, EmailRegister, Password_1})\r\n\r\n    console.log(\"Registration ----\")\r\n    console.log(body)\r\n\r\n    try { \r\n        const res = await axios.post('/api/users', body, config)\r\n    \r\n        dispatch({\r\n            type: REGISTER_SUCCESS,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(loadUser())\r\n\r\n        if(id !== undefined){history.push(`/create-profile/${id}`)}\r\n        else{history.push(`/create-profile`)}\r\n        \r\n    }catch(err) {\r\n\r\n        const errors = err.response.data.errors;\r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n\r\n        dispatch({\r\n            type: REGISTER_FAIL\r\n        })\r\n    }\r\n}\r\n\r\n//Login User\r\nexport const login = (email, password, history) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({email, password})\r\n\r\n    try { \r\n        const res = await axios.post('/api/auth', body, config)\r\n    \r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(loadUser())\r\n\r\n        \r\n    }catch(err) {\r\n\r\n        // const errors = err.response.data.errors;\r\n        console.log(err)\r\n        // if(errors){\r\n        //     errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        // }\r\n\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        })\r\n    }\r\n}\r\n\r\n//Logout / Clear Profile\r\nexport const logout = () => dispatch => \r\n{\r\n    dispatch({type:LOGOUT})\r\n}\r\n","/**\r\n * The colored Navbar of the website in the PRIVATE\r\n */\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport Logo from '../../resources/img/nucleus.png';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux'\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport {logout} from '../../actions/auth'\r\n\r\nconst NavbarPrivate = ({ auth: { isAuthenticated, loading }, logout }) => {  \r\n        return (\r\n            <Fragment>\r\n                <Navbar id=\"navbarBackgroundBlack\" bg=\"light\" expand=\"lg\">\r\n                        <Navbar.Brand>\r\n                        <Link className=\"nounderline\" to='/'>\r\n                           \r\n                              <img\r\n                                src={Logo}\r\n                                width=\"180\"\r\n                                height=\"auto\"\r\n                                className=\"d-inline-block align-top\"\r\n                                alt=\"React Bootstrap logo\"\r\n                               /> <span style={{fontSize:\"13px\"}}>Beta</span>\r\n                               </Link>         \r\n                        </Navbar.Brand>\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\" >\r\n                            <Nav className=\"ml-auto\" style={{fontSize:'20px'}}>\r\n                                <Link className=\"nounderline mr-5 pr-5\" to='/'>Home</Link>\r\n                                <Link className=\"nounderline mr-5 pr-5\" to='/list-projects'>Progetti</Link>\r\n                                <Link className=\"nounderline mr-5 pr-5\" to='/call/come-funziona-privata'>Come funziona</Link>\r\n                                <button onClick={logout} type=\"button\" className=\"btn border-white text-white\">Log out</button>\r\n                            </Nav>\r\n                            \r\n                        </Navbar.Collapse>\r\n                    </Navbar>\r\n            </Fragment>\r\n        )\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n  });\r\n\r\nexport default connect(mapStateToProps, {logout})(NavbarPrivate)","import React from 'react'\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nexport default function Head() {\r\n    return (\r\n        <Helmet>\r\n        <title>Nucleus</title>\r\n        <link rel=\"stylesheet\" href=\"https://bootswatch.com/4/litera/bootstrap.min.css\"/>\r\n      \r\n        {/* <!-- Custom styles for this template--> */}\r\n        {/* <link href=\"../../admin/css/sb-admin-2.min.css\" rel=\"stylesheet\" /> */}\r\n                     \r\n      </Helmet>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/avatar-user.c3d1a9a5.svg\";","import React, { Fragment, useEffect, useState } from 'react';\r\nimport { Image } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Avatar from '../../resources/img/avatar-user.svg';\r\n\r\nexport const Menu = ( {auth:{user}}) => {\r\n\r\n    const [datiUtente, setDatiUtente] = useState(\r\n        {name: '',\r\n    surname: ''}\r\n    )\r\n\r\n    useEffect(() => {\r\n\r\n        if(user != null) { setDatiUtente({name: user.Name, surname: user.Surname})}\r\n\r\n    }, [user])\r\n\r\n    const {name, surname} = datiUtente\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n                <div id=\"navNucleus-grad\" className=\"navbar navbar-expand-lg bg-secondary\">\r\n                \r\n                    \r\n                    <div className=\"collapse navbar-collapse ml-auto\" id=\"navbarNav\">\r\n                        <ul className=\"navbar-nav ml-auto \">\r\n                            <li className=\"nav-item active padding-menu-item text-right\">\r\n                                <Link className=\"nav-link text-white\" to='/dashboard'>Dashboard</Link>\r\n                            </li>\r\n                            <li className=\"nav-item padding-menu-item text-right\">\r\n                                <Link className=\"nav-link text-white\" to='/personal-list-projects'>Progetti caricati</Link>\r\n                            </li>\r\n                            <li className=\"nav-item padding-menu-item text-right\">\r\n                                <Link className=\"nav-link text-white\" to=\"/personal-list-candidacies\" >Candidature inviate</Link>\r\n                            </li>\r\n                            <li className=\"nav-item  text-right\" style={{width:'180px'}}>\r\n                                {/* <div className='my-auto' style={{float:'left'}}><Image src={Avatar} width=\"10%\" height='auto' /></div>\r\n                                <div style={{float:'left'}}><Link className=\"nav-link text-white\" to='/create-profile'><b>{name + ' ' + surname}</b></Link></div>    */}\r\n                            <Link className=\"nav-link text-white\" to='/create-profile'><Image src={Avatar} width=\"12%\" height='auto' className=\"mr-2 text-left\"/> <b>    {name + ' ' + surname}</b></Link>\r\n                           \r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps,{})(Menu)","export default __webpack_public_path__ + \"static/media/logo_nucleus_symbol.5f877e11.svg\";","import React, { Fragment, Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport Logo from '../../resources/img/logo_nucleus_symbol.svg';\r\nexport default class Footer extends Component {\r\n    render() \r\n    {\r\n        return( \r\n        <Fragment> \r\n            <footer id=\"footerNucleus\" className=\"pt-4\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row text-white\">\r\n                        <div style={{fontSize:'16px'}} className=\"col-md-2 offset-md-2 col-12 text-center text-md-left mb-3 mb-md-0\">\r\n                       \r\n                          <p className=\"mb-0\"><Link className=\"nounderline mr-md-5 text-center \" to='/'>Home</Link></p>\r\n                          <p className=\"mb-0\"><Link className=\"nounderline mr-md-5 text-center \" to='/list-calls'>Progetti</Link></p>\r\n                          <p className=\"mb-0\"><Link className=\"nounderline mr-md-5 text-center \" to='/come-funziona'>Come funziona</Link></p>\r\n                          <p className=\"mb-0\"><Link to=\"/sign\" className=\"nounderline mr-md-5 text-center\">Accedi o registrati</Link></p>\r\n                        </div>\r\n                        <div className=\"col-md-4 text-center col-12\">\r\n                          <img\r\n                            src={Logo}\r\n                            width=\"60\"\r\n                            height=\"auto\"\r\n                            className=\"d-inline-block align-top\"\r\n                            alt=\"React Bootstrap logo\"\r\n                          />\r\n                          <p className=\"mt-2\" style={{fontSize:'12px'}}>Copyright © 2021 Nucleus. All rights reserved.</p>\r\n                        </div>\r\n                        <div className=\"col-md-4 col-12 my-auto d-none d-md-block\">\r\n                          <p style={{fontSize:'16px'}}> info@nucleus.it</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n        </Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Col, Image, Row } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Avatar from '../../../../resources/img/avatar-user.svg';\r\n\r\nconst data = {\r\n    labels: [\r\n      'Red',\r\n      'Green',\r\n      'Yellow'\r\n    ],\r\n    datasets: [{\r\n      data: [300, 50, 100],\r\n      backgroundColor: [\r\n      '#FF6384',\r\n      '#36A2EB',\r\n      '#FFCE56'\r\n      ],\r\n      hoverBackgroundColor: [\r\n      '#FF6384',\r\n      '#36A2EB',\r\n      '#FFCE56'\r\n      ]\r\n    }]\r\n  };\r\n\r\n  const options = {\r\n    legend: {\r\n       display: false\r\n    }\r\n}\r\n\r\nexport const SummaryCandidature = ({candidacies}) => {\r\n\r\n    const [summaryCandidacies, setSummaryCandidacies] = useState({\r\n        Approved: 0,\r\n        InProcess:0,\r\n        Rejected:0\r\n    })\r\n\r\n    useEffect(() => {\r\n        \r\n        let loadApproved = candidacies.filter((element) => (element.Status === 'Accettato'))\r\n        let loadInProcess = candidacies.filter((element) => (element.Status === 'Valutazione'))\r\n        let loadRejected = candidacies.filter((element) => (element.Status === 'Rifiutato'))\r\n        \r\n        setSummaryCandidacies({\r\n            Approved: loadApproved.length,\r\n            InProcess: loadInProcess.length,\r\n            Rejected: loadRejected.length\r\n        })\r\n\r\n    }, [candidacies])\r\n\r\n    const { Approved, InProcess, Rejected } = summaryCandidacies\r\n\r\n    return (\r\n        <div id=\"dimensionCardLanding\" >\r\n            <div id=\"cardProjectOutside\" className=\"card mb-3 shadow p-3 bg-white\">\r\n                <Row id=\"cardProjectInside\" className=\"text-white mb-3 my-auto ml-0 mr-0\">\r\n                       {/* <div className=\"col-5 cardTitleLanding\"> */}\r\n                    <div className=\"col-4 text-center my-auto\">\r\n                        \r\n                            {/* <p className=\"card-title row no-gutters\" >Stato Candidature</p> */}\r\n                        \r\n                            <Image src={Avatar} width=\"60%\" height='auto' />\r\n                                \r\n\r\n                                {/* <div className=\"col-8\">\r\n                                    <p className=\"m-0\">Accettate:</p>\r\n                                    <p className=\"m-0\">In attesa:</p>\r\n                                    \r\n                                    <p className=\"m-0\">Rifiutate:</p>\r\n\r\n                                </div> */}\r\n                        \r\n                    \r\n                    </div>\r\n                    {/* <div className=\"vLine mt-3 col-1\"></div> */}\r\n                    <div className=\"vertical-line-white\"></div>\r\n                    <div className=\"col-7 my-auto\">\r\n                            <Row><Col><p style={{fontSize:'20px'}}><b><u>Hai effettuato {candidacies.length} candidature</u></b></p></Col></Row>\r\n                            <Row>\r\n                                <div className=\"col-10\">\r\n                                    <p className=\"mb-0\" >Accettate: </p>\r\n                                    <p className=\"mb-0\">In valutazione:</p>\r\n                                    <p className=\"mb-0\">Rifiutate:</p>\r\n                                </div>\r\n                                <div className=\"col-1\">\r\n                                    <p className=\"mb-0\">{Approved}</p>\r\n                                    <p className=\"mb-0\">{InProcess}</p>\r\n                                    <p className=\"mb-0\">{Rejected}</p>\r\n                                </div>\r\n                            </Row>  \r\n                                    \r\n                                \r\n                            \r\n                    </div>\r\n            \r\n                </Row>\r\n                <Row className='mt-4'>\r\n                    \r\n                    <div className=\"col-12 my-auto text-center\">\r\n                        <Link style={{width:'140px'}} type=\"button\" className=\"btn btn-primary btn-lg\" to={`/personal-list-candidacies`} >Scopri</Link>\r\n                    </div>\r\n                </Row>\r\n             </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SummaryCandidature\r\n","import axios from 'axios'\r\nimport { setAlert } from './alert';\r\n\r\nimport {\r\n    CREATE_CANDIDACY,\r\n    CANDIDACY_ERROR,\r\n    GET_CANDIDATES,\r\n    UPDATE_STATUS_CANDIDACY_BY_OWNER,\r\n    GET_CANDIDATURES_USER,\r\n    GET_CANDIDACIES_OF_THE_USER,\r\n    GET_CANDIDATURE,\r\n    UPDATE_CANDIDACY,\r\n    GET_CANDIDATES_CALL,\r\n    UPDATE_STATUS_CANDIDACY,\r\n    GET_CANDIDATES_CALL_SUMMARY\r\n} from './types';\r\n\r\n// User evaluate candidature for the call\r\nexport const updateCallStatus = (formData) => async dispatch =>{\r\n    const config = { headers: {'Content-Type' : 'application/json'}}\r\n    \r\n    \r\n    try{\r\n        console.log('formdata', formData)\r\n        const res = await axios.post(`/api/candidacy/update/status`, formData, config)\r\n        dispatch({\r\n            type: UPDATE_STATUS_CANDIDACY_BY_OWNER,\r\n            payload: res.data\r\n        }) \r\n    }catch(err){\r\n        dispatch({\r\n            type: CANDIDACY_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n          });\r\n    }\r\n}\r\n\r\n// Update candidature by id\r\nexport const updateCandidature = (formData) => async dispatch => {\r\n    const config = { headers: {'Content-Type' : 'application/json'}}\r\n\r\n    console.log('formdata', formData)\r\n    try{\r\n        const res = await axios.post(`/api/candidacy/update`, formData, config)\r\n \r\n        dispatch({\r\n            type: UPDATE_CANDIDACY,\r\n            payload: res.data\r\n        }) \r\n    }catch(err)\r\n    {\r\n        dispatch({\r\n            type: CANDIDACY_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n          });\r\n    }\r\n}\r\n\r\n\r\n// Get a candidature by Id\r\nexport const getCandidature = candidatureId => async dispatch => {\r\n    try{\r\n        const res = await axios.get(`/api/candidacy/usercandidature/${candidatureId}`)\r\n\r\n        dispatch({\r\n            type: GET_CANDIDATURE,\r\n            payload: res.data\r\n        })\r\n    }catch(err){\r\n\r\n        dispatch({\r\n           type: CANDIDACY_ERROR,\r\n           payload: { msg: err.response.statusText, status: err.response.status }\r\n         });\r\n   }\r\n}\r\n\r\n//Get the candidates for a certain project\r\nexport const getCandidatesCall = callId => async dispatch =>{\r\n    try{\r\n            const res = await axios.get(`/api/candidacy/users/${callId}`)\r\n\r\n            dispatch({\r\n                type: GET_CANDIDATES_CALL,\r\n                payload: res.data\r\n            })\r\n    } \r\n    catch(err){\r\n\r\n         dispatch({\r\n            type: CANDIDACY_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n          });\r\n    }\r\n}\r\n\r\n//Get all (accepter, not accepted, waiting) the candidates for a certain project\r\nexport const getCandidatesCallSummary = callId => async dispatch =>{\r\n    try{\r\n            const res = await axios.get(`/api/candidacy/users/summary/${callId}`)\r\n\r\n            console.log('res')\r\n            console.log(res.data)\r\n\r\n            dispatch({\r\n                type: GET_CANDIDATES_CALL_SUMMARY,\r\n                payload: res.data\r\n            })\r\n    } \r\n    catch(err){\r\n\r\n         dispatch({\r\n            type: CANDIDACY_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n          });\r\n    }\r\n}\r\n\r\n//Get the candidatures of the user\r\nexport const getCandidaturesOfTheUser = () => async dispatch => {\r\n    try{\r\n        const res = await axios.get('/api/candidacy/user')\r\n\r\n        dispatch({\r\n            type: GET_CANDIDACIES_OF_THE_USER,\r\n            payload: res.data\r\n        })\r\n    }\r\n    catch(err){\r\n\r\n        dispatch({\r\n            type: CANDIDACY_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n// Create candidature\r\nexport const createCandidature = (formData) => async dispatch => {\r\n\r\n    const config = { headers: {'Content-Type' : 'application/json'}}\r\n    \r\n    try{ \r\n        \r\n        console.log('***10', formData)\r\n        const res = await axios.post(`/api/candidacy`, formData, config)\r\n \r\n        dispatch({\r\n            type: CREATE_CANDIDACY,\r\n            payload: res.data\r\n        }) \r\n    }\r\n    catch(err)\r\n    {\r\n        dispatch({\r\n            type: CANDIDACY_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n          });\r\n    }\r\n}\r\n\r\n// Create a candidacy\r\nexport const createCandidacy = (id, stato, history) => async dispatch =>{\r\n\r\n    const data = {id, stato}\r\n    \r\n    // console.log(id)\r\n    // console.log(stato)\r\n    // console.log(data.id)\r\n    // console.log(data.stato)\r\n    try{\r\n\r\n        const config = {\r\n            headers: {'Content-Type' : 'application/json'}\r\n        }\r\n\r\n        const res = await axios.post(`/api/candidacy`, data, config)\r\n\r\n        dispatch({\r\n            type: CREATE_CANDIDACY ,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(setAlert('Candidatura registrata','success'))\r\n\r\n        history.push('/dashboard')\r\n\r\n    }catch(err)\r\n    {\r\n        dispatch({\r\n            type: CANDIDACY_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n          });        \r\n    }\r\n}\r\n\r\n//Get candidates for a specific project\r\nexport const getCandidates = candidateId => async dispatch => {\r\n    try {\r\n\r\n        // console.log(candidateId)\r\n        const res = await axios.get(`/api/candidacy/${candidateId}`)\r\n\r\n        dispatch({\r\n            type: GET_CANDIDATES,\r\n            payload: res.data\r\n        })\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: CANDIDACY_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n          });\r\n    }\r\n}\r\n\r\n//Change status candidacy\r\nexport const changeStatusCandidacy = (candidacyId, new_status) => async dispatch => {\r\n    try {\r\n\r\n        console.log(candidacyId)\r\n        console.log(new_status)\r\n\r\n        const data = {candidacyId, new_status}\r\n        const config = {\r\n            headers: {'Content-Type' : 'application/json'}\r\n        }\r\n        const res = await axios.post(\"/api/candidacy/update_status\", data, config)\r\n        \r\n        dispatch({\r\n            type: UPDATE_STATUS_CANDIDACY ,\r\n            payload: res.data\r\n        })\r\n\r\n    }catch(err)\r\n    {\r\n        dispatch({\r\n            type: CANDIDACY_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n          });        \r\n    }\r\n}\r\n\r\n//Get the projects where the user is candidate \r\nexport const getCandidaturesUser = () => async dispatch => {\r\n    try {\r\n\r\n        console.log(\"hello\")\r\n        // console.log(candidateId)\r\n        const res = await axios.get(`/api/candidacy/candidatures_user`)\r\n\r\n        dispatch({\r\n            type: GET_CANDIDATURES_USER,\r\n            payload: res.data\r\n        })\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: CANDIDACY_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n          });\r\n    }\r\n}","import axios from 'axios'\r\nimport {setAlert} from './alert'\r\n\r\nimport {\r\n    GET_PROJECTS,\r\n    PROJECT_ERROR,\r\n    UPDATE_PROFILE,\r\n    GET_PROJECT_SHOWCASE,\r\n    UPDATE_LIKES,\r\n    DELETE_PROJECT,\r\n    ADD_PROJECT,\r\n    GET_PROJECT,\r\n    GET_PROJECTS_SHOWCASE,\r\n    GET_PROJECTS_OF_THE_USER, \r\n    GET_PROJECT_INDUSTRIES,\r\n    ADD_CALL_PROJECT,\r\n    GET_PROJECT_INDUSTRY,\r\n    PROJECT_INFO_ERROR,\r\n    GET_CALLS,\r\n    GET_CALL_INFORMATION,\r\n    GET_USER_CALLS,\r\n    GET_PUBLIC_CALLS,\r\n    GET_OWNER_PROJECT\r\n} from './types'\r\n\r\n//Get the calls made by the user\r\nexport const getUserCalls = () => async dispatch => {\r\n    try{\r\n        const res = await axios.get('/api/projects/usercalls')\r\n        dispatch({\r\n            type: GET_USER_CALLS,\r\n            payload: res.data\r\n         })\r\n\r\n    }catch(err)\r\n    {    dispatch({\r\n            type: PROJECT_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n          });\r\n    }\r\n}\r\n\r\n\r\n//Get the projects of the user\r\nexport const getProjectsofTheUser = () => async dispatch => {\r\n    try{    \r\n         const res = await axios.get('/api/projects/user');\r\n\r\n         dispatch({\r\n            type: GET_PROJECTS_OF_THE_USER,\r\n            payload: res.data\r\n         })\r\n\r\n    }catch(err)\r\n    {    dispatch({\r\n            type: PROJECT_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n          });\r\n    }\r\n}\r\n\r\n//Get the calls for the projects\r\nexport const getCalls = () => async dispatch => {\r\n    try{    \r\n        const res = await axios.get('/api/projects/calls');\r\n\r\n         dispatch({\r\n            type: GET_CALLS,\r\n            payload: res.data\r\n         })\r\n\r\n    }catch(err)\r\n    {    dispatch({\r\n            type: PROJECT_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n          });\r\n    }\r\n}\r\n\r\n//Get the public\r\nexport const getPublicCalls = () => async dispatch => {\r\n    try{    \r\n        const res = await axios.get('/api/projects/public-calls');\r\n\r\n         dispatch({\r\n            type: GET_PUBLIC_CALLS,\r\n            payload: res.data\r\n         })\r\n\r\n    }catch(err)\r\n    {    dispatch({\r\n            type: PROJECT_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n          });\r\n    }\r\n}\r\n\r\n//Get projects\r\nexport const getProjects = () => async dispatch =>{\r\n    try{\r\n        const res = await axios.get('/api/projects')\r\n\r\n        dispatch({\r\n            type: GET_PROJECTS,\r\n            payload: res.data\r\n        })\r\n    }catch(err)\r\n    {\r\n        dispatch({\r\n            type: PROJECT_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n          });\r\n    }\r\n\r\n}\r\n\r\n//Get projects for Showcase\r\nexport const getProjectsShowcase = () => async dispatch => {\r\n    try{\r\n\r\n        const res = await axios.get('/api/projects/showcase')\r\n\r\n        dispatch({\r\n            type: GET_PROJECTS_SHOWCASE,\r\n            payload:res.data\r\n        })\r\n    }\r\n    catch(err)\r\n    {\r\n        dispatch({\r\n            type: PROJECT_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n          });\r\n    }\r\n}\r\n\r\n//get project\r\nexport const getProjectById = projectId => async dispatch => {\r\n    try{\r\n        console.log(\"I am here\")\r\n        const res = await axios.get(`/api/projects/${projectId}`)\r\n\r\n        console.log(\"donwload\")\r\n        console.log(res.data)\r\n\r\n        dispatch({\r\n            type: GET_PROJECT,\r\n            payload: res.data\r\n        })\r\n\r\n    }catch(err)\r\n    {\r\n        dispatch({\r\n            type: PROJECT_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n          });\r\n    }\r\n}\r\n\r\n//get project PUBLIC\r\nexport const getProjectPublicById = projectId => async dispatch => {\r\n    try{\r\n        const res = await axios.get(`/api/projects/showcase/${projectId}`)\r\n\r\n        dispatch({\r\n            type: GET_PROJECT_SHOWCASE,\r\n            payload: res.data\r\n        })\r\n    }catch(err)\r\n    {\r\n        dispatch({\r\n            type: PROJECT_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n          });\r\n    }\r\n}\r\n\r\nexport const getProjectOwner = projectId => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/projects/owner/${projectId}`)\r\n    dispatch({\r\n        type: GET_OWNER_PROJECT,\r\n        payload: res.data\r\n    })\r\n  } catch (err) {\r\n    dispatch({\r\n        type: PROJECT_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n}\r\n\r\n\r\n//get Call informtion\r\nexport const getCallInformation = callId => async dispatch => {\r\n    try{\r\n\r\n        console.log('**11', 'call effettuata')\r\n        const res = await axios.get(`/api/projects/call/${callId}`)\r\n        console.log('**11', 'call ritornata')\r\n\r\n\r\n        dispatch({\r\n            type: GET_CALL_INFORMATION,\r\n            payload: res.data\r\n        })\r\n\r\n    }catch(err)\r\n    {\r\n        dispatch({\r\n            type: PROJECT_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n          });\r\n    }\r\n}\r\n\r\n\r\n//add Like\r\nexport const addLike = projectId => async dispatch =>{\r\n    try{\r\n        const res = await axios.put(`/api/projects/like/${projectId}`)\r\n\r\n        dispatch({\r\n            type: UPDATE_LIKES,\r\n            payload: {projectId, likes: res.data}\r\n        })\r\n    }catch(err)\r\n    {\r\n        dispatch({\r\n            type: PROJECT_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n          });\r\n    }\r\n}\r\n\r\n// Remove like\r\nexport const removeLike = projectId => async dispatch =>{\r\n    try{\r\n        const res = await axios.put(`/api/projects/like/${projectId}`)\r\n\r\n        dispatch({\r\n            type: UPDATE_LIKES,\r\n            payload: {projectId, likes: res.data}\r\n        })\r\n    }catch(err)\r\n    {\r\n        dispatch({\r\n            type: PROJECT_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n          });\r\n    }\r\n\r\n}\r\n\r\n// Remove project\r\nexport const deleteProject = (projectId, history = null) => async dispatch =>{\r\n    try{\r\n        await axios.delete(`/api/projectS/${projectId}`)\r\n\r\n        dispatch({\r\n            type: DELETE_PROJECT,\r\n            payload: projectId\r\n        })\r\n\r\n        dispatch(setAlert('Project Removed', 'success'))\r\n\r\n        if(history != null) {\r\n            history.push('/dashboard')\r\n        }\r\n\r\n    }catch(err)\r\n    {\r\n        dispatch({\r\n            type: PROJECT_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n          });\r\n    }\r\n\r\n}\r\n\r\n// Add project\r\n// export const addProject = formData => async dispatch =>{\r\n    \r\n//     const config = {\r\n//         headers: {\r\n//             'Content-Type' : 'application/json'\r\n//         }\r\n//     }\r\n\r\n//     try{\r\n//          const res = await axios.post(`/api/projects`, formData, config)\r\n\r\n//         dispatch({\r\n//             type: ADD_PROJECT,\r\n//             payload: res.data\r\n//         })\r\n\r\n//         dispatch(setAlert('Project Removed', 'success'))\r\n//     }catch(err)\r\n//     {\r\n//         dispatch({\r\n//             type: PROJECT_ERROR,\r\n//             payload: { msg: err.response.statusText, status: err.response.status }\r\n//           });\r\n//     }\r\n\r\n// }\r\n\r\n\r\n// //Create or update project\r\n// //NOTE: history is used to redirect then to the Dashboard\r\n// //NOTE: the edit parametere is used to know if the project is edited or created\r\n// export const createProject = (formData, history, edited = false) => async dispatch =>{\r\n   \r\n//      const config = {\r\n\r\n//         headers: {\r\n\r\n//             'Content-Type' : 'application/json'\r\n//         }\r\n//     } \r\n\r\n    \r\n//     try{\r\n\r\n//         const res = await axios.post(`/api/projects`, formData, config)\r\n\r\n//         dispatch({\r\n//             type: ADD_PROJECT,\r\n//             payload: res.data\r\n//         })\r\n\r\n//         dispatch(setAlert(edited ? 'Project Updated' : 'Project Created', 'success'))\r\n\r\n//         // Redirect the user when a new project is created\r\n//         if(!edited) {\r\n//             history.push('/dashboard')\r\n//         }\r\n//     }\r\n//     catch(err)\r\n//     {\r\n//         const errors = err.response.data.errors\r\n        \r\n//         //Show the errors\r\n//         if(errors){\r\n//             errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n//         }\r\n\r\n//         dispatch({\r\n//             type: PROJECT_ERROR,\r\n//             payload: { msg: err.response.statusText, status: err.response.status }\r\n//           });\r\n//     }\r\n\r\n// }\r\n\r\n\r\n//Create or update project\r\n//NOTE: history is used to redirect then to the Dashboard\r\n//NOTE: the edit parametere is used to know if the project is edited or created\r\nexport const createProject = (formData, history, edited = false) => async dispatch =>{\r\n   \r\n    const config = {\r\n       headers: {'Content-Type' : 'application/json'}\r\n    } \r\n\r\n   \r\n   try{                \r\n       const res = await axios.post(`/api/projects`, formData, config)\r\n\r\n       dispatch({\r\n           type: ADD_PROJECT,\r\n           payload: res.data\r\n       })\r\n       console.log('new project', res.data)\r\n       dispatch(setAlert(edited ? 'Project Updated' : 'Project Created', 'success'))\r\n\r\n    //    Redirect the user when a new project is created\r\n        history.push(`/create-candidature/${res.data._id}`)\r\n   }\r\n   catch(err)\r\n   {\r\n       const errors = err.response.data.errors\r\n       \r\n       //Show the errors\r\n       if(errors){\r\n           errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n       }\r\n\r\n       dispatch({\r\n           type: PROJECT_ERROR,\r\n           payload: { msg: err.response.statusText, status: err.response.status }\r\n         });\r\n   }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n//Create call for a project\r\n//NOTE: history is used to redirect then to the Dashboard\r\n//NOTE: the edit parametere is used to know if the project is edited or created\r\nexport const createCallProject = (formData, history, edited = false) => async dispatch =>{\r\n   \r\n    const config = {\r\n       headers: {'Content-Type' : 'application/json'}\r\n    } \r\n    console.log(\"sent the creation call\", formData)    \r\n   try{         \r\n          \r\n       const res = await axios.post(`/api/projects/new-call`, formData, config)\r\n\r\n       dispatch({\r\n           type: ADD_CALL_PROJECT,\r\n           payload: res.data\r\n       })\r\n\r\n       dispatch(setAlert(edited ? 'Project Updated' : 'Call per il progetto creata', 'success'))\r\n\r\n    //    Redirect the user when a new project is created\r\n    //    if(!edited) {\r\n    //        history.push('/newversion/create-candidature')\r\n    //    }\r\n   }\r\n   catch(err)\r\n   {\r\n       const errors = err.response.data.errors\r\n       \r\n       //Show the errors\r\n       if(errors){\r\n           errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n       }\r\n\r\n       dispatch({\r\n           type: PROJECT_ERROR,\r\n           payload: { msg: err.response.statusText, status: err.response.status }\r\n         });\r\n   }\r\n\r\n}\r\n\r\n//get project\r\nexport const getProjectIndustryById = projectId => async dispatch => {\r\n    try{\r\n        const res = await axios.get(`/api/projects/industry/${projectId}`)\r\n\r\n        console.log(\"res\")\r\n        console.log(res.data)\r\n\r\n        dispatch({\r\n            type: GET_PROJECT_INDUSTRY,\r\n            payload: res.data\r\n        })\r\n\r\n    }catch(err)\r\n    {\r\n        dispatch({\r\n            type: PROJECT_INFO_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n          });\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport {Tabs, Image, Tab, Form, Button, Container, Row, Col, Card, ListGroup, ListGroupItem} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport { faEarlybirds } from '@fortawesome/free-brands-svg-icons';\r\nimport { getCandidatesCallSummary } from '../../../../actions/candidacy';\r\n  /**\r\n   * \r\n   * guideline graph: https://medium.com/swlh/data-visualization-with-react-chart-js-be5e238bc302 \r\n   */\r\nexport const SummaryCall = ({call, getCandidatesCallSummary, candidacy: {candidatesSummary}}) => {\r\n\r\n    const [summaryCall, setSummaryCall] = useState({\r\n        Approved: 0,\r\n        InProcess:0,\r\n        Rejected:0\r\n    })\r\n\r\n    let Rej = 0\r\n    let Appr = 0\r\n    let InProc = 0\r\n\r\n   \r\n\r\n    const data = {\r\n        labels: [\r\n          'Rifiutate',\r\n          'Accettate',\r\n          'In Attesa'\r\n        ],\r\n        datasets: [{\r\n          data: [Rej, Appr, InProc],\r\n          backgroundColor: [\r\n          '#FF6384',\r\n          '#36A2EB',\r\n          '#FFCE56'\r\n          ],\r\n          hoverBackgroundColor: [\r\n          '#FF6384',\r\n          '#36A2EB',\r\n          '#FFCE56'\r\n          ]\r\n        }]\r\n      };\r\n    \r\n      const options = {\r\n        legend: {\r\n           display: false\r\n        }\r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n        candidatesSummary.map((element) => {\r\n                    if(element.candidatureId === call._id)\r\n                    {\r\n                        if(element.data.length === 0){\r\n                            setSummaryCall({\r\n                                Approved: 0,\r\n                                InProcess: 0,\r\n                                Rejected: 0\r\n                            })\r\n                        }\r\n                        else{\r\n\r\n                            console.log('data', element)\r\n                            let loadApproved = element.data.filter((candidate) => (candidate.Status === 'Accettato'))\r\n                            let loadInProcess = element.data.filter((candidate) => (candidate.Status === 'Valutazione'))\r\n                            let loadRejected = element.data.filter((candidate) => (candidate.Status === 'Rifiutato'))\r\n\r\n                            setSummaryCall({\r\n                                Approved: loadApproved.length,\r\n                                InProcess: loadInProcess.length,\r\n                                Rejected: loadRejected.length\r\n                            })\r\n\r\n\r\n                        }\r\n                    }\r\n        })\r\n\r\n    }, [candidatesSummary])\r\n\r\n    const { Approved, InProcess, Rejected } = summaryCall\r\n\r\n    useEffect(()=>{\r\n        if(call != null){\r\n            getCandidatesCallSummary(call._id)\r\n        }\r\n    }, [call, getCandidatesCallSummary])\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* {console.log(project.Project)} */}\r\n\r\n            <div id=\"cardProjectOutside\" className=\"card  shadow-lg p-3 mb-5 bg-white \">\r\n                <Row id=\"cardProjectInside\" className=\"no-gutters text-white mb-3\">\r\n                    <div className=\"col-md-4 my-auto text-center\">\r\n                    {/* <img src=\"image.jpg\" className=\"card-img\" alt=\"...\" /> */}\r\n                         <h2>{call.Project.Name}</h2>\r\n                    </div>\r\n                    <div className=\"col-md-5\">\r\n                        <div className=\"card-body p-0\">\r\n                            {/* <Row className=\"card-title no-gutters \"><h2 className=\"text-center text-md-left\"><u>{call.Position.Position}</u></h2></Row> */}\r\n                            {(call.Position._id === '6074b0c6e25f3348639fb03a') ? null : <Row className=\"card-title no-gutters \"><h2 className=\"text-center text-md-left\"><u>{call.Position.Position}</u></h2></Row>}\r\n                            <Row className=\"card-text no-gutters\">\r\n                                <div className=\"col-md-12 col-12 text-center text-md-left\">\r\n                                    <p className=\"m-0\"><span className=\"font-weight-bold\">Settore:</span> {call.Industry}</p>\r\n                                    <p className=\"m-0\"><span className=\"font-weight-bold\">Fase:</span> {call.Project.Development_Stage.Development_Stage}</p>\r\n                                    {/* <p className=\"m-0\"><span className=\"font-weight-bold\">Stato:</span> {call.Project.Status}</p> */}\r\n                                </div>\r\n                            </Row>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-3 my-auto text-center\">\r\n                        <Link style={{width:'170px'}} type=\"button\" className=\"btn btn-primary btn-lg\" to={`/list-candidate/call/${call._id}`} >Candidature</Link>\r\n                    </div>\r\n                </Row>\r\n                <Row className=\"no-gutters\">\r\n                    <div className=\"col-12 col-md-4\">\r\n                        \r\n                        <Doughnut data={data} options={options}/>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-8\">\r\n                        <div className=\"card-body p-0\">\r\n                            <Row className=\"card-title no-gutters\" ><p style={{fontSize:'20px'}}><b>Stato candidature</b></p></Row>\r\n                            <Row className=\"card-text no-gutters\">\r\n                                <div className=\"col-10\">\r\n                                    <p className=\"mb-0\" >Accettate: </p>\r\n                                    <p className=\"mb-0\">In valutazione:</p>\r\n                                    <p className=\"mb-0\">Rifiutate:</p>\r\n                                </div>\r\n                                <div className=\"col-1\">\r\n                                    <p className=\"mb-0\">{Approved}</p>\r\n                                    <p className=\"mb-0\">{InProcess}</p>\r\n                                    <p className=\"mb-0\">{Rejected}</p>\r\n                                </div>\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    candidacy: state.candidacy\r\n})\r\n\r\nexport default connect(mapStateToProps, {getCandidatesCallSummary})(SummaryCall)\r\n","/**\r\n * Dashboard of the User\r\n */\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport React, {Fragment, useEffect} from 'react'\r\nimport Navbar from '../../components/Navbar'\r\nimport Head from '../../components/Head'\r\nimport Menu from '../../components/Menu'\r\nimport { connect } from 'react-redux'\r\nimport Footer from '../../components/Footer'\r\nimport {Tabs, Tab, Form, Button, Container, Row, Col, Card, ListGroup, ListGroupItem} from 'react-bootstrap';\r\nimport SummaryCandidature from './components/SummaryCandidature'\r\nimport { getCandidaturesOfTheUser } from '../../../actions/candidacy';\r\n\r\nimport { getUserCalls } from '../../../actions/project';\r\nimport SummaryCall from './components/SummaryCall';\r\nimport Spinner from '../../../resources/differentResources/Spinner' \r\n/**\r\n * TODO:  Call to get the projects of the user from the Database\r\n */\r\n\r\nexport const Dashboard = ( { getCandidaturesOfTheUser, getUserCalls, candidacy: { userCandidacies, userCandidaciesLoading }, project: {userCalls}  }\r\n    ) => {\r\n\r\n        useEffect(() => {\r\n            getUserCalls()\r\n            getCandidaturesOfTheUser()        \r\n        }, [getCandidaturesOfTheUser])\r\n\r\n    return (\r\n        <Fragment>\r\n            {/**Definition of the upper part of the page */}\r\n            <Head />\r\n            <Navbar />\r\n            <Menu />\r\n            {/** END */}\r\n\r\n            \r\n\r\n            <Container fluid id=\"dashboardBackgroundRectangle\">\r\n              <Row className=\" pt-5\">\r\n                                <div className=\"col-md-6 offset-md-3 col-12 mb-3\"> <h3 className=\"text-white display-4 \">Status generale candidature</h3> </div>\r\n                 </Row>\r\n                \r\n                <Row className=\"pb-5\">\r\n                    <div className=\"col-10 offset-1 col-md-6 offset-md-3\">\r\n                        <SummaryCandidature candidacies= {userCandidacies} />\r\n                    </div>\r\n                </Row>\r\n                \r\n                { userCandidaciesLoading ? (<Spinner />) :(\r\n                        \r\n                        userCalls.length !=0 ? (\r\n                    <Fragment>\r\n                            <Row className=\"pt-4 pb-2\">\r\n                                <div className=\"col-md-6 offset-md-3 col-12 mb-3\"> <h3 className=\"text-white display-4 \">I miei progetti</h3> </div>\r\n                            </Row> \r\n                            {\r\n                                 userCalls.map((calls) => (\r\n                                    calls.map((call, index) => (\r\n                                        <Row >\r\n                                            <div key={index} className=\"col-10 offset-1 col-md-6 offset-md-3\">\r\n                                                <SummaryCall key={call._id} call={call} />\r\n                                            </div>\r\n                                        </Row>\r\n                                    ))))\r\n                            }  \r\n                    </Fragment>\r\n                    \r\n                    ) : (\r\n                            <Fragment> \r\n                                <Row className=\"pt-4 pb-2\">\r\n                                <div className=\"col-md-6 offset-md-3 col-12 mb-3\"> <h3 className=\"text-white display-4 \">I miei progetti</h3> </div>\r\n                                <div className=\"col-10 offset-1 col-md-9 offset-md-3 text-white\"><h5>Non hai creato nessun progetto!   <Link style={{width:'340px'}} type=\"button\" className=\"btn btn-primary btn-lg\" to={`/create-project`} >Crea nuovo progetto</Link></h5></div>\r\n                                </Row>\r\n                            </Fragment>\r\n                            )\r\n                        )\r\n                    }   \r\n\r\n                \r\n                \r\n                \r\n            </Container>\r\n\r\n            <Footer/>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    candidacy: state.candidacy,\r\n    project: state.project\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    \r\n    getCandidaturesOfTheUser,\r\n    getUserCalls\r\n\r\n})(Dashboard)\r\n","import axios from 'axios'\r\n\r\nimport {\r\n    GET_POSITIONS_USER,\r\n    COMPLEMENTARYINFO_ERROR,\r\n    GET_INDUSTRIES_USER,\r\n    GET_DEV_STAGES,\r\n    GET_ANALYSIS_QUESTIONS_PROJECT\r\n} from './types';\r\nimport {setAlert} from './alert'\r\n\r\n//Get all the positions\r\nexport const getAllPositions = () => async dispatch => {\r\n    try{\r\n        const res = await axios.get('/api/users/positions');\r\n        dispatch({type: GET_POSITIONS_USER, payload: res.data});\r\n    }\r\n    catch(err)\r\n    {\r\n        const errors = err.response.data.errors;\r\n        //Show the errors\r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n        dispatch({type: COMPLEMENTARYINFO_ERROR, payload: { msg: err.response.statusText, status: err.response.status}});\r\n    }\r\n}\r\n\r\n//Get all the industries available\r\nexport const getAllIndustries = () => async dispatch => {\r\n    try{\r\n        const res = await axios.get('/api/users/industries');\r\n        dispatch({type: GET_INDUSTRIES_USER, payload: res.data})\r\n    }\r\n    catch(err)\r\n    {\r\n       const errors = err.response.data.errors;\r\n\r\n       //Show the errors\r\n       if(errors){errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))}\r\n       dispatch({type: COMPLEMENTARYINFO_ERROR, payload: { msg: err.response.statusText, status: err.response.status}});\r\n    }\r\n}\r\n\r\nexport const getAllDevelopmentStages = () => async dispatch => {\r\n    try{\r\n        const res = await axios.get('/api/users/dev-stages');\r\n        dispatch({type: GET_DEV_STAGES, payload: res.data})\r\n    }\r\n    catch(err){\r\n        const errors = err.response.data.errors;\r\n\r\n       //Show the errors\r\n       if(errors){errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))}\r\n       dispatch({type: COMPLEMENTARYINFO_ERROR, payload: { msg: err.response.statusText, status: err.response.status}});\r\n    }\r\n}\r\n\r\nexport const getAllAnalysisQuestions = () => async dispatch => {\r\n    try{\r\n        const res = await axios.get('/api/users/analysis-questions');\r\n        dispatch({type: GET_ANALYSIS_QUESTIONS_PROJECT, payload: res.data})\r\n    }\r\n    catch(err){\r\n        const errors = err.response.data.errors;\r\n\r\n        //Show the errors\r\n        if(errors){errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))}\r\n        dispatch({type: COMPLEMENTARYINFO_ERROR, payload: { msg: err.response.statusText, status: err.response.status}});\r\n    }\r\n}\r\n\r\n","import axios from 'axios'\r\nimport { setAlert } from './alert';\r\n\r\nimport {\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  GET_PROFILES,\r\n  CLEAR_PROFILE,\r\n  GET_INDUSTRIES_PROFILE\r\n} from './types';\r\n\r\n// Get current users profile\r\nexport const getCurrentProfile = () => async dispatch => {\r\n    \r\n  \r\n  try {\r\n    \r\n    const res = await axios.get('/api/profile/me')\r\n    \r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n    \r\n  } catch (err) {\r\n        console.log(err)\r\n     dispatch({\r\n       type: PROFILE_ERROR,\r\n       payload: { msg: err.response.statusText, status: err.response.status }\r\n     });\r\n  }\r\n};\r\n\r\n//Get all profiles\r\nexport const getProfiles  = () => async dispatch => {\r\n\r\n  dispatch({type: CLEAR_PROFILE}); // To clean before to see the other profiles\r\n\r\n  try {\r\n    \r\n    const res = await axios.get('/api/profile')\r\n\r\n    dispatch({\r\n      type: GET_PROFILES,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n//Get Industry User by Profile ID\r\nexport const getProfileIndustries = profileId => async dispatch => {\r\n  try{\r\n    const res = await axios.get(`/api/profile/industry/${profileId}`)\r\n    dispatch({type: GET_INDUSTRIES_PROFILE, payload: res.data})\r\n  }\r\n  catch(err) {\r\n    dispatch({type: PROFILE_ERROR,payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n}\r\n\r\n//Get profile by ID\r\nexport const getProfileById  = userId => async dispatch => {\r\n\r\n  try {    \r\n    const res = await axios.get(`/api/profile/user/${userId}`)\r\n    console.log(res)\r\n    \r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n    \r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProfile = (\r\n  formData,\r\n  history,\r\n  id\r\n) => async dispatch => {\r\n  try {\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type' : 'application/json'\r\n      }\r\n    }\r\n\r\n    console.log('Data that are sent ')\r\n    console.log(formData)\r\n    //make the request\r\n    const res = await axios.post('/api/profile', formData, config)\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    // dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\r\n\r\n    // if (!edit) {\r\n      console.log('CREATE PROFILE', id)\r\n     \r\n      if(id !== undefined)\r\n      {\r\n        if(id === 'create-project') {\r\n          history.push('/create-project')\r\n        }\r\n        else {\r\n          history.push(`/view-call/${id}`)\r\n        }\r\n      }\r\n      else \r\n      {\r\n        history.push('/dashboard')\r\n      }\r\n    // }\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Delete account & profile\r\n\r\n","/**\r\n * Page where the user can create his profile \r\n * \r\n * \r\n * HOW I MANAGED THE DATE: https://reactdatepicker.com/ \r\n */\r\n\r\nimport dateFnsFormat from 'date-fns/format'\r\nimport dateFnsParse from 'date-fns/parse'\r\nimport moment from 'moment'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Container, Form, Row } from 'react-bootstrap'\r\nimport { DateUtils } from 'react-day-picker'\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput'\r\nimport 'react-day-picker/lib/style.css'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { updateUser } from '../../../../../actions/auth'\r\nimport { getAllIndustries, getAllPositions } from '../../../../../actions/complementaryInfo'\r\nimport { createProfile, getCurrentProfile, getProfileIndustries } from '../../../../../actions/profile'\r\nimport Footer from '../../../../components/Footer'\r\nimport Head from '../../../../components/Head'\r\nimport Menu from '../../../../components/Menu'\r\nimport Navbar from '../../../../components/Navbar'\r\n\r\nfunction parseDate(str, format, locale) {\r\n  const parsed = dateFnsParse(str, format, new Date(), { locale });\r\n  if (DateUtils.isDate(parsed)) {\r\n    return parsed;\r\n  }\r\n  return undefined;\r\n}\r\n\r\nfunction formatDate(date, format, locale) {\r\n  return dateFnsFormat(date, format, { locale });\r\n}\r\n\r\n\r\n\r\nexport const CreateProfile = ({createProfile, history, auth:{user}, getCurrentProfile, profile:{profile, loading, industries, loadingIndustries}, updateUser, getAllPositions, complementaryInfo, getAllIndustries, getProfileIndustries, match }) => {\r\n    \r\n\r\n    const [myDate, setMyDate] = useState(new Date(1996, 1, 1))\r\n    function handleChange(newDate)\r\n    {\r\n        setMyDate(newDate)\r\n        console.log(myDate)\r\n    }\r\n\r\n    const onChange = e => setProfileFormData({...profileFormData, [e.target.name]: e.target.value});\r\n    const onChangeUserData = e => setUserFormData({...userFormData,[e.target.name]: e.target.value});\r\n    // const onChangeDate = date => { \r\n    //                             setStartDate(date);\r\n    //                             profileFormData.Date_Of_Birth = date;\r\n    // }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        // profileFormData.Date_Of_Birth = myDate;  \r\n        \r\n        console.log(profileFormData)\r\n\r\n        updateUser(userFormData);\r\n        createProfile(profileFormData, history, match.params.id)\r\n\r\n        \r\n    }\r\n\r\n    const [startDate, setStartDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n        getAllPositions();\r\n        getAllIndustries();\r\n\r\n        if(profile!=null) {getProfileIndustries(profile._id)}\r\n        \r\n        \r\n        if(user!=null){\r\n            setUserFormData({\r\n                Name: user.Name,\r\n                Surname: user.Surname,\r\n                Email: user.Email\r\n            })\r\n        }\r\n\r\n        setProfileFormData({\r\n           \r\n            City_Living: (profile === null) ? '' : (loading || !profile.City_Living ? '' : profile.City_Living),\r\n            Biography: (profile === null) ? '' : (loading || !profile.Biography ? '' : profile.Biography),\r\n            Position: (profile === null) ? '' : (loading || (profile.Position === null) ? '' : (profile.Position._id)),\r\n            Industry: (industries === null) ? '' : (loadingIndustries || (industries === null) ? '' : (industries.Industry._id)),\r\n            Skills: (profile === null) ? '' : (loading || (profile.Skills === null) ? '' : (profile.Skills.join())),\r\n            Telephone: (profile === null) ? '' : (loading || !profile.Telephone ? '' : profile.Telephone) ,             \r\n            Birthday: (profile === null) ? '' : (loading || !profile.Birthday ? '' : profile.Birthday)              \r\n        })\r\n\r\n        // if((profile !== null)&&(!loading)&&(profile.Date_Of_Birth)){\r\n        //      setMyDate(new Date((moment(profile.Date_Of_Birth)).format('d/MM/yyyy'))) \r\n        //     console.log('birth',new Date((moment(profile.Date_Of_Birth)).format('d/MM/yyyy')))}\r\n\r\n    },[getAllPositions, getAllIndustries, getCurrentProfile,getProfileIndustries, loading, loadingIndustries])\r\n\r\n    const [userFormData, setUserFormData] = useState({\r\n        Name: '',\r\n        Surname: '',\r\n        Email: ''\r\n    })\r\n\r\n    const [profileFormData, setProfileFormData] = useState({\r\n        Birthday: '',\r\n        City_Living: '',\r\n        Biography:'',\r\n        Position: '',\r\n        Industry:'',\r\n        Skills:'',\r\n        Telephone:''\r\n    })\r\n\r\n    const {Name, Surname, Email} = userFormData;\r\n    const {Birthday, City_Living, Biography, Position, Industry, Skills, Telephone} = profileFormData;\r\n    const FORMAT = 'dd/MM/yyyy';\r\n\r\n    return (\r\n        <div >\r\n            <Head />\r\n            <Navbar />\r\n            <Menu />\r\n            <Container id=\"containerFirstLanding\" fluid>\r\n                <Row>\r\n                    <div className=\"col-10 offset-1 col-md-6 offset-md-3 \" id=\"containerFormCreateProject\">\r\n                         <h1 className=\"text-center text-white display-4\">Il mio profilo</h1>\r\n                        <Form onSubmit = {e => onSubmit(e)}>\r\n                            <Form.Group>\r\n                                <Form.Label className=\"text-white\">Nome*</Form.Label>\r\n                                <Form.Control name=\"Name\" type=\"text\" value={Name} placeholder=\"Nome\" onChange={e => onChangeUserData(e)} required /> \r\n                                <br />\r\n                                <Form.Label className=\"text-white\">Cognome*</Form.Label>\r\n                                <Form.Control name=\"Surname\" type=\"text\" value={Surname} placeholder=\"Cognome\" onChange={e => onChangeUserData(e)} required /> \r\n                                <br />\r\n                                <Form.Label className=\"text-white\">Email*</Form.Label>\r\n                                <Form.Control name=\"Email\" type=\"email\" value={Email} placeholder=\"Enter email\" onChange={e => onChangeUserData(e)} required />\r\n                                <br />\r\n                                <Form.Label className=\"mr-3 text-white\">Data di nascita*  </Form.Label>\r\n                                <Form.Control name=\"Birthday\" type=\"text\" value={Birthday} placeholder=\"Esempio 10/10/1990\" onChange={e =>  onChange(e)} required /> \r\n\r\n                                {/* <DayPickerInput  \r\n                                    formatDate={formatDate}\r\n                                    format={FORMAT}\r\n                                    parseDate={parseDate}\r\n                                    placeholder={`${dateFnsFormat(myDate, FORMAT)}`}\r\n                                    \r\n                                    dayPickerProps={{\r\n                                        month: myDate,\r\n                                      }}\r\n                                      name=\"Date_Of_Birth\"\r\n                                    onDayChange={e => handleChange(e)} /> */}\r\n                                <br />\r\n                                <br/>\r\n                                <Form.Label className=\"text-white\">Telefono*</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Telefono\" name=\"Telephone\" value={Telephone} onChange={e => onChange(e)} minlength='10' required/>\r\n                                <br />\r\n                                <Form.Label className=\"text-white\">Città*</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Città\" name=\"City_Living\" value={City_Living} onChange={e => onChange(e)} required />\r\n                                <br />\r\n                                <Form.Label className=\"text-white\">Professione*</Form.Label>\r\n                                <Form.Control as=\"select\" value={Position} name=\"Position\" onChange={e => onChange(e)} required >\r\n                                     <option value=\"\">--Seleziona professione --</option>\r\n                                    {\r\n                                        (complementaryInfo.loading)  \r\n                                            ? \r\n                                                (<option> </option>) \r\n                                            : \r\n                                                ((complementaryInfo.positions.map((position, index) => {\r\n                                                    if((Position != '')&&(Position === position._id))\r\n                                                    {\r\n                                                        return <option selected=\"selected\" value={position._id} id={position._id} key={index}>{position.Position}</option>\r\n                                                    }\r\n                                                    else\r\n                                                    {return <option value={position._id} id={position._id} key={index}>{position.Position}</option>}\r\n                                                })\r\n                                        ))\r\n                                    } \r\n                                </Form.Control>\r\n                                <br />\r\n                                <Form.Label className=\"text-white\">Competenze* (es. analisi dati, js, project management, team work, ecc.) </Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Competenze\" name=\"Skills\" value={Skills} onChange={e => onChange(e)}  required/>\r\n                                <br />\r\n                                <Form.Label className=\"text-white\">Settore di interesse*</Form.Label>\r\n                                 <Form.Control as=\"select\" value={Industry} name=\"Industry\" onChange={e => onChange(e)} required>\r\n                                      <option value=\"\">--Seleziona settore --</option>\r\n                                    {(complementaryInfo.loading) ? (<option> </option>) \r\n                                                                 : \r\n                                                                   (complementaryInfo.industries.map((industry, index) => {\r\n                                                                        //if(!((industries != null)&&(industries.Industry != null)&&(Industry === industry._id)))\r\n                                                                        if((Industry != '')&&(Industry === industry._id))\r\n                                                                        {return <option selected=\"selected\" key={index} value={industry._id} id={industry._id}>{industry.Industry}</option> }\r\n                                                                        else\r\n                                                                        {return <option key={index} value={industry._id} id={industry._id}>{industry.Industry}</option> }\r\n                                                                    }))\r\n                                    }\r\n                                </Form.Control> \r\n                                <br />\r\n                                <Form.Label className=\"text-white\">Breve bio</Form.Label>\r\n                                <Form.Control as=\"textarea\" rows={3} placeholder=\"Parlaci di te\" name=\"Biography\" value={Biography} onChange={e => onChange(e)} maxlength='200'/>\r\n                                <br />\r\n                            </Form.Group>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-10 offset-1 offset-md-4 col-md-4 text-center\">\r\n                                    <button type=\"submit\" className=\"btn border-white text-white creationProjectButton rounded-pill\">Salva</button>\r\n                                </div>\r\n                            </div>\r\n                        </Form> \r\n                    </div>\r\n                </Row>\r\n                \r\n            </Container>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\n const mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    profile: state.profile,\r\n    complementaryInfo: state.complementaryInfo\r\n})\r\n\r\nexport default connect(mapStateToProps, {createProfile, getCurrentProfile, updateUser, getAllPositions, getAllIndustries, getProfileIndustries})(withRouter(CreateProfile)) \r\n\r\n","import React from 'react';\r\nimport {Modal, Tabs, Tab, Form, Button, Container, Row, Col, option} from 'react-bootstrap';\r\nimport Logo from '../../../../../../resources/img/nucleus.png'\r\n\r\nexport const PopupCreateProject = (props) => {\r\n    return (\r\n        <Modal\r\n          {...props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton id=\"backgroundPopup\">\r\n            <Modal.Title id=\"contained-modal-title-vcenter\" className=\"text-center\">\r\n            </Modal.Title>\r\n                <Container>\r\n                    <Row>\r\n                        <div className=\"col-12 text-center\">\r\n                            <img src={Logo} style={{ width: '380px'}} alt='Loading...' />\r\n                        </div>\r\n                    </Row>\r\n                </Container>\r\n          </Modal.Header>\r\n          <Modal.Body>            \r\n                <Container>\r\n                    <Row>\r\n                        <div className=\"col-12 text-center\">\r\n                            <p><b>Step 1: Sei sicuro di voler procedere e inviare i dati sul tuo progetto?</b></p>\r\n                        </div>\r\n                    </Row>\r\n                    <Row>\r\n                        <div className=\"col-12 text-center\">\r\n                            <p>Se procedi non sarà più possibile modificare le informazioni inserite.</p>\r\n                            <p>N.B. Affinché il progetto venga salvato correttamente, occorre completare anche lo Step 2 alla pagina successiva.</p>\r\n                        </div>\r\n                    </Row>\r\n                </Container>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n                <Container>\r\n                        <Row>\r\n                            <div className=\"col-6 text-center\">\r\n                                 <button onClick={props.clickMe} type=\"submit\" className=\"btn btn-primary btn-lg\" style={{width:'140px'}} >Sì</button>\r\n                            </div>\r\n                            <div className=\"col-6 text-center\">\r\n                                 <button  onClick={props.onHide} className=\"btn btn-primary btn-lg\" style={{width:'140px'}} >No</button>\r\n                            </div>\r\n                        </Row>\r\n                </Container>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      );\r\n}\r\n\r\nexport default PopupCreateProject","import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Container, Form, Row } from 'react-bootstrap'\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { getAllAnalysisQuestions, getAllDevelopmentStages, getAllIndustries } from '../../../../../actions/complementaryInfo'\r\nimport { createProject } from '../../../../../actions/project'\r\nimport LogoSymbol from '../../../../../resources/img/logo_nucleus_symbol.svg'\r\nimport Head from '../../../../components/Head'\r\nimport Menu from '../../../../components/Menu'\r\nimport Navbar from '../../../../components/Navbar'\r\nimport Footer from '../../../../components/Footer'\r\nimport PopupCreateProject from './components/PopupCreateProject'\r\n\r\nconst analysisQuestion = {}\r\n\r\nexport const CreateProject = ({createProject, project, history, getAllIndustries, complementaryInfo, getAllDevelopmentStages, getAllAnalysisQuestions}) => {\r\n\r\n    const [modalShow, setModalShow] = useState(false)\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\r\n    const onChangeAnalysisQuestion = (e) => (analysisQuestion[e.target.name] = e.target.value)\r\n\r\n\r\n    const [formData, setFormData] = useState({\r\n        Name:'',\r\n        Description:'',\r\n        Headquarter: '',\r\n        Industry:'',\r\n        Development_Stage:''\r\n    })\r\n\r\n        \r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        setModalShow(true)\r\n    }\r\n\r\n    function LaunchCreateProject() {\r\n      console.log(analysisQuestion)\r\n      formData['Analysis_Question'] = analysisQuestion\r\n      console.log(formData)\r\n      createProject(formData, history)\r\n      history.push('/create-candidature')\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllIndustries();\r\n        getAllDevelopmentStages();\r\n        getAllAnalysisQuestions();        \r\n    }, [getAllIndustries, getAllDevelopmentStages, getAllAnalysisQuestions])\r\n\r\n    // useEffect(() => {\r\n    //     console.log(project.project)\r\n    //     if(project != null && project.project != null) history.push(`/create-candidature/${project.project._id}`)\r\n\r\n    // }, [project.loading])\r\n\r\n    const {\r\n        Name, \r\n        Description,\r\n        Headquarter,\r\n        Industry,\r\n        Development_Stage\r\n    } = formData;\r\n\r\n    return (\r\n        <div>\r\n            {/** START - Definition of the upper part of the page */}\r\n                <Head />\r\n                <Navbar />\r\n                <Menu />\r\n            {/** END */}\r\n\r\n            <Container fluid id=\"createProjectBackground\">\r\n                <Row>\r\n                    <div className=\"col-10 offset-1 col-md-6 offset-md-3  text-white\" id=\"containerFormCreateProject\">\r\n\r\n                        {/** Title page */}\r\n                        <h1 className=\"text-center text-white display-4\">Aggiugi un nuovo progetto</h1>\r\n                       \r\n                        <Form  onSubmit = {e=>onSubmit(e)}>\r\n                            <Form.Group>\r\n                                <Form.Label>Nome del progetto*</Form.Label>\r\n                                <Form.Control name=\"Name\" type=\"text\" value={Name} placeholder=\"Nome progetto\" onChange={e => onChange(e)} required/> \r\n                                <br />\r\n                                <Form.Label>Descrizione del progetto imprenditoriale (300 caratteri)*</Form.Label>\r\n                                <Form.Control as=\"textarea\" cols={30} rows={5} placeholder='Descrizione del progetto imprenditoriale' name=\"Description\" value={Description} onChange={e => onChange(e)} required maxlength=\"300\"/>\r\n                                <br />\r\n                                {/* <Form.Label>Città*</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Città\" name=\"Headquarter\" value={Headquarter} onChange={e => onChange(e)} required />\r\n                                <br /> */}\r\n                                <Form.Label>Settore* </Form.Label>\r\n                                <Form.Control as=\"select\" value={Industry} name=\"Industry\" onChange={e => onChange(e)} required>\r\n                                 {/* { (industries === null) \r\n                                                        ? \r\n                                                            (<option value={null}> </option>) \r\n                                                        : \r\n                                                            \r\n                                                            (loadingIndustries || (industries.Industry === null) \r\n                                                                                                 ? \r\n                                                                                                     (<option value={null}> </option>) \r\n                                                                                                 : \r\n                                                                                                     (<option value={industries.Industry._id}>{industries.Industry.Industry}</option>)\r\n                                                            )\r\n                                    } */}\r\n                                    <option value=\"\">--Seleziona industria--</option>\r\n                                    {(complementaryInfo.loading) ? (<option> </option>) \r\n                                                                 : \r\n                                                                   (complementaryInfo.industries.map((industry, index) => {\r\n                                                                        //if(!((industries != null)&&(industries.Industry != null)&&(Industry === industry._id)))\r\n                                                                        if((Industry != '')&&(Industry === industry._id))\r\n                                                                        {return <option selected=\"selected\" key={index} value={industry._id} id={industry._id}>{industry.Industry}</option> }\r\n                                                                        else\r\n                                                                        {return <option key={index} value={industry._id} id={industry._id}>{industry.Industry}</option> }\r\n                                                                    }))\r\n                                    }\r\n                                </Form.Control> \r\n                                <br />\r\n                                <Form.Label>Fase di sviluppo*</Form.Label>\r\n                                <Form.Control as=\"select\" value={Development_Stage} name=\"Development_Stage\" onChange={e => onChange(e)} required>\r\n                                    <option value=\"\">--Stadio sviluppo --</option>\r\n                                    {(complementaryInfo.loading) ? (<option> </option>) \r\n                                                                 : \r\n                                                                   (complementaryInfo.dev_stages.map((dev_stage, index) => {\r\n                                                                        //if(!((industries != null)&&(industries.Industry != null)&&(Industry === industry._id)))\r\n                                                                        if((Development_Stage != '')&&(Development_Stage === dev_stage._id))\r\n                                                                        {return <option selected=\"selected\" key={index} value={dev_stage._id} id={dev_stage._id}>{dev_stage.Development_Stage}</option> }\r\n                                                                        else\r\n                                                                        {return <option key={index} value={dev_stage._id} id={dev_stage._id}>{dev_stage.Development_Stage}</option> }\r\n                                                                    }))\r\n                                    }\r\n                                </Form.Control>\r\n                                {(complementaryInfo.loading) ? <p> </p>  : (complementaryInfo.analysis_questions.map((analysis_question, index) => (\r\n                                        <Fragment>\r\n                                            <br />\r\n                                            <Form.Label id={index}>{analysis_question.Question} {'(500 caratteri)'}</Form.Label>\r\n                                            <Form.Control as=\"textarea\" rows={5} placeholder=\"Scrivi ... \" name={analysis_question._id} onChange={e => onChangeAnalysisQuestion(e)} maxlength=\"500\" />\r\n                                        </Fragment>\r\n                                )))\r\n                                }\r\n\r\n                            </Form.Group>\r\n                             \r\n                            <div className=\"row\">\r\n                                {/* <div className=\"col-3 offset-2\">\r\n                                    <button type=\"submit\" className=\"btn border-white text-white creationProjectButton rounded-pill\">Salva una bozza</button>\r\n                                </div> */}\r\n                                {/* <div className=\"col-3 text-center\">\r\n                                    <span className=\"logo_nucleus_symbol\"></span>\r\n                                    <img src={LogoSymbol} style={{ width: '100px'}} alt='Loading...' />\r\n                                </div> */}\r\n                                <div className=\"col-4 offset-4 text-center\">\r\n                                    <button type=\"submit\" className=\"btn border-white text-white creationProjectButton rounded-pill\">Procedi</button>\r\n                                    <PopupCreateProject \r\n                                      show= {modalShow}\r\n                                      onHide= {() => setModalShow(false)}\r\n                                      clickMe= {() => LaunchCreateProject()}\r\n                                    />\r\n                                </div>\r\n\r\n                                {/* <Link className=\"btn btn-light my-1\" to=\"/create-candidature\">Go Back</Link> */}\r\n                            </div>\r\n                        </Form>\r\n\r\n                    </div>\r\n                </Row>\r\n                <Footer />\r\n            </Container>\r\n\r\n\r\n            {/* <Footer /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    project: state.project,\r\n    complementaryInfo: state.complementaryInfo\r\n})\r\n\r\nexport default connect(mapStateToProps, {createProject, getAllIndustries, getAllDevelopmentStages, getAllAnalysisQuestions})(withRouter(CreateProject))\r\n","import axios from 'axios'\r\nimport {setAlert} from './alert'\r\n\r\nimport {\r\n    GET_USER,\r\n    USER_ERROR,\r\n    SAVE_CONTACT_USER\r\n} from './types'\r\n\r\nconst config = { headers: {'Content-Type' : 'application/json'}}\r\n\r\nexport const getUser = userId => async dispatch => {\r\n    try {\r\n        // console.log(userId)\r\n        const res = await axios.get(`/api/users/${userId}`)\r\n\r\n        dispatch({\r\n            type:GET_USER,\r\n            payload: res.data\r\n        })\r\n    } catch(err)\r\n    {\r\n        dispatch({\r\n            type: USER_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n          });\r\n    }\r\n}\r\n\r\nexport const registerEmailUser = (contactUser) => async dispatch => {\r\n  try{\r\n    const response = await axios.post('/api/users/contactuser', contactUser, config)\r\n    dispatch({\r\n      type: SAVE_CONTACT_USER,\r\n      payload: response.data\r\n    })  \r\n  } catch (err) {\r\n    dispatch({\r\n      type: USER_ERROR,\r\n      payload: {\r\n        msg: err.response.statusText,\r\n        status: err.response.status\r\n      }\r\n    })\r\n  }\r\n}","import React, { Fragment, useState } from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { HashLink } from 'react-router-hash-link'\r\nimport { registerEmailUser } from '../../actions/user'\r\n\r\nimport Logo from '../../resources/img/logo_nucleus_symbol.svg'\r\n\r\nexport const Footer = ({registerEmailUser}) => {\r\n  const [contactUser, setContactUser] = useState({\r\n    Name: '',\r\n    Email: ''\r\n  })\r\n\r\n  const [contactSaved, setContactSaved] = useState(true)\r\n\r\n  const onChange = inputForm => {\r\n    setContactUser({\r\n      ...contactUser,\r\n      [inputForm.target.name]: inputForm.target.value\r\n    })\r\n  }\r\n  \r\n  const registerContact = saveData => {\r\n    saveData.preventDefault()\r\n    setContactSaved(false)\r\n    registerEmailUser(contactUser)\r\n    setContactUser({\r\n      Name: '',\r\n      Email: ''\r\n    })\r\n  }\r\n\r\n        return( \r\n\r\n        <Fragment> \r\n            <footer id=\"footerNucleus\" className=\"pt-4\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row text-white\">\r\n                        <div className=\"col-md-2 text-center col-12 my-auto\">\r\n                          <img\r\n                            src={Logo}\r\n                            width=\"60\"\r\n                            height=\"auto\"\r\n                            className=\"d-inline-block align-top\"\r\n                            alt=\"React Bootstrap logo\"\r\n                          />\r\n                          <p className=\"mt-2\" style={{fontSize:'12px'}}>Copyright © 2021 Nucleus. All rights reserved.</p>\r\n                        </div>\r\n                        <div style={{fontSize:'16px'}} className=\"col-md-2 col-12 text-center text-md-left mb-3 mb-md-0\">\r\n                     \r\n                          <p className=\"mb-0\"><Link className=\"nounderline mr-md-5 text-center \" to='/'>Home</Link></p>\r\n                          <p className=\"mb-0\"><Link className=\"nounderline mr-md-5 text-center \" to='/list-calls'>Progetti</Link></p>\r\n                          <p className=\"mb-0\"><Link className=\"nounderline mr-md-5 text-center \" to='/come-funziona'>Come funziona</Link></p>\r\n                          <p className=\"mb-0\"><Link to=\"/sign\" className=\"nounderline mr-md-5 text-center\">Registrati/Accedi</Link></p>\r\n                          <p className=\"mb-0\"><HashLink to=\"/come-funziona#faq\" className=\"nounderline mr-md-5 text-center\">FAQ</HashLink></p>\r\n                        </div>\r\n                        \r\n                        <div className=\"col-md-3 col-12 my-auto d-none d-md-block\">\r\n                          <p style={{fontSize:'16px'}}> info@nucleus.it</p>\r\n                          <p>\r\n                             \r\n                          </p>\r\n                        </div>\r\n                        <div className=\"col-md-5 col-12 my-auto d-none d-md-block\">\r\n                          \r\n                          <div className=\"row\">\r\n                          <p style={{fontSize:'16px'}}>Rimaniamo in contatto!</p>\r\n                          </div>\r\n                          <Form onSubmit={registerContact} className=\"row\">\r\n                            <div className=\"col-5 p-0 ml-0 mr-3\">\r\n                              <Form.Control name='Name' type=\"text\" className=\"form-control\" id=\"contactName\" placeholder=\"Nome\" onChange={onChange} required />\r\n                            </div>\r\n                            <div className=\"col-5  p-0 ml-0 mr-3\">\r\n                              <Form.Control name='Email' type=\"email\" className=\"form-control\" id=\"contactEmail\" aria-describedby=\"emailHelp\" placeholder=\"Email\" onChange={onChange} required />\r\n                            </div>\r\n                            <div className=\"col-1 p-0\">\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Invia</button>\r\n                            </div>\r\n                          </Form>\r\n                          {contactSaved ? (null) : (<Form.Label className=\"text-success\">Contatto registrato</Form.Label>) }\r\n                          <div className=\"row\">\r\n\r\n                          </div>\r\n                          <div className=\"row\">\r\n                            <div style={{fontSize:'16px'}} className=\"col-12 p-0 pt-3 pb-2\">\r\n                              Compilando questo form dai il consenso a ricevere email da Nucleus.\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n        </Fragment>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n})\r\n\r\nexport default connect(mapStateToProps, {registerEmailUser})(Footer)\r\n","/**\r\n * The colored Navbar of the website in the PUBLIC \r\n */\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport { Link } from 'react-router-dom';\r\nimport Logo from '../../resources/img/nucleus.png';\r\n\r\nexport default class NavbarPublic extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                    <Navbar id=\"navbarBackgroundBlack\" bg=\"light\" expand=\"lg\">\r\n                        <Navbar.Brand>\r\n                        <Link className=\"nounderline\" to='/'>\r\n                             {/* <div id=\"logo-nucleus\"></div> */}\r\n                              <img\r\n                                src={Logo}\r\n                                width=\"180\"\r\n                                height=\"auto\"\r\n                                className=\"d-inline-block align-top\"\r\n                                alt=\"React Bootstrap logo\"\r\n                               /> <span style={{fontSize:\"13px\"}}>Beta</span>\r\n                               </Link>         \r\n                        </Navbar.Brand>\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\" >\r\n                            <Nav className=\"ml-auto\" style={{fontSize:'20px'}}>\r\n                                <Link className=\"nounderline mr-md-5 text-center pb-3\" to='/'>Home</Link>\r\n                                <Link className=\"nounderline mr-md-5 text-center pb-3\" to='/list-calls'>Progetti</Link>\r\n                                <Link className=\"nounderline mr-md-5 text-center pb-3\" to='/come-funziona'>Come funziona</Link>\r\n                                <Link to=\"/sign\" type=\"button\" className=\"btn border-white text-white mr-md-5\">Accedi o registrati</Link>\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Navbar>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","/**\r\n *  The page of login and registration of the website\r\n */\r\nimport React, { Fragment, useState } from 'react';\r\nimport { Button, Container, Form, Nav, Row, Tab } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { login, register } from '../../../actions/auth';\r\nimport Footer from '../../components/FooterPublic';\r\nimport Head from '../../components/Head';\r\nimport NavbarPublic from '../../components/NavbarPublic';\r\n\r\nexport const Sign = ({login, isAuthenticated, register, history, match}) => {\r\n\r\n    const [formDataLogIn, setFormDataLogIn] = useState({\r\n        Email: '',\r\n        Password: ''\r\n    })\r\n\r\n    const [matchPassword, setMatchPassword] = useState(true)\r\n\r\n    const [formDataRegister, setFormDataRegister] = useState({\r\n        Name: '',\r\n        Surname: '',\r\n        EmailRegister: '',\r\n        Password_1: '',\r\n        Password_2: ''\r\n    })\r\n\r\n    const {Email, Password} = formDataLogIn;\r\n    const {Name, Surname, EmailRegister, Password_1, Password_2} = formDataRegister;\r\n\r\n    const onChange = e => {\r\n        setFormDataLogIn({...formDataLogIn, [e.target.name]: e.target.value});\r\n        console.log(Email);\r\n        console.log(Password);\r\n    }\r\n\r\n    const onSubmit = e => { \r\n        e.preventDefault();\r\n        login(Email, Password, history);\r\n      };\r\n\r\n    const onSubmitRegister = e => {\r\n        e.preventDefault();\r\n\r\n        if(Password_1 !== Password_2){ setMatchPassword(false)}\r\n        else {\r\n            console.log('the id:  ', match.params.id)\r\n            register({Name, Surname, EmailRegister, Password_1, history}, match.params.id)\r\n        }\r\n    }\r\n\r\n    const onChangeRegister = e => {\r\n        setFormDataRegister({...formDataRegister, [e.target.name]: e.target.value});\r\n    }\r\n\r\n    if (isAuthenticated) {\r\n        return <Redirect to=\"/dashboard\"/>;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            \r\n            {/**Definition of the upper part of the page */}\r\n            <Head />\r\n            {/* <Alert /> */}\r\n            <NavbarPublic />\r\n            {/** END */}\r\n            \r\n            {/* <Container fluid id=\"createProjectBackground\">                */}\r\n            <Container fluid id=\"rectangle-sign-page\">               \r\n                <Row>\r\n                    <div className=\"col-md-4 offset-md-4 col-10 offset-1 pb-5 pb-md-0\" >   \r\n                        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n                            <Row id=\"containerFormCreateProject\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"cardLoginRegister\" >\r\n                                        <Nav variant=\"pills\" className=\"flex-column text-center\">\r\n                                            <Nav.Item>\r\n                                              <Nav.Link  className=\"navItemLoginRegister nav-link-LoginRegister\" eventKey=\"first\">Registrati</Nav.Link>\r\n                                            </Nav.Item>\r\n                                            <Nav.Item >\r\n                                              <Nav.Link className=\"navItemLoginRegister nav-link-LoginRegister\" eventKey=\"second\">Accedi</Nav.Link>\r\n                                            </Nav.Item>\r\n                                        </Nav>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                <Tab.Content>\r\n                                    <Tab.Pane eventKey=\"second\">\r\n                                        <div className=\"cardLoginRegister mt-4\">\r\n                                            <Form onSubmit={onSubmit}>\r\n                                                <Form.Group controlId=\"formBasicEmail\">\r\n                                                    <Form.Label className=\"text-white\">Email</Form.Label>\r\n                                                    <Form.Control type=\"email\" placeholder=\"Enter email\" name=\"Email\" value={Email} onChange={onChange} required/>\r\n                                                    <br />\r\n                                                    <Form.Label className=\"text-white\">Password</Form.Label>\r\n                                                    <Form.Control type=\"password\" placeholder=\"Password\" name=\"Password\" value={Password} onChange={onChange} required/>\r\n                                                    <br />\r\n                                                </Form.Group>\r\n                                                <Row className=\"mt-3\">\r\n                                                    <div className=\"col-12 text-center \">\r\n                                                        <Button  type=\"submit\" className=\"btn border-white text-white loginRegisterButton rounded-pill\">\r\n                                                            Accedi\r\n                                                        </Button>\r\n                                                    </div>\r\n                                                </Row>\r\n                                                \r\n                                            </Form>\r\n                                        </div>\r\n                                    </Tab.Pane>\r\n                                    <Tab.Pane eventKey=\"first\">\r\n                                        <div className=\"cardLoginRegister mt-4\" >\r\n                                            <Form onSubmit={onSubmitRegister}>\r\n                                                <Form.Group >\r\n                                                    <Form.Label className=\"text-white\">Nome</Form.Label>\r\n                                                    <Form.Control name=\"Name\" type=\"text\" value={Name} placeholder=\"Nome\" onChange={onChangeRegister} required/>\r\n                                                    <br />\r\n                                                    <Form.Label className=\"text-white\">Cognome</Form.Label>\r\n                                                    <Form.Control name=\"Surname\" type=\"text\" value={Surname} placeholder=\"Cognome\" onChange={onChangeRegister} required/>\r\n                                                    <br />\r\n                                                    <Form.Label className=\"text-white\">Email</Form.Label>\r\n                                                    <Form.Control name=\"EmailRegister\" type=\"email\" value={EmailRegister} placeholder=\"Email\" onChange={onChangeRegister} required/>\r\n                                                    <br />\r\n                                                    <Form.Label className=\"text-white\">Password</Form.Label>\r\n                                                    <Form.Control name=\"Password_1\" type=\"password\" value={Password_1} placeholder=\"Password\" onChange={onChangeRegister} required/>\r\n                                                    <br />\r\n                                                    <Form.Label className=\"text-white\">Conferma Password</Form.Label>\r\n                                                    <Form.Control name=\"Password_2\" type=\"password\" value={Password_2} placeholder=\"Conferma Password\" onChange={onChangeRegister} required/>\r\n                                                    {matchPassword ? (null) : (<Form.Label className=\"text-danger\">non corrisponde alla password inserita</Form.Label>) }\r\n                                                </Form.Group>\r\n\r\n                                                <Row className=\"mt-3\">\r\n                                                    <div className=\"col-12 text-center \">\r\n                                                        <Button  type=\"submit\" className=\"btn border-white text-white loginRegisterButton rounded-pill\">\r\n                                                            Registrati\r\n                                                        </Button>\r\n                                                    </div>\r\n                                                </Row>\r\n                                            </Form>\r\n                                        </div>\r\n                                    </Tab.Pane>\r\n                                </Tab.Content>\r\n                                </div>\r\n                            </Row>\r\n                        </Tab.Container>\r\n                    </div>\r\n                </Row>\r\n\r\n                \r\n            </Container>  \r\n            <Footer />          \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, {login,register})(Sign)\r\n ","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {Tabs, Image, Tab, Form, Button, Container, Row, Col, Card, ListGroup, ListGroupItem} from 'react-bootstrap';\r\n\r\n\r\n  /**\r\n   * \r\n   * guideline graph: https://medium.com/swlh/data-visualization-with-react-chart-js-be5e238bc302 \r\n   */\r\nexport const CallProject = ({call}) => {\r\n    return (\r\n        <div>\r\n            {/* {console.log(project.Project)} */}\r\n\r\n            <div id=\"cardProjectOutside\" className=\"card shadow-lg p-3 mb-5 bg-white \">\r\n                <Row id=\"cardProjectInside\" className=\"no-gutters text-white mb-3\">\r\n                        <div className=\"col-md-4 my-auto text-center\">\r\n                        {/* <img src=\"image.jpg\" className=\"card-img\" alt=\"...\" /> */}\r\n                            <h2>{call.Project.Name}</h2>\r\n                        </div>\r\n                        <div className=\"col-md-5\">\r\n                            <div className=\"card-body p-0\">\r\n                                {(call.Position._id === '6074b0c6e25f3348639fb03a') ? null : <Row className=\"card-title no-gutters \"><h2 className=\"text-center text-md-left\"><u>{call.Position.Position}</u></h2></Row>}\r\n                                <Row className=\"card-text no-gutters\">\r\n                                    <div className=\"col-md-12 col-12 text-center text-md-left\">\r\n                                        <p className=\"m-0\"><span className=\"font-weight-bold\">Settore:</span> {call.Industry}</p>\r\n                                        <p className=\"m-0\"><span className=\"font-weight-bold\">Fase:</span> {call.Project.Development_Stage.Development_Stage}</p>\r\n                                        {/* <p className=\"m-0\"><span className=\"font-weight-bold\">Stato:</span> {call.Project.Status}</p> */}\r\n                                    </div>\r\n                                </Row>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-3 my-auto text-center\">\r\n                            <Link style={{width:'170px'}} type=\"button\" className=\"btn btn-primary btn-lg\" to={`/list-candidate/call/${call._id}`} >Candidature</Link>\r\n                        </div>\r\n                    </Row>\r\n                <div className=\"row no-gutters\">\r\n                    <div className=\"col-12\">\r\n                        <p><b>Descrizione</b></p>\r\n                        <p>{call.Project.Description.substring(0,400)+\"...\"}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    \r\n})\r\n\r\nexport default connect(mapStateToProps, {})(CallProject)\r\n","import React from 'react';\r\nimport { Container, Modal, Row } from 'react-bootstrap';\r\nimport Logo from '../../../../../../resources/img/nucleus.png';\r\n\r\n\r\nexport const PopupCheckProfile = (props) => {\r\n    return (\r\n        <Modal\r\n          {...props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n\r\n        >\r\n          <Modal.Header closeButton id=\"backgroundPopup\">\r\n            <Modal.Title id=\"contained-modal-title-vcenter\" className=\"text-center\">\r\n                \r\n            </Modal.Title>\r\n\r\n                <Container>\r\n                    <Row>\r\n                        <div className=\"col-12 text-center\">\r\n                            <img src={Logo} style={{ width: '380px'}} alt='Loading...' />\r\n                        </div>\r\n                    </Row>\r\n                </Container>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            \r\n        <Container>\r\n            <Row>\r\n                <div className=\"col-12 text-center\">\r\n                    <p><b>Non hai ancora creato il tuo profilo!</b></p>\r\n                </div>\r\n            </Row>\r\n            <Row>\r\n                <div className=\"col-12 text-center\">\r\n                    <p>Potrai iscriverti alle proposte presenti solo dopo aver completato il tuo profilo.</p>\r\n                </div>\r\n            </Row>\r\n        </Container>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n                <Container>\r\n                        <Row>\r\n                            <div className=\"col-6 text-center\">\r\n                                 <button style={{width:'200px'}} onClick={props.clickMe} type=\"submit\" className=\"btn btn-success btn-lg\"  >Crea profilo!</button>\r\n                            </div>\r\n                            <div className=\"col-6 text-center\">\r\n                                 <button  style={{width:'200px'}} onClick={props.onHide} className=\"btn btn-warning btn-lg\" >Crea più tardi</button>\r\n                            </div>\r\n                        </Row>\r\n                </Container>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      );\r\n}\r\n\r\nexport default PopupCheckProfile\r\n","import React, { useEffect, Fragment, useState } from 'react'\r\nimport { Container, Row } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { withRouter } from 'react-router'\r\n\r\nimport { getCurrentProfile } from '../../../../../actions/profile'\r\nimport { getProjectsofTheUser, getUserCalls } from '../../../../../actions/project'\r\nimport Head from '../../../../components/Head'\r\nimport Menu from '../../../../components/Menu'\r\nimport Navbar from '../../../../components/Navbar'\r\nimport CallProject from './components/CallProject'\r\nimport Footer from '../../../../components/Footer'\r\nimport Spinner from '../../../../../resources/differentResources/Spinner'\r\nimport PopupProfile from './components/PopupCheckProfile'\r\n\r\nexport const ProjectsOfTheUser = ({getCurrentProfile, getProjectsofTheUser,match, getUserCalls, project: { projectsOfTheUser, userCalls, loadingUserCalls },history, profile: {profile}  }) => {\r\n\r\n    useEffect(() => {\r\n        \r\n            getProjectsofTheUser()\r\n            getUserCalls()\r\n            getCurrentProfile()\r\n    \r\n    }, [getProjectsofTheUser, getUserCalls, getCurrentProfile])\r\n\r\n    const [modalShow, setModalShow] = useState(false)\r\n    \r\n   function checkProfile() {\r\n        if(!(profile != null)){\r\n            console.log('CHECK PROFILE')\r\n            setModalShow(true)\r\n            \r\n        }\r\n        else{\r\n            history.push(`/create-project`)\r\n        }\r\n   }\r\n\r\n    return (\r\n        <div >\r\n            <Head />\r\n            <Navbar />\r\n            <Menu />\r\n            <Container fluid id='createProjectBackground' >\r\n          \r\n            { loadingUserCalls ? (<Spinner />) :(\r\n                        \r\n                        userCalls.length !=0 ? (\r\n                    <Fragment>\r\n                             <Row className='pt-4 pb-2'>\r\n                                <div className='col-md-6 offset-md-3 col-12 mb-3'> <h3 className='text-white display-4 '>I miei progetti</h3> </div>\r\n                            </Row>\r\n                            {\r\n                                 userCalls.map((calls) => (\r\n                                    calls.map((call, index) => (\r\n                                        <Row>\r\n                                            <div key={index} className='col-10 offset-1 col-md-6 offset-md-3'>\r\n                                                <CallProject key={call._id} call={call} />\r\n                                            </div>\r\n                                        </Row>\r\n                                    ))\r\n                                ))\r\n                            }\r\n                            <Row><div className='col-md-6 offset-md-3 col-12 text-center mb-4'><Link style={{width:'340px'}} type='button' className='btn btn-primary btn-lg' to={`/create-project`} >Crea un nuovo progetto</Link></div></Row>\r\n                    </Fragment>\r\n                    \r\n                    ) : (\r\n                            <Fragment>\r\n                                <Row className='pt-5 pb-3'>\r\n                                    <div className='pt-5 pb-3 col-12 col-md-6 offset-md-3 text-center'> <h3 className='text-white display-4'>Non hai creato nessun progetto! </h3> </div>\r\n                                </Row>\r\n                                <Row>\r\n                                <div className='col-12 col-md-6 offset-md-3 text-center'><button style={{width:'340px'}} type='button' className='btn btn-primary btn-lg' onClick={() => checkProfile()}>Crea un nuovo progetto</button>\r\n                                \r\n                                <PopupProfile\r\n                                        formData = {\r\n                                                 'hello'\r\n                                                // formData\r\n                                            }\r\n                                        show={modalShow}\r\n                                        clickMe={() => {\r\n                                                            \r\n                                                            history.push(`/create-profile/create-project`)\r\n                                                        }\r\n                                                }\r\n                                        onHide={() => setModalShow(false)}\r\n                                    />\r\n                                \r\n                                </div>\r\n                                </Row>\r\n                            </Fragment>\r\n                            )\r\n                        )\r\n                    }\r\n                \r\n            </Container>\r\n            <Footer />\r\n            </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    project: state.project,\r\n    profile: state.profile,\r\n    auth: state.auth\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps, {getCurrentProfile, getProjectsofTheUser, getUserCalls})(ProjectsOfTheUser))","import React from 'react';\r\nimport { Container, Modal, Row } from 'react-bootstrap';\r\nimport Logo from '../../../../../../resources/img/nucleus.png';\r\n\r\nexport const PopupCreateCandidature = (props) => {\r\n    return (\r\n        <Modal\r\n          {...props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton id=\"backgroundPopup\">\r\n            <Modal.Title id=\"contained-modal-title-vcenter\" className=\"text-center\">\r\n            </Modal.Title>\r\n                <Container>\r\n                    <Row>\r\n                        <div className=\"col-12 text-center\">\r\n                            <img src={Logo} style={{ width: '380px'}} alt='Loading...' />\r\n                        </div>\r\n                    </Row>\r\n                </Container>\r\n          </Modal.Header>\r\n          <Modal.Body>            \r\n                <Container>\r\n                    <Row>\r\n                        <div className=\"col-12 text-center\">\r\n                            <p><b>Step 2: Sei sicuro di voler inviare i dati sulla figura ricercata?</b></p>\r\n                        </div>\r\n                    </Row>\r\n                    <Row>\r\n                        <div className=\"col-12 text-center\">\r\n                            <p>Non sarà più possible modificare le informazioni inserite. </p>\r\n                        </div>\r\n                    </Row>\r\n                </Container>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n                <Container>\r\n                        <Row>\r\n                            <div className=\"col-6 text-center\">\r\n                                 <button onClick={props.clickMe} type=\"submit\" className=\"btn btn-primary btn-lg\" style={{width:'140px'}} >Sì</button>\r\n                            </div>\r\n                            <div className=\"col-6 text-center\">\r\n                                 <button  onClick={props.onHide} className=\"btn btn-primary btn-lg\" style={{width:'140px'}} >No</button>\r\n                            </div>\r\n                        </Row>\r\n                </Container>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      );\r\n}\r\n\r\nexport default PopupCreateCandidature","import React from 'react';\r\nimport {Modal, Tabs, Tab, Form, Button, Container, Row, Col, option} from 'react-bootstrap';\r\nimport Logo from '../../../../../../resources/img/nucleus.png'\r\n\r\nexport const PopupGoDashboard = (props) => {\r\n    return (\r\n        <Modal\r\n          {...props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton id=\"backgroundPopup\">\r\n            <Modal.Title id=\"contained-modal-title-vcenter\" className=\"text-center\">\r\n            </Modal.Title>\r\n                <Container>\r\n                    <Row>\r\n                        <div className=\"col-12 text-center\">\r\n                            <img src={Logo} style={{ width: '380px'}} alt='Loading...' />\r\n                        </div>\r\n                    </Row>\r\n                </Container>\r\n          </Modal.Header>\r\n          <Modal.Body>            \r\n                <Container>\r\n                    <Row>\r\n                        <div className=\"col-12 text-center\">\r\n                            <p><b>Step 2: Sei sicuro di voler inviare i dati sulla figura ricercata?</b></p>\r\n                        </div>\r\n                    </Row>\r\n                    <Row>\r\n                        <div className=\"col-12 text-center\">\r\n                            <p>Non sarà più possible modificare le informazioni inserite. </p>\r\n                        </div>\r\n                    </Row>\r\n                </Container>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n                <Container>\r\n                        <Row>\r\n                            <div className=\"col-6 text-center\">\r\n                                 <button onClick={props.clickMe} type=\"submit\" className=\"btn btn-primary btn-lg\" style={{width:'140px'}} >Sì</button>\r\n                            </div>\r\n                            <div className=\"col-6 text-center\">\r\n                                 <button  onClick={props.onHide} className=\"btn btn-primary btn-lg\" style={{width:'140px'}} >No</button>\r\n                            </div>\r\n                        </Row>\r\n                </Container>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      );\r\n}\r\n\r\nexport default PopupGoDashboard","import React from 'react';\r\nimport {Modal, Tabs, Tab, Form, Button, Container, Row, Col, option} from 'react-bootstrap';\r\nimport Logo from '../../../../../../resources/img/nucleus.png'\r\n\r\nexport const PopupMessage = (props) => {\r\n    return (\r\n        <Modal\r\n          {...props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton id=\"backgroundPopup\">\r\n            <Modal.Title id=\"contained-modal-title-vcenter\" className=\"text-center\">\r\n            </Modal.Title>\r\n                <Container>\r\n                    <Row>\r\n                        <div className=\"col-12 text-center\">\r\n                            <img src={Logo} style={{ width: '380px'}} alt='Loading...' />\r\n                        </div>\r\n                    </Row>\r\n                </Container>\r\n          </Modal.Header>\r\n          <Modal.Body>            \r\n                <Container>\r\n                    <Row>\r\n                        <div className=\"col-12 text-center\">\r\n                            <p><b>Il tuo progetto è stato inviato correttamente! Entro le prossime 24 ore sarà visibile nella pagina Progetti.</b></p>\r\n                        </div>\r\n                    </Row>\r\n                </Container>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n                <Container>\r\n                        <Row>\r\n                            <div className=\"col-12 text-center\">\r\n                                 <button onClick={props.clickMe} type=\"submit\" className=\"btn btn-primary btn-lg\" style={{width:'140px'}} >Ok</button>\r\n                            </div>\r\n                        </Row>\r\n                </Container>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      );\r\n}\r\n\r\nexport default PopupMessage","import React from 'react';\r\nimport {Modal, Tabs, Tab, Form, Button, Container, Row, Col, option} from 'react-bootstrap';\r\nimport Logo from '../../../../../../resources/img/nucleus.png'\r\n\r\nexport const PopupMessageGoDashboard = (props) => {\r\n    return (\r\n        <Modal\r\n          {...props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton id=\"backgroundPopup\">\r\n            <Modal.Title id=\"contained-modal-title-vcenter\" className=\"text-center\">\r\n            </Modal.Title>\r\n                <Container>\r\n                    <Row>\r\n                        <div className=\"col-12 text-center\">\r\n                            <img src={Logo} style={{ width: '380px'}} alt='Loading...' />\r\n                        </div>\r\n                    </Row>\r\n                </Container>\r\n          </Modal.Header>\r\n          <Modal.Body>            \r\n                <Container>\r\n                    <Row>\r\n                        <div className=\"col-12 text-center\">\r\n                            <p><b>Il tuo progetto è stato inviato correttamente! Entro le prossime 24 ore sarà visibile nella pagian Progetti.</b></p>\r\n                        </div>\r\n                    </Row>\r\n                </Container>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n                <Container>\r\n                        <Row>\r\n                            <div className=\"col-12 text-center\">\r\n                                 <button onClick={props.clickMe} type=\"submit\" className=\"btn btn-primary btn-lg\" style={{width:'140px'}} >Ok</button>\r\n                            </div>\r\n                        </Row>\r\n                </Container>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      );\r\n}\r\n\r\nexport default PopupMessageGoDashboard","/**\r\n *  Page where the user create a new call\r\n */\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\nimport { Container, Form, InputGroup, Row } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { getAllPositions } from '../../../../../actions/complementaryInfo'\r\nimport { createCallProject } from '../../../../../actions/project'\r\nimport LogoSymbol from '../../../../../resources/img/logo_nucleus_symbol.svg'\r\nimport Head from '../../../../components/Head'\r\nimport Menu from '../../../../components/Menu'\r\nimport Navbar from '../../../../components/Navbar'\r\nimport PopupNewCandidature from './components/PopupCreateCandidature'\r\nimport PopupGoDashboard from './components/PopupGoDashboard'\r\nimport PopupMessage from './components/PopupMessage'\r\nimport PopupMessageGoDashboard from './components/PopupMessageGoDashboardjs'\r\n\r\nexport const CreateCandidature = ({complementaryInfo, history, getAllPositions, createCallProject, match}) => {\r\n\r\n    const [togleTypeCandidature, setTogleTypeCandidature] = useState(true)\r\n\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [modalGoDashboard, setModalGoDashboard] = useState(false);\r\n    const [modalMessage, setModalMessage] = useState(false);\r\n    const [modalMessageGoDashboard, setModalMessageGoDashboard] = useState(false);\r\n\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\r\n\r\n    const [newCandidacy, setNewCandidacy] = useState(true)\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        console.log('Data project')\r\n        console.log(formData)\r\n\r\n        if(newCandidacy) {\r\n            console.log('NEW CANDIDACY')\r\n            setModalShow(true);\r\n            // history.push(`/create-candidature/${match.params.id}`)\r\n        }\r\n        else {\r\n            setModalGoDashboard(true)\r\n            // history.push(`/dashboard`)\r\n        }\r\n\r\n\r\n        // createCallProject(formData, history)\r\n\r\n        // setFormData({\r\n        //     Position:' ',\r\n        //     Skills: ' ',\r\n        //     Type_Colaboration:' ',\r\n        //     City_Presence_Required:' ',\r\n        //     Project: match.params.id\r\n        // })\r\n\r\n        \r\n    }\r\n\r\n    const [checkbox, setCheckbox] = useState(false)\r\n    const [formData, setFormData] = useState({\r\n        Position:'',\r\n        Skills:'',\r\n        Type_Colaboration:'',\r\n        City_Presence_Required:'',\r\n        Project: match.params.id\r\n    })\r\n\r\n    const{  \r\n        Position,\r\n        Skills,\r\n        Type_Colaboration,\r\n        City_Presence_Required,\r\n        Project\r\n    } = formData;\r\n\r\n    useEffect(()=>{\r\n        getAllPositions();\r\n    }, [getAllPositions])\r\n\r\n    return (\r\n        <div>\r\n            {/** START - Definition of the upper part of the page */}\r\n            <Head />\r\n            <Navbar />\r\n            <Menu />\r\n            {/** END */}\r\n\r\n            <Container fluid id=\"createProjectBackground\">\r\n                <Row>\r\n                <div className=\"col-10 offset-1 col-md-6 offset-md-3 text-white\" id=\"containerFormCreateProject\">\r\n\r\n                {/** Title page */}\r\n                <h1 className=\"text-center text-white display-4\">Quale figura stai cercando?</h1>\r\n                <br />\r\n                \r\n\r\n                <Form>\r\n                  <Form.Group >\r\n                     <h5 className=\"text-center text-white\">Sai già quale figura stai cercando?</h5>\r\n                        <Form.Control as=\"select\" name=\"Type_Colaboration\"  onChange={() => setTogleTypeCandidature(!togleTypeCandidature)} required>\r\n                            <option className=\"text-center\">Sì</option>\r\n                            <option className=\"text-center\">No</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Form>\r\n\r\n                {togleTypeCandidature ? (\r\n                    <Fragment>\r\n                        <Form  onSubmit = {e=>onSubmit(e)}>\r\n                            <Form.Group>\r\n                            <Form.Label>Professione *</Form.Label>\r\n                                        <Form.Control as=\"select\" value={Position} name=\"Position\" onChange={e => onChange(e)} required >   \r\n                                            <option value=\"\">--Seleziona professione --</option>                 \r\n                                            {\r\n                                                (complementaryInfo.loading)  \r\n                                                                            ? \r\n                                                                                (<option> </option>) \r\n                                                                            : \r\n                                                                                ((complementaryInfo.positions.map((position, index) => {\r\n                                                    \r\n                                                                                    // if(!((profile != null)&&(profile.Position != null)&&(Position === position._id)))\r\n                                                                                    if((Position != '')&&(Position === position._id))\r\n                                                                                    {\r\n                                                                                        return <option selected=\"selected\" value={position._id} id={position._id} key={index}>{position.Position}</option>\r\n                                                                                    }\r\n                                                                                    else\r\n                                                                                    {return <option value={position._id} id={position._id} key={index}>{position.Position}</option>}\r\n                                                                                    \r\n                                                                                })\r\n                                                ))\r\n                                            } \r\n                                        </Form.Control>\r\n                            </Form.Group>\r\n                            <br />\r\n                            <Form.Label>Competenze ricercate * | Usare la virgola per separare (es. analisi dati, js, project management, team work, ecc.)</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Competenze\" name=\"Skills\" value={Skills} onChange={e => onChange(e)} required/>\r\n                            <br />\r\n                            <Form.Group >\r\n                                <Form.Label>Tipo di collaborazione ricercata *</Form.Label>\r\n                                <Form.Control as=\"select\" name=\"Type_Colaboration\" value={Type_Colaboration} onChange={e => onChange(e)} required>\r\n                                    <option value=\"\">--Seleziona tipo collaborazione --</option>   \r\n                                    <option>Co-Founder</option>\r\n                                    <option>Collaboratore</option>\r\n                                    <option>Altro</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <br />\r\n                            <Form.Group >\r\n                                <Form.Label>E' richiesta la presenza in città o certa area geografica</Form.Label>\r\n                                {/* <Form.Control as=\"select\" name=\"CheckPresence\"  required>\r\n                                    <option>No</option>\r\n                                    <option>Si</option>\r\n                                </Form.Control> */}\r\n                                <InputGroup className=\"mb-3\">\r\n                                    <InputGroup.Prepend>\r\n                                        <InputGroup.Checkbox aria-label=\"Checkbox for following text input\" defaultChecked={checkbox} onChange={() => setCheckbox(!checkbox)}/>\r\n                                    </InputGroup.Prepend>\r\n                                    {/* <Form.Control aria-label=\"Text input with checkbox\" /> */}\r\n                                </InputGroup>\r\n\r\n                                <br />\r\n                                {checkbox ? (<Fragment>\r\n                                    <Form.Label>Indicare qui la presenza in città o certa area geografica *</Form.Label>\r\n                                    <Form.Control type=\"text\" name=\"City_Presence_Required\" value={City_Presence_Required} onChange={e => onChange(e)} required/>\r\n                                </Fragment>) :(<br />)}\r\n                                \r\n                            </Form.Group>\r\n                            \r\n                            <div className=\"row\">\r\n                                <div className=\"col-3 offset-1\">\r\n                                    <button style={{ width: '170px'}} type=\"submit\"  className=\"btn border-white text-white creationProjectButton rounded-pill\">Inserire un’altra figura</button>\r\n                                </div>\r\n                                <div className=\"col-4 text-center\">\r\n                                    <span className=\"logo_nucleus_symbol\"></span>\r\n                                    <img src={LogoSymbol} style={{ width: '100px'}} alt='Loading...' />\r\n                                </div>\r\n                                <div className=\"col-3\">\r\n                                    <button  style={{ width: '170px'}} type=\"submit\" onClick={() => setNewCandidacy(false)} className=\"btn border-white text-white creationProjectButton rounded-pill\">Invia</button>\r\n                                </div>\r\n\r\n                                {/* <Link className=\"btn btn-light my-1\" to=\"/create-candidature\">Go Back</Link> */}\r\n                            </div>\r\n                        </Form>\r\n                            <PopupNewCandidature\r\n                                show={modalShow}\r\n                                clickMe={() => {   // updateAccepted()\r\n                                                    setModalShow(false)\r\n                                                    setModalMessage(true)\r\n                                                        // setModalShowAcceptedCalendark(true)\r\n                                                    // createCandidature(formData)\r\n                                                    // history.push('/create-profile')\r\n                                                }\r\n                                        }\r\n                                onHide={() => setModalShow(false)}\r\n                            />\r\n                            <PopupMessage\r\n                                show={modalMessage}\r\n                                clickMe={() => {   // updateAccepted()\r\n                                                    createCallProject(formData, history)\r\n\r\n                                                    setFormData({\r\n                                                        Position:' ',\r\n                                                        Skills: ' ',\r\n                                                        Type_Colaboration:' ',\r\n                                                        City_Presence_Required:' ',\r\n                                                        Project: match.params.id\r\n                                                    })\r\n                                                    setModalMessage(false)\r\n                                                    history.push(`/create-candidature/${match.params.id}`)\r\n                                                \r\n                                                    window.location.reload();\r\n                                                }\r\n                                        }\r\n                                onHide={() => setModalMessage(false)}\r\n                            />\r\n                            <PopupGoDashboard\r\n                                show={modalGoDashboard}\r\n                                clickMe={() => {   // updateAccepted()\r\n                                                    // setModalShow(false)\r\n                                                    setModalGoDashboard(false)\r\n                                                    setModalMessageGoDashboard(true)\r\n                                                        // setModalShowAcceptedCalendark(true)\r\n                                                    // createCandidature(formData)\r\n                                                    // history.push('/create-profile')\r\n                                                }\r\n                                        }\r\n                                onHide={() => setModalGoDashboard(false)}\r\n                            />\r\n                            <PopupMessageGoDashboard\r\n                                show={modalMessageGoDashboard}\r\n                                clickMe={() => {   // updateAccepted()\r\n                                                    setModalMessage(false)\r\n                                                    createCallProject(formData, history)\r\n\r\n                                                    setFormData({\r\n                                                        Position:' ',\r\n                                                        Skills: ' ',\r\n                                                        Type_Colaboration:' ',\r\n                                                        City_Presence_Required:' ',\r\n                                                        Project: match.params.id\r\n                                                    })\r\n                                                    history.push(`/dashboard`)\r\n                                                }}\r\n                                onHide={() => setModalMessageGoDashboard(false)}\r\n                            />\r\n                    </Fragment>\r\n                ):\r\n                (<Fragment>\r\n                    <Form onSubmit = {e => onSubmit(e)} >\r\n                        <Form.Group >\r\n                        <Form.Label>Tipo di collaborazione ricercata</Form.Label>\r\n                        <Form.Control as=\"select\" name=\"Type_Colaboration\" value={Type_Colaboration} onChange={e => onChange(e)} required>\r\n                            <option value=\"\">--Seleziona tipo collaborazione --</option>   \r\n                            <option>Co-Founder</option>\r\n                            <option>Collaboratore</option>\r\n                            <option>Altro</option>\r\n                        </Form.Control>\r\n                    </Form.Group> \r\n                    <Form.Group >\r\n                        <Form.Label>E' richiesta la presenza in città o certa area geografica</Form.Label>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Prepend>\r\n                                 <InputGroup.Checkbox aria-label=\"Checkbox for following text input\" defaultChecked={checkbox} onChange={() => setCheckbox(!checkbox)} />\r\n                            </InputGroup.Prepend>\r\n                        </InputGroup>\r\n\r\n                        <br />\r\n                        {checkbox ? (<Fragment>\r\n                            <Form.Label>Indicare qui la presenza in città o certa area geografica</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"City_Presence_Required\" value={City_Presence_Required} onChange={e => onChange(e)} required/>\r\n                        </Fragment>) :(<br />)}\r\n                        \r\n                    </Form.Group>     \r\n                    \r\n                      <div className=\"row\">\r\n                                <div className=\"col-4 offset-4\">\r\n                                    <button   type=\"submit\" onClick={() => setNewCandidacy(false)} className=\"btn border-white text-white creationProjectButton rounded-pill\">Invia</button>\r\n                                </div>\r\n                            </div>\r\n                    </Form>\r\n                        <PopupGoDashboard\r\n                        show={modalGoDashboard}\r\n                        clickMe={() => {   \r\n                                            setModalGoDashboard(false)\r\n                                            setModalMessageGoDashboard(true)\r\n                                        }\r\n                                }\r\n                        onHide={() => setModalGoDashboard(false)}\r\n                    />\r\n                    <PopupMessageGoDashboard\r\n                        show={modalMessageGoDashboard}\r\n                        clickMe={() => {   \r\n                                            setModalMessage(false)\r\n                                            createCallProject(formData, history)\r\n                                            setFormData({\r\n                                                Position:' ',\r\n                                                Skills: ' ',\r\n                                                Type_Colaboration:' ',\r\n                                                City_Presence_Required:' ',\r\n                                                Project: match.params.id\r\n                                            })\r\n                                            history.push(`/dashboard`)\r\n                                        }}\r\n                        onHide={() => setModalMessageGoDashboard(false)}\r\n                    />\r\n                </Fragment>\r\n                )}\r\n\r\n                \r\n                </div>\r\n                </Row>\r\n            </Container>            \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    project: state.project,\r\n    complementaryInfo: state.complementaryInfo\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {getAllPositions, createCallProject})(withRouter(CreateCandidature))","import React from 'react';\r\nimport { Link, withRouter} from 'react-router-dom';\r\nimport {Tabs, Image, Tab, Form, Button, Container, Row, Col, Card, ListGroup, ListGroupItem} from 'react-bootstrap';\r\n\r\nconst data = {\r\n    labels: [\r\n      'Red',\r\n      'Green',\r\n      'Yellow'\r\n    ],\r\n    datasets: [{\r\n      data: [300, 50, 100],\r\n      backgroundColor: [\r\n      '#FF6384',\r\n      '#36A2EB',\r\n      '#FFCE56'\r\n      ],\r\n      hoverBackgroundColor: [\r\n      '#FF6384',\r\n      '#36A2EB',\r\n      '#FFCE56'\r\n      ]\r\n    }]\r\n  };\r\n\r\n  const options = {\r\n    legend: {\r\n       display: false\r\n    }\r\n}\r\n\r\n  /**\r\n   * \r\n   * guideline graph: https://medium.com/swlh/data-visualization-with-react-chart-js-be5e238bc302 \r\n   */\r\nexport const CallProject = ({project}) => {\r\n    return (\r\n        <div>\r\n            {/* {console.log(project.Project)} */}\r\n\r\n            {/* <div id=\"cardProjectOutside\" className=\"card mb-3 shadow\">\r\n                <div className=\"row no-gutters\">\r\n                    <div id=\"cardCallInside\" className=\"col-md-4 \">\r\n                      <p className=\"text-white text-center\"><b>Nome progetto:</b></p>\r\n                      <p id=\"cardCallFontPosition\" style={{fontSize:'32px'}} className=\"m-0 mb-3 text-white text-center\">{project.Project.Name}</p>\r\n                    </div>\r\n                    <div className=\"col-md-8\">\r\n                      <div className=\"card-body p-0\">\r\n                          <h5 className=\"card-title row no-gutters\">{ }</h5>\r\n                          <div className=\"card-text row no-gutters\">\r\n                              <div className=\"col-5 offset-1\">\r\n                                <p style={{fontSize:'20px'}}  className=\"mb-1\"><b>Figura ricercata:</b></p>\r\n                                  <p id=\"cardCallFontPosition\" className=\"m-0 display-4 mb-3\"><u>{project.Position.Position}</u></p>\r\n                                  <p className=\"m-0\"><span className=\"font-weight-bold\">Settore:</span> {project.Industry}</p>\r\n                                  <p className=\"m-0\"><span className=\"font-weight-bold\">Fase:</span> {project.Project.Development_Stage.Development_Stage} </p>\r\n                                  <Link to={`/project/${_id}`} className=\"card-link\">Detagli progetto</Link>\r\n                              </div>\r\n                              <div className=\"col-6 text-center  my-auto\">\r\n                                  <Link style={{width:'140px'}} type=\"button\" className=\"btn btn-primary btn-lg\" to={`/view-call/${project._id}`} >Scopri</Link>\r\n                              </div>\r\n                          </div>                          \r\n                      </div>\r\n                    </div>\r\n                </div>\r\n             </div> */}\r\n\r\n             <div id=\"cardProjectOutside\" className=\"card shadow-lg p-3 mb-5 bg-white \">\r\n                <div id=\"cardProjectInside\" className=\"row no-gutters text-white mb-3\">\r\n                        <div className=\"col-md-4 my-auto text-center\">\r\n                        {/* <img src=\"image.jpg\" className=\"card-img\" alt=\"...\" /> */}\r\n                            <h2>{project.Project.Name}</h2>\r\n                        </div>\r\n                        <div className=\"col-md-5\">\r\n                            <div className=\"card-body p-0\">\r\n                                  {(project.Position._id === '6074b0c6e25f3348639fb03a') ? null : <Row className=\"card-title no-gutters \"><h2 className=\"text-center text-md-left\"><u>{project.Position.Position}</u></h2></Row>}\r\n                                <Row className=\"card-text no-gutters\">\r\n                                    <div className=\"col-md-12 col-12 text-center text-md-left\">\r\n                                       {/* { (project.Position._id === '6074b0c6e25f3348639fb03a') ? null : <p className=\"m-0\"><span className=\"font-weight-bold\">Figura ricercata: </span> \r\n                                        {project.Position.Position}                                        \r\n                                        </p>} */}\r\n                                        \r\n                                            {\r\n                                            (project.Skills.join() === '' ? null : <p className=\"m-0\"><span className=\"font-weight-bold\">Competenze richieste:</span> {project.Skills.join()}  </p>\r\n                                                \r\n                                            \r\n                                            )\r\n                                            }\r\n                                          \r\n                                        <p className=\"m-0\"><span className=\"font-weight-bold\">Settore: </span> \r\n                                            {project.Industry}\r\n                                          </p>\r\n                                        <p className=\"m-0\"><span className=\"font-weight-bold\">Fase: </span> \r\n                                           {project.Project.Development_Stage.Development_Stage}                                        \r\n                                        </p>\r\n                                        {/* <p className=\"m-0\"><span className=\"font-weight-bold\">Stato:</span> {call.Project.Status}</p> */}\r\n                                    </div>\r\n                                </Row>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-3 my-auto text-center\">\r\n                            <Link style={{width:'140px'}} type=\"button\" className=\"btn btn-primary btn-lg\" to={`/view-call/${project._id}`}>Scopri</Link>\r\n                        </div>\r\n                </div>\r\n                <div className=\"row no-gutters\">\r\n                    <div className=\"col-12\">\r\n                        <p><b>Descrizione</b></p>\r\n                        <p>{project.Project.Description}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(CallProject)\r\n","/**\r\n * List of the projects in the Platform\r\n */\r\nimport React, { useEffect, Fragment } from 'react'\r\nimport { Container, Row } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { getPublicCalls } from '../../../../../actions/project'\r\nimport Head from '../../../../components/Head'\r\nimport Menu from '../../../../components/Menu'\r\nimport Footer from '../../../../components/Footer'\r\nimport Navbar from '../../../../components/Navbar'\r\nimport CallProject from './components/CallProject'\r\nimport { withRouter } from 'react-router-dom'\r\nimport Spinner from '../../../../../resources/differentResources/Spinner'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nexport const ListProjectsPlatform = ({getPublicCalls, project: {publicCalls, loadingPublicCalls }}) => {\r\n\r\nuseEffect(() => {\r\n    getPublicCalls()\r\n            }, [getPublicCalls])\r\n\r\n    return (\r\n        <div >\r\n            {/** START - Definition of the upper part of the page */}\r\n            <Head />\r\n            <Navbar />\r\n            <Menu />\r\n            {/** END */}\r\n            <Container fluid id=\"dashboardBackground\" >\r\n            <br />\r\n            <br />\r\n            <br />\r\n\r\n            { loadingPublicCalls ? (<Spinner />) :(\r\n                        \r\n                        publicCalls.length !=0 ? (\r\n                    <Fragment>\r\n                            <Row>\r\n                                <div className=\"col-10 offset-1 col-md-6 offset-md-3\">\r\n                                    <h3 className=\"text-white display-4 text-center\">Trova il progetto a cui unirti!</h3>\r\n                                    <br />\r\n                                                            \r\n                                </div>\r\n                            \r\n                            </Row>  \r\n                            {\r\n                                 publicCalls.map((call, index) => ( \r\n                                    <Row><div className=\"col-10 offset-1 col-md-6 offset-md-3\"><CallProject key={index} project={call}/></div></Row>))\r\n                                    \r\n                                  \r\n                            }  \r\n                    </Fragment>\r\n                    \r\n                    ) : (\r\n                            <Fragment>\r\n                                <Row>\r\n                                    <div className=\"col-12 col-md-6 offset-md-3\"> <h3 className=\"text-white display-4\"></h3> </div>\r\n                                </Row>\r\n                                <Row className=\"pt-5 pb-3\">\r\n                                    <div className=\"pt-5 pb-3 col-12 col-md-6 offset-md-3\"> <h3 className=\"text-white display-4\">Non ci sono progetti disponibili! Ritorna alla <Link  to='/dashboard'>home</Link></h3> </div>\r\n                                </Row>\r\n                            </Fragment>\r\n                            )\r\n                        )\r\n                    }\r\n\r\n              \r\n            </Container>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    project: state.project\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps, {getPublicCalls})(ListProjectsPlatform))","import React from 'react'\r\n\r\nconst data = {\r\n    labels: [\r\n      'Red',\r\n      'Green',\r\n      'Yellow'\r\n    ],\r\n    datasets: [{\r\n      data: [300, 50, 100],\r\n      backgroundColor: [\r\n      '#FF6384',\r\n      '#36A2EB',\r\n      '#FFCE56'\r\n      ],\r\n      hoverBackgroundColor: [\r\n      '#FF6384',\r\n      '#36A2EB',\r\n      '#FFCE56'\r\n      ]\r\n    }]\r\n  };\r\n\r\n  const options = {\r\n    legend: {\r\n       display: false\r\n    }\r\n}\r\n\r\nexport const CardProject = ({call}) => {\r\n    return (\r\n        <div id=\"dimensionCardLanding\" >\r\n            <div id=\"cardProjectOutside\" className=\"card mb-3 shadow p-3 bg-white\">\r\n                <div id=\"cardProjectInside\" className=\"row no-gutters text-white mb-3 my-auto\">\r\n                    <div className=\"col-12 my-auto text-center\">\r\n                        <p id=\"card-landing-Name\">{call.Project.Name}</p>\r\n                    </div>                   \r\n                </div>\r\n                <div className=\"row \">\r\n                    {/* <div className=\"col-5 cardTitleLanding\"> */}\r\n                    <div className=\"col-md-6 col-12 text-center\">\r\n                        \r\n                            {/* <p className=\"card-title row no-gutters\" >Stato Candidature</p> */}\r\n                           \r\n                                <p id=\"card-landing-position\" className=\"titleCardLanding\">\r\n                                 <p id=\"card-landing-info\"><b>Figura ricercata:</b></p>{call.Position.Position}</p>\r\n                                \r\n                                {/* <div className=\"col-8\">\r\n                                    <p className=\"m-0\">Accettate:</p>\r\n                                    <p className=\"m-0\">In attesa:</p>\r\n                                    \r\n                                    <p className=\"m-0\">Rifiutate:</p>\r\n\r\n                                </div> */}\r\n                           \r\n    \r\n                    </div>\r\n                    {/* <div className=\"vLine mt-3 col-1\"></div> */}\r\n                    <div className=\"vertical-line d-none d-md-block\"></div>\r\n                    <div className=\"col-md-5 col-12 my-auto\">\r\n                             \r\n                                 \r\n                                     <p className=\"mt-md-4\"  id=\"card-landing-info\"><b>Settore:</b> {call.Industry}</p>\r\n                                     <p className=\"\" id=\"card-landing-info\"><b>Fase:</b> {call.Project.Development_Stage.Development_Stage}</p>\r\n                                     <p id=\"card-landing-info\"><b>Descrizione:</b> {call.Project.Description.substring(0,45)+\"...\"}</p>\r\n                                     {/* <div className=\"row center mt-3\">Team: 3 membri</div> */}\r\n                                \r\n                             \r\n                    </div>\r\n                </div>\r\n             </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    \r\n})\r\n\r\nexport default CardProject\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { getProjectsShowcase } from '../../../actions/project';\r\nimport Logo from '../../../resources/img/nucleus.png';\r\nimport Spinner from '../../../resources/differentResources/Spinner';\r\nimport Footer from '../../components/FooterPublic';\r\nimport Head from '../../components/Head';\r\nimport Menu from '../../components/Menu';\r\nimport PrivateNavbar from '../../components/Navbar';\r\nimport Navbar from '../../components/NavbarPublic';\r\nimport CardProject from './components/CardProject';\r\n\r\n\r\nexport const Landing = ({getProjectsShowcase, project:{projects, loadingShowcase}, auth: {isAuthenticated}}) => {\r\n\r\n    useEffect(() => {\r\n        getProjectsShowcase()\r\n    }, [getProjectsShowcase])\r\n\r\n    return (\r\n        <Fragment>\r\n            {/** START - Definition of the upper part of the page */}\r\n            <Head />\r\n            \r\n            {isAuthenticated ? (\r\n                <Fragment>\r\n                        <PrivateNavbar />\r\n                        <Menu />\r\n                </Fragment>\r\n            ):(<Navbar />)}\r\n            {/** END */}\r\n\r\n        <Container fluid id=\"containerFirstLandingOne\" className=\"paddingTopSectionLanding\">\r\n                <Row className=\"landingPadingTop\">\r\n                    <div className=\"col-12 text-center \td-none d-md-block\">\r\n                        <img src={Logo} width=\"53%\" height='auto' alt='Loading...' />\r\n                    </div>\r\n                </Row>\r\n                <Row className=\"pt-5\">\r\n\r\n                    <div className=\"col-10 offset-1 col-md-4 offset-md-2 pr-4 text-center\">\r\n                        <h1 id=\"landing-text-first\" className=\"text-white\">Il <b id=\"bold-text\">team </b>ideale per la tua <b id=\"bold-text\">idea</b></h1>\r\n                    </div>\r\n                    <div className=\"col-10 col-sm-10 offset-1 col-md-3 my-auto pl-4 pt-3 pt-md-0\">\r\n                        <Link to={`/dashboard`}><button type=\"button\" className=\"btn border-white text-white my-auto landingButton rounded-pill\"  >\r\n                            {/* <span id=\"text-in-buttom\">Trova il tuo team</span> */}\r\n                            Trova il tuo team\r\n                        </button></Link>\r\n                    </div>\r\n\r\n                </Row>\r\n                <Row className=\"pt-5 pb-5\">\r\n                    <div className=\"col-10 offset-1 text-center text-white\">\r\n                        <h3 id=\"landing-text-second\" className=\"landingText\">Nucleus connette chi ha un'idea imprenditoriale <br/>con chi ha le giuste competenze per realizzarla (e viceversa)</h3>\r\n                    </div>\r\n                </Row>\r\n                \r\n        </Container>\r\n        <Container fluid >\r\n          <Row className=\"p-0 m-0\">\r\n            <div className=\"col-12 p-0 m-0\">\r\n                <hr className='dashed-line p-0 m-0' />\r\n            </div>                    \r\n          </Row>\r\n        </Container>\r\n        \r\n        <Container fluid>\r\n                <Row className=\"pt-5\">\r\n                    <Col className=\"text-center text-black\">\r\n                        <p id=\"landing-text-fourth\" className=\"landingText\">Hai un’idea imprenditoriale, ma non un team con cui realizzarla?</p>\r\n                        <p id=\"landing-text-fifth\" className=\"landingText\">Proponi il tuo progetto, <br/>noi testiamo competenze e motivazione per evitarti perdite di tempo</p>\r\n                    </Col>\r\n                </Row>\r\n        </Container>\r\n        <Container id=\"rectangle-landing\" fluid>\r\n                <Row>\r\n                    <div className=\"col-12 mr-auto text-md-right text-center mb-5 mb\" id=\"buttonLandingMargin\">\r\n                         <Link  type=\"button\" className=\"btn btn-primary btn-lg\" id='buttonLanding' to={`/create-project`} >Inserisci il tuo progetto</Link>\r\n                    </div>\r\n                </Row>\r\n               \r\n        </Container>\r\n        <Container fluid>\r\n           <Row>\r\n                    <div className=\"col-12\">\r\n                        <hr id='dashLine' className='dashed-line mt-md-5' style={{marginTop: 0}} />\r\n                    </div>                    \r\n                </Row>\r\n        </Container>\r\n        <Container fluid>\r\n                <Row className=\"pt-5\">\r\n                    <Col className=\"text-center text-black\">\r\n                        <p id=\"landing-text-fourth\" className=\"landingText\">Non hai un'idea, ma vorresti fare impresa?</p>\r\n                        <p id=\"landing-text-fifth\" className=\"landingText\">Scopri il progetto che più ti appassiona, unisciti e contribuisci al suo sviluppo!</p>\r\n                    </Col>\r\n                </Row>\r\n                \r\n                <Row className=\"mt-5\">\r\n                    <div className=\"col-12 col-md-6 offset-md-3 text-black pl-0 pt-0\">\r\n\r\n                    {loadingShowcase ? <Spinner /> :\r\n                        (\r\n                            <Carousel id='myCarousel' touch>\r\n                                {\r\n                                    projects.map((project, index) => <Carousel.Item key={index}><CardProject call= {project} /></Carousel.Item> )\r\n                                }\r\n                                \r\n                            </Carousel>\r\n                        )\r\n                    }\r\n                        \r\n\r\n                    </div>\r\n                </Row>\r\n                <Row className=\"mt-1 mt-md-5\" >\r\n                    <Col className=\"text-center text-gray\">\r\n                        {isAuthenticated ? (\r\n                            <p id=\"landing-text-fifth\" className=\"landingText\"><u><Link to=\"/list-projects\" style={{color:'grey'}}>Vedi tutti i progetti</Link></u></p>\r\n                        ):(<p id=\"landing-text-fifth\" className=\"landingText\"><u><Link to=\"/list-calls\" style={{color:'grey'}}>Vedi tutti i progetti</Link></u></p>)}\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"mt-5 mb-5\">\r\n                    <div className=\"col-12\">\r\n                        <hr className='dashed-line' />\r\n                    </div>                    \r\n                </Row>\r\n        </Container>  \r\n        <Container fluid className=\"mb-5\">\r\n                <Row className=\"pbt-5 mb-5\" id='diconoDiNoi'>\r\n                    <Col className=\"text-center text-black\">\r\n                        <p id=\"landing-text-DiconoDiNoi\" className=\"landingText\">Dicono di noi</p>\r\n                    </Col>\r\n                </Row>\r\n                {/* <Row className='d-md-none'>\r\n                    <Col  className='text-center text-black mt-3 mb-3'><p id=\"landing-text-fourth\"><b>Recensioni</b></p></Col>\r\n                </Row> */}\r\n                <Row>\r\n                    <div className=\"col-md-4 offset-md-2\">                            \r\n                        <div id=\"dimensionCardLanding\" >\r\n                            <div id=\"cardProjectOutside\" className=\"card mb-3 shadow p-3 bg-white\">\r\n                                <div id=\"cardProjectInside\" className=\"row no-gutters text-white mb-3 my-auto\">\r\n                                    <div className=\"col-12 my-auto\">\r\n                                        <p id=\"landing-text-review\">“Grazie a Nucleus sono riuscito a trovare il developer che stavo cercando per partire con la mia idea imprenditoriale.” </p>\r\n                                        <h3  id=\"landing-text-review\" className='text-right'>Giuseppe </h3>\r\n                                    </div>                   \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4 offset-md-1 mt-4 mt-md-0\">\r\n                            <div id=\"review-landing-position\">\r\n                                <div id=\"dimensionCardLanding\" >\r\n                                    <div id=\"cardProjectOutside\" className=\"card mb-3 shadow p-3 bg-white\">\r\n                                        <div id=\"cardProjectInside\" className=\"row no-gutters text-white mb-3 my-auto\">\r\n                                            <div className=\"col-12 my-auto\">\r\n                                                <p id=\"landing-text-review\">“Dopo la mia laurea in marketing, stavo cercando una startup in cui poter mettere in pratica le mie competenze e su Nucleus ho trovato un progetto stimolante di cui ho deciso di diventare co-founder. Ora sto portando avanti il progetto con il mio nuovo team!”</p>\r\n                                                <h3 id=\"landing-text-review\" className='text-right'>Martina</h3>\r\n                                            </div>                   \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                </Row>\r\n        </Container>  \r\n        <Footer />     \r\n    </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    project: state.project,\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, {getProjectsShowcase})(Landing)\r\n","import React from 'react';\r\nimport {Modal, Tabs, Tab, Form, Button, Container, Row, Col, option} from 'react-bootstrap';\r\n\r\nimport Logo from '../../../../../../resources/img/nucleus.png'\r\n\r\nexport const PopupCheckProfile = (props) => {\r\n    return (\r\n        <Modal\r\n          {...props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n\r\n        >\r\n          <Modal.Header closeButton id=\"backgroundPopup\">\r\n            <Modal.Title id=\"contained-modal-title-vcenter\" className=\"text-center\">\r\n                \r\n            </Modal.Title>\r\n\r\n                <Container>\r\n                    <Row>\r\n                        <div className=\"col-12 text-center\">\r\n                            <img src={Logo} style={{ width: '380px'}} alt='Loading...' />\r\n                        </div>\r\n                    </Row>\r\n                </Container>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            \r\n        <Container>\r\n            <Row>\r\n                <div className=\"col-12 text-center\">\r\n                    <p><b>Non hai ancora creato il tuo profilo!</b></p>\r\n                </div>\r\n            </Row>\r\n            <Row>\r\n                <div className=\"col-12 text-center\">\r\n                    <p>Potrai iscriverti alle proposte presenti solo dopo aver completato il tuo profilo.</p>\r\n                </div>\r\n            </Row>\r\n        </Container>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n                <Container>\r\n                        <Row>\r\n                            <div className=\"col-6 text-center\">\r\n                                 <button style={{width:'200px'}} onClick={props.clickMe} type=\"submit\" className=\"btn btn-success btn-lg\"  >Crea profilo!</button>\r\n                            </div>\r\n                            <div className=\"col-6 text-center\">\r\n                                 <button  style={{width:'200px'}} onClick={props.onHide} className=\"btn btn-warning btn-lg\" >Crea più tardi</button>\r\n                            </div>\r\n                        </Row>\r\n                </Container>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      );\r\n}\r\n\r\nexport default PopupCheckProfile\r\n","import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Container, Row } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router'\r\n\r\nimport { getCurrentProfile } from '../../../../../actions/profile'\r\nimport { getCallInformation, getProjectOwner } from '../../../../../actions/project'\r\nimport Spinner from '../../../../../resources/differentResources/Spinner'\r\nimport Footer from '../../../../components/Footer'\r\nimport Head from '../../../../components/Head'\r\nimport Menu from '../../../../components/Menu'\r\nimport Navbar from '../../../../components/Navbar'\r\nimport Popup from './componets/PopupCheckProfile'\r\n\r\n\r\n\r\nvar questions = {}\r\nvar flag = false\r\n\r\n\r\nexport const CallView = ({getCallInformation, getProjectOwner, auth:{user}, match, project:{call, loadingCall, owner}, getCurrentProfile, history, profile: {profile}}) => {\r\n\r\n    const [callData, setCallData] = useState({\r\n        Name: '',\r\n        Position:'',\r\n        Industry: '',\r\n        Development_Stage: '',\r\n        Description: '',\r\n        Analysis_Question: '',\r\n        Question: '',\r\n        Skills: '',\r\n        Type_Colaboration: '',\r\n        City_Presence_Required: 'No'\r\n    })\r\n\r\n    const{\r\n        Name,\r\n        Position,\r\n        Industry,\r\n        Development_Stage,\r\n        Description,\r\n        Analysis_Question,\r\n        Question,\r\n        Skills, \r\n        Type_Colaboration,\r\n        City_Presence_Required\r\n    } = callData\r\n\r\n    const [modalShow, setModalShow] = useState(false)\r\n\r\n   useEffect(() => {\r\n\r\n         getCallInformation(match.params.id)\r\n        \r\n\r\n        if(!loadingCall)\r\n        {\r\n            console.log('call.ProjectAnalysis', call.ProjectAnalysis)\r\n            \r\n            call.ProjectAnalysis.map((quesAns) => questions[quesAns.Analysis_Question.Question] = quesAns.Answer)\r\n\r\n            console.log('newArray', questions)\r\n            getProjectOwner(call.Project._id)\r\n            setCallData({\r\n                Name: call.Project.Name,\r\n                Position: call.Position.Position,\r\n                Industry: call.Industry,\r\n                Development_Stage: call.Project.Development_Stage.Development_Stage,\r\n                Description: call.Description,\r\n                Analysis_Question: '',\r\n                Question: '',\r\n                Skills: '',\r\n                Type_Colaboration: '',\r\n                City_Presence_Required: 'No'\r\n            })\r\n\r\n            flag = true\r\n\r\n            \r\n        }else{\r\n            setCallData({\r\n                Name: '',\r\n        Position:'',\r\n        Industry: '',\r\n        Development_Stage: '',\r\n        Description: '',\r\n        Analysis_Question: '',\r\n        Question: '',\r\n        Skills: '',\r\n        Type_Colaboration: '',\r\n        City_Presence_Required: 'No'\r\n            })\r\n        }\r\n   }, [match.params.id, loadingCall, getProjectOwner])\r\n\r\n   useEffect(() => {\r\n    getCurrentProfile()\r\n   }, getCurrentProfile)\r\n   \r\n   const [ownerProject, setOwnerProject] = useState('') \r\n\r\n   useEffect(() => {\r\n     if(owner != null) setOwnerProject(owner[0].User)\r\n   },[owner])\r\n\r\n   function checkProfile()\r\n   {\r\n        if(!(profile != null)){\r\n            \r\n            setModalShow(true)\r\n        }\r\n        else{\r\n            history.push(`/call/motivational-letter/${match.params.id}`)\r\n        }\r\n   }\r\n   console.log(questions)\r\n    return (\r\n        <div key={ match.params.id}>\r\n            {/** START - Definition of the upper part of the page */}\r\n                <Head />\r\n                <Navbar />\r\n                <Menu />\r\n            {/** END */}\r\n\r\n            <Container fluid id='createProjectBackground'>\r\n               \r\n               \r\n            {!flag ? <Spinner /> : \r\n            <Fragment>\r\n                <Row>\r\n                    <div className='col-12 col-md-6 offset-md-3'>\r\n                        {/* <h1 className='text-white display-4 text-center'>Trova il progetto a cui unirti</h1> */}\r\n                        <br />\r\n                        <div id='cardProjectOutside' className='card  shadow-lg p-3 mb-5 bg-white'>\r\n                                        \r\n                            <Row id='cardProjectInside' className='no-gutters text-white mb-3'>\r\n                                <div className='col-md-4 col-12 my-auto text-center'>\r\n                                {/* <img src='image.jpg' className='card-img' alt='...' /> */}\r\n                                    <h2>{Name}</h2>\r\n                                </div>\r\n                                <div className='col-md-5'>\r\n                                    <div className='card-body p-0'>\r\n                                        {/* <Row className='no-gutters'><div className='col-md-12 col-12 text-center text-md-left'><h2><u>{Position}</u></h2></div></Row> */}\r\n                                        {( call.Position._id === '6074b0c6e25f3348639fb03a') ? null : <Row className='no-gutters'><div className='col-md-12 col-12 text-center text-md-left'><h2><u>{Position}</u></h2></div></Row>}\r\n                                        <Row className='card-text no-gutters'>\r\n                                       \r\n                                            <div className='col-md-12 col-12 text-center text-md-left'>\r\n                                                <p className='m-0'><span className='font-weight-bold'>Competenze richieste:</span> {call.Skills.join()}</p>\r\n                                                <p className='m-0'><span className='font-weight-bold'>Settore:</span> {Industry}</p>\r\n                                                <p className='m-0'><span className='font-weight-bold'>Fase:</span> {Development_Stage}</p>\r\n                                                {/* <p className='m-0'><span className='font-weight-bold'>Stato:</span> {call.Project.Status}</p> */}\r\n                                            </div>\r\n                                        </Row>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                                \r\n                            </Row>\r\n\r\n                            {\r\n\r\n                                (questions.length === 0) ? ('') : (\r\n                                    Object.keys(questions).map((element, index) =>(<Row key={index} className='no-gutters mt-3'>\r\n                                        <div className='col-12'>\r\n                                            <p><b>{element}:</b></p>                                                       \r\n                                            <p>{questions[element]}</p>\r\n                                        </div>\r\n                                    </Row>))\r\n                                )\r\n                            }\r\n                            \r\n                        </div>\r\n\r\n                    </div>\r\n                </Row>\r\n                {\r\n                  (ownerProject === user._id) ? '':\r\n                \r\n                (<Row className='pb-5'>\r\n                    <div className='col-12 text-center'>\r\n                        {/* <Link style={{width:'190px'}} type='button' className='btn btn-primary btn-lg' to={`/call/motivational-letter/${match.params.id}`} >Candidati</Link> */}\r\n                            \r\n                        <button className='btn btn-primary btn-lg' onClick={() => checkProfile()}>Invia candidatura</button>\r\n                                    <Popup\r\n                                        formData = {\r\n                                                 'hello'\r\n                                                // formData\r\n                                            }\r\n                                        show={modalShow}\r\n                                        clickMe={() => {\r\n                                                            \r\n                                                            // createCandidature(formData)\r\n                                                            history.push(`/create-profile/new-project`)\r\n                                                        }\r\n                                                }\r\n                                        onHide={() => setModalShow(false)}\r\n                                    />\r\n                        \r\n\r\n                    </div>\r\n                </Row>)}\r\n\r\n                </Fragment>}\r\n               \r\n                \r\n                \r\n                \r\n            </Container>\r\n            <Footer  />\r\n            {/* <Footer /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    project: state.project,\r\n    profile: state.profile,\r\n    auth: state.auth\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps, {getCallInformation, getCurrentProfile, getProjectOwner})(CallView))","import React from 'react';\r\nimport {Modal, Tabs, Tab, Form, Button, Container, Row, Col, option} from 'react-bootstrap';\r\nimport Logo from '../../../../../../resources/img/nucleus.png'\r\n\r\nexport const PopupCandidature = (props) => {\r\n    return (\r\n        <Modal\r\n          {...props}\r\n          size=\"xl\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n\r\n        >\r\n          <Modal.Header closeButton id=\"backgroundPopup\">\r\n            <Modal.Title id=\"contained-modal-title-vcenter\" className=\"text-center\">\r\n                \r\n            </Modal.Title>\r\n\r\n                <Container>\r\n                    <Row>\r\n                        <div className=\"col-12 text-center\">\r\n                            <img src={Logo} style={{ width: '380px'}} alt='Loading...' />\r\n                        </div>\r\n                    </Row>\r\n                </Container>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            \r\n        <Container>\r\n            <Row>\r\n                <div className=\"col-12 text-center\">\r\n                    <p><b>Vuoi procedere con l'invio della candidatura per questo progetto?</b></p>\r\n                </div>\r\n            </Row>\r\n            <Row>\r\n                <div className=\"col-12\">\r\n                    <p>Ti ricordiamo che la candidatura vuole essere una semplice manifestazione di interesse verso il progetto; rappresenta una richiesta di poter fissare una chiamata conoscitiva con il founder.</p>\r\n                </div>\r\n            </Row>\r\n        </Container>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n                <Container>\r\n                        <Row>\r\n                            <div className=\"col-6 text-center\">\r\n                                 <button onClick={props.clickMe} type=\"submit\" className=\"btn btn-primary btn-lg\" style={{width:'140px'}} >Sì</button>\r\n                            </div>\r\n                            <div className=\"col-6 text-center\">\r\n                                 <button  onClick={props.onHide} className=\"btn btn-primary btn-lg\" style={{width:'140px'}} >No</button>\r\n                            </div>\r\n                        </Row>\r\n                </Container>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      );\r\n}\r\n\r\nexport default PopupCandidature","import React, { useState } from 'react'\r\nimport { Container, Form, Row } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { createCandidature } from '../../../../../actions/candidacy'\r\nimport Head from '../../../../components/Head'\r\nimport Menu from '../../../../components/Menu'\r\nimport Navbar from '../../../../components/Navbar'\r\nimport Popup from './components/PopupCandidature'\r\nimport Footer from '../../../../components/Footer'\r\n\r\nexport const MotivationalLetter = ({createCandidature, match, history}) => {\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n    }\r\n    const [modalShow, setModalShow] = useState(false);\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\r\n\r\n    const [formData, setFormData] = useState({\r\n        Motivational_Letter: '',\r\n        idCandidature: match.params.id \r\n    })\r\n\r\n    const {Motivational_Letter} = formData;\r\n\r\n    return (\r\n        <div>\r\n            {/** START - Definition of the upper part of the page */}\r\n            <Head />\r\n            <Navbar />\r\n            <Menu />\r\n            {/** END */}\r\n            \r\n            <Container fluid id=\"createProjectBackground\">\r\n                <br />\r\n                <br />\r\n                <br />\r\n\r\n                <Row>\r\n                    <div className=\"col-md-8 offset-md-2 col-10 offset-1 text-center text-white\">\r\n                        <h3 className=\"text-white display-4 text-center mb-3\" style={{fontSize:\"2.5rem\"}}>Descrivi perchè sei interessato a questo progetto.</h3> \r\n                        <h5 className=\"mb-5\"> Condivideremo la tua “cover letter” con il founder.</h5>                 \r\n                    </div>                  \r\n                </Row>\r\n                <Row>\r\n                    <div className=\"col-md-8 offset-md-2 col-10 offset-1\">\r\n                        <Form onSubmit = {e=>onSubmit(e)}>\r\n                            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                <Form.Control  style={{borderRadius: '25px'}} as=\"textarea\" rows={15} placeholder=\"Voglio partecipare a questo progetto perchè .....\" name='Motivational_Letter' onChange={e => onChange(e)} required maxlength='1000'/>\r\n                            </Form.Group>\r\n                            <br />\r\n                            <Row className=\"pb-3\">\r\n                                <div className=\"col-12 text-center\">\r\n                                    <button className=\"btn btn-primary btn-lg\" onClick={() => setModalShow(true)}>Invia candidatura</button>\r\n                                    <Popup\r\n                                        formData = {formData}\r\n                                        show={modalShow}\r\n                                        clickMe={() => {createCandidature(formData)\r\n                                                        history.push('/dashboard')}}\r\n                                        onHide={() => setModalShow(false)}\r\n                                    />\r\n                                </div>\r\n                                \r\n                            </Row>\r\n                        </Form> \r\n                        \r\n                            \r\n\r\n                    </div>\r\n                </Row>\r\n                \r\n            </Container>\r\n            <Footer />\r\n            {/* <Footer /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, {createCandidature})(withRouter(MotivationalLetter))\r\n","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst data = {\r\n    labels: [\r\n      'Red',\r\n      'Green',\r\n      'Yellow'\r\n    ],\r\n    datasets: [{\r\n      data: [300, 50, 100],\r\n      backgroundColor: [\r\n      '#FF6384',\r\n      '#36A2EB',\r\n      '#FFCE56'\r\n      ],\r\n      hoverBackgroundColor: [\r\n      '#FF6384',\r\n      '#36A2EB',\r\n      '#FFCE56'\r\n      ]\r\n    }]\r\n  };\r\n\r\n  const options = {\r\n    legend: {\r\n       display: false\r\n    }\r\n}\r\n\r\n  /**\r\n   * \r\n   * guideline graph: https://medium.com/swlh/data-visualization-with-react-chart-js-be5e238bc302 \r\n   */\r\nexport const UserCandidacy = ({candidacy}) => {\r\n    return (\r\n        <div>\r\n            {/* {console.log(project.Project)} */}\r\n\r\n            <div id=\"cardProjectOutside\" className=\"card shadow-lg p-3 mb-5 bg-white \">\r\n                <div id=\"cardProjectInside\" className=\"row no-gutters text-white mb-3\">\r\n                    <div className=\"col-md-3 text-center\">\r\n                    {/* <img src=\"image.jpg\" className=\"card-img\" alt=\"...\" /> */}\r\n                        <h2>{candidacy.Call_Project.Project.Name}</h2>\r\n                    </div>\r\n                    <div className=\"col-md-6 pl-4\">\r\n                        <div className=\"card-body p-0\">\r\n                            <h2 className=\"card-title row no-gutters\"><u>{candidacy.Call_Project.Position.Position}</u></h2>\r\n                            <p className=\"card-text row no-gutters\">\r\n                                <div className=\"col-8\">\r\n                                    <p className=\"m-0\"><span className=\"font-weight-bold\">Settore:</span> {candidacy.Industry}</p>\r\n                                    <p className=\"m-0\"><span className=\"font-weight-bold\">Fase di sviluppo:</span> {candidacy.Call_Project.Project.Development_Stage.Development_Stage}</p>\r\n                                    {/* <p className=\"m-0\"><span className=\"font-weight-bold\">Competenze:</span> {candidacy.Call_Project.Skills.join()}</p> */}\r\n                                </div>\r\n                            </p>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-2 pl-4 col-12 text-center\">\r\n                        {\r\n                            candidacy.Status === \"Valutazione\" ? (\r\n                                <Fragment>\r\n                                    <br />\r\n                                    <button style={{width:'130px', fontSize:'18px', cursor:'not-allowed'}} type=\"button\" className=\"btn buttonInValutazione btn-warning btn-lg\">In valutazione</button>\r\n                                    <br />\r\n                                    <br />\r\n                                    {/* <Link style={{width:'140px', fontSize:'18px'}} type=\"button\" className=\"btn btn-primary btn-lg\" to={`/call/update-motivational-letter/${candidacy._id}`}>Modifica</Link> */}\r\n                                </Fragment>\r\n                            ) :\r\n                            (\r\n                                candidacy.Status === \"Rifiutato\" ? ( <Fragment>\r\n                                    <br />\r\n                                    <button style={{width:'110px', fontSize:'18px',cursor:'not-allowed'}} type=\"button\" className=\"btn btn-danger btn-lg\">Rifiutato</button>\r\n                                    <br />\r\n                                    <br />\r\n                                    {/* <Link style={{width:'140px', fontSize:'18px'}} type=\"button\" className=\"btn btn-primary btn-lg\" to={`/call/update-motivational-letter/${candidacy._id}`}>Modifica</Link> */}\r\n                                </Fragment>) :\r\n                                ( <Fragment>\r\n                                    <br />\r\n                                    <button style={{width:'130px', fontSize:'18px', cursor:'not-allowed'}} type=\"button\" className=\"btn btn-success btn-lg\">Accettato</button>\r\n                                    <br />\r\n                                    <br />\r\n                                    {/* <Link style={{width:'140px', fontSize:'18px'}} type=\"button\" className=\"btn btn-primary btn-lg\" to={`/call/update-motivational-letter/${candidacy._id}`}>Modifica</Link> */}\r\n                                </Fragment>)\r\n                            )\r\n                        }\r\n                         \r\n                    </div>\r\n                </div>\r\n                <div className=\"row no-gutters\">\r\n                    <div className=\"col-\">\r\n                        <p><b>Lettera motivazionale: </b>{candidacy.Motivational_Letter.substring(0,400)+\"...\"}</p>\r\n                    </div>\r\n                    {/* <div className=\"col-md-4\">\r\n                        <Doughnut data={data} options={options}/>\r\n                    </div>\r\n                    <div className=\"col-md-7\">\r\n                        <div className=\"card-body p-0\">\r\n                            <p className=\"card-title row no-gutters\" >Stato Candidature</p>\r\n                            <p className=\"card-text row no-gutters\">\r\n                                <div className=\"col-8\">\r\n                                    <p className=\"m-0\">Accettate:</p>\r\n                                    <p className=\"m-0\">In attesa:</p>\r\n                                    <p className=\"m-0\">Rifiutate:</p>\r\n                                </div>\r\n                            </p>\r\n                        </div>\r\n                    </div> */}\r\n                </div>\r\n             </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    \r\n})\r\n\r\nexport default connect(mapStateToProps, {})(UserCandidacy)\r\n","/**\r\n * \r\n * List with the candidacies done by the user \r\n */\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getCandidaturesOfTheUser } from '../../../../../actions/candidacy';\r\nimport Head from '../../../../components/Head';\r\nimport Menu from '../../../../components/Menu';\r\nimport Navbar from '../../../../components/Navbar';\r\nimport UserCandidacy from './components/UserCandidacy';\r\nimport Footer from '../../../../components/Footer';\r\nimport { Fragment } from 'react';\r\nimport Spinner from '../../../../../resources/differentResources/Spinner' \r\nimport {Link} from 'react-router-dom';\r\n\r\nexport const CandidaciesOfTheUser = (\r\n     { getCandidaturesOfTheUser, candidacy: { userCandidacies, userCandidaciesLoading }  }\r\n    \r\n    ) => {\r\n\r\n    useEffect(() => {\r\n        \r\n        getCandidaturesOfTheUser()\r\n    \r\n    }, [getCandidaturesOfTheUser])\r\n    \r\n    return (\r\n        <div >\r\n            {/** START - Definition of the upper part of the page */}\r\n            <Head />\r\n            <Navbar />\r\n            <Menu />\r\n            {/** END */}\r\n            <Container id=\"createProjectBackground\" fluid >\r\n            \r\n\r\n            { userCandidaciesLoading ? (<Spinner />) :(\r\n                        \r\n                        userCandidacies.length !=0 ? (\r\n                    <Fragment>\r\n                             <Row className=\"pt-5 pb-3\">\r\n                                    <div className=\"pt-5 pb-3 col-12 col-md-6 offset-md-3\"> <h3 className=\"text-white display-4\">Le mie candidature</h3> </div>\r\n                                </Row>\r\n                            {\r\n                                 userCandidacies.map((candidacy, index) => ( \r\n                            \r\n                                    <Row>\r\n                                    <div key={index} className=\"col-10 offset-1 col-md-6 offset-md-3\">\r\n                                         <UserCandidacy key={candidacy._id} candidacy={candidacy}/>\r\n                                    </div>\r\n                                    </Row>\r\n                                    \r\n                                    ))\r\n                            }  \r\n                    </Fragment>\r\n                    \r\n                    ) : (\r\n                            <Fragment>\r\n                                <Row className=\"pt-5 pb-3\">\r\n                                    <div className=\"pt-5 pb-3 col-12 col-md-6 offset-md-3\"> <h3 className=\"text-white display-4\">Non ti sei ancora candidato a nessun progetto! Vedi i progetti disponibili a <Link style={{color:'white'}}  to='/list-projects'>questa pagina</Link>!</h3> </div>\r\n                                </Row>\r\n                            </Fragment>\r\n                            )\r\n                        )\r\n                    }\r\n\r\n                \r\n            </Container>\r\n            <Footer />\r\n            </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    candidacy: state.candidacy\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    \r\n    getCandidaturesOfTheUser\r\n\r\n})(CandidaciesOfTheUser)","import React from 'react';\r\nimport {Modal, Tabs, Tab, Form, Button, Container, Row, Col, option} from 'react-bootstrap';\r\nimport Logo from '../../../../../../resources/img/nucleus.png'\r\n\r\nexport const PopupCandidature = (props) => {\r\n    return (\r\n        <Modal\r\n          {...props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n\r\n        >\r\n          <Modal.Header closeButton id=\"backgroundPopup\">\r\n            <Modal.Title id=\"contained-modal-title-vcenter\" className=\"text-center\">\r\n                \r\n            </Modal.Title>\r\n\r\n                <Container>\r\n                    <Row>\r\n                        <div className=\"col-12 text-center\">\r\n                            <img src={Logo} style={{ width: '380px'}} alt='Loading...' />\r\n                        </div>\r\n                    </Row>\r\n                </Container>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            \r\n        <Container>\r\n            <Row>\r\n                <div className=\"col-12 text-center\">\r\n                    <p><b>Sei sicuro di voler conoscere il team member?</b></p>\r\n                </div>\r\n            </Row>\r\n        </Container>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n                <Container>\r\n                        <Row>\r\n                            <div className=\"col-6 text-center\">\r\n                                 <button onClick={props.clickMe} type=\"submit\" className=\"btn btn-primary btn-lg\" style={{width:'140px'}} >Sì</button>\r\n                            </div>\r\n                            <div className=\"col-6 text-center\">\r\n                                 <button  onClick={props.onHide} className=\"btn btn-primary btn-lg\" style={{width:'140px'}} >No</button>\r\n                            </div>\r\n                        </Row>\r\n                </Container>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      );\r\n}\r\n\r\nexport default PopupCandidature","import React from 'react';\r\nimport {Modal, Tabs, Tab, Form, Button, Container, Row, Col, option} from 'react-bootstrap';\r\nimport Logo from '../../../../../../resources/img/nucleus.png'\r\n\r\nexport const PopupCandidatureReject = (props) => {\r\n    return (\r\n        <Modal\r\n          {...props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n\r\n        >\r\n          <Modal.Header closeButton id=\"backgroundPopup\">\r\n            <Modal.Title id=\"contained-modal-title-vcenter\" className=\"text-center\">\r\n                \r\n            </Modal.Title>\r\n\r\n                <Container>\r\n                    <Row>\r\n                        <div className=\"col-12 text-center\">\r\n                            <img src={Logo} style={{ width: '380px'}} alt='Loading...' />\r\n                        </div>\r\n                    </Row>\r\n                </Container>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            \r\n        <Container>\r\n            <Row>\r\n                <div className=\"col-12 text-center\">\r\n                    <p><b>Sei sicuro di non voler conoscere il team member?</b></p>\r\n                </div>\r\n            </Row>\r\n            <Row>\r\n                <div className=\"col-12\">\r\n                    <p>Se rifiuterai la candidatura rinuncerai a metterti in contatto con questo profilo.</p>\r\n                </div>\r\n            </Row>\r\n        </Container>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n                <Container>\r\n                        <Row>\r\n                            <div className=\"col-6 text-center\">\r\n                                 <button onClick={props.clickMe} type=\"submit\" className=\"btn btn-primary btn-lg\" style={{width:'140px'}} >Sì</button>\r\n                            </div>\r\n                            <div className=\"col-6 text-center\">\r\n                                 <button  onClick={props.onHide} className=\"btn btn-primary btn-lg\" style={{width:'140px'}} >No</button>\r\n                            </div>\r\n                        </Row>\r\n                </Container>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      );\r\n}\r\n\r\nexport default PopupCandidatureReject","import React, { useState } from 'react';\r\nimport { Container, Form, Modal, Row } from 'react-bootstrap';\r\nimport Logo from '../../../../../../resources/img/nucleus.png';\r\n\r\nexport const PopupCandidatureRejectFeedback = (props) => {\r\n\r\n    const [formData, setFormData] = useState('')\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\r\n    let data = ''\r\n    function myFunction()\r\n    {\r\n        props.updateFeedback('helloTest') \r\n        props.setFeebackForm('hheltoTest1')\r\n        data = formData\r\n        props.clickMe(data) \r\n    }\r\n    \r\n\r\n    return (\r\n        <Modal\r\n          {...props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n\r\n        >\r\n          <Modal.Header closeButton id=\"backgroundPopup\">\r\n            <Modal.Title id=\"contained-modal-title-vcenter\" className=\"text-center\">\r\n                \r\n            </Modal.Title>\r\n\r\n                <Container>\r\n                    <Row>\r\n                        <div className=\"col-12 text-center\">\r\n                            <img src={Logo} style={{ width: '380px'}} alt='Loading...' />\r\n                        </div>\r\n                    </Row>\r\n                </Container>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            \r\n            <Container>\r\n                <Row>\r\n                    <div className=\"col-12 text-center\">\r\n                        {/* <p><b>Sei sicuro di non voler conoscere il team member?</b></p> */}\r\n                    </div>\r\n                </Row>\r\n                <Row>\r\n                    <div className=\"col-12\">\r\n                        <p>Ti chediamo un breve commento che motivi la tua scelta di non voler conoscere questo candidato team member.</p>\r\n                    </div>\r\n                </Row>\r\n            </Container>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n                <Container>\r\n                        <Row>\r\n                             <div className=\"col-12\">\r\n                                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                    <Form.Control  style={{borderRadius: '25px'}} as=\"textarea\" rows={5} placeholder=\"Feedback\" name='formData' onChange={e => onChange(e)}  />\r\n                                </Form.Group>\r\n                            </div>\r\n                        </Row>\r\n                        <Row>\r\n                            <div className=\"col-12 text-center\">\r\n                                  <button onClick={myFunction}  className=\"btn btn-primary btn-lg\" style={{width:'140px'}} >Invia</button>\r\n                            </div>\r\n                             {/* <div className=\"col-6 text-center\">\r\n                                 <button  onClick={props.onHide} className=\"btn btn-primary btn-lg\" style={{width:'140px'}} >No</button>\r\n                             </div> */}\r\n                        </Row>\r\n                </Container>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      );\r\n}\r\n\r\nexport default PopupCandidatureRejectFeedback\r\n\r\n\r\n\r\n// import React, {useState} from 'react';\r\n// import {Modal, Tabs, Tab, Form, Button, Container, Row, Col, option} from 'react-bootstrap';\r\n// import Logo from '../../../../../../img/nucleus.png';\r\n\r\n// export const PopupCandidatureRejectFeedback = (props) => {\r\n\r\n    // const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\r\n\r\n    // const [formData, setFormData] = useState('')\r\n\r\n//     return (\r\n//         <Modal\r\n//           {...props}\r\n//           size=\"lg\"\r\n//           aria-labelledby=\"contained-modal-title-vcenter\"\r\n//           centered\r\n\r\n//         >\r\n//           <Modal.Header closeButton id=\"backgroundPopup\">\r\n//             <Modal.Title id=\"contained-modal-title-vcenter\" className=\"text-center\">\r\n                \r\n//             </Modal.Title>\r\n\r\n//                 <Container>\r\n//                     <Row>\r\n//                         <div className=\"col-12 text-center\">\r\n//                             <img src={Logo} style={{ width: '380px'}} alt='Loading...' />\r\n//                         </div>\r\n//                     </Row>\r\n//                 </Container>\r\n//           </Modal.Header>\r\n//           <Modal.Body>\r\n            \r\n        \r\n//           </Modal.Body>\r\n//           <Modal.Footer>\r\n//                 <Container>\r\n                        \r\n//                         <Row>\r\n//                             <div className=\"col-6 text-center\">\r\n//                                  <button onClick={props.clickMe(formData)} type=\"submit\" className=\"btn btn-primary btn-lg\" style={{width:'140px'}} >Sì</button>\r\n//                             </div>\r\n//                             <div className=\"col-6 text-center\">\r\n//                                  <button  onClick={props.onHide} className=\"btn btn-primary btn-lg\" style={{width:'140px'}} >No</button>\r\n//                             </div>\r\n//                         </Row>\r\n//                 </Container>\r\n//           </Modal.Footer>\r\n//         </Modal>\r\n//       );\r\n// }\r\n\r\n// export default PopupCandidatureRejectFeedback","import React from 'react';\r\nimport {Modal, Tabs, Tab, Form, Button, Container, Row, Col, option} from 'react-bootstrap';\r\nimport Logo from '../../../../../../resources/img/nucleus.png'\r\n\r\nexport const PopupCandidature = (props) => {\r\n    return (\r\n        <Modal\r\n          {...props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n\r\n        >\r\n          <Modal.Header closeButton id=\"backgroundPopup\">\r\n            <Modal.Title id=\"contained-modal-title-vcenter\" className=\"text-center\">\r\n                \r\n            </Modal.Title>\r\n\r\n                <Container>\r\n                    <Row>\r\n                        <div className=\"col-12 text-center\">\r\n                            <img src={Logo} style={{ width: '380px'}} alt='Loading...' />\r\n                        </div>\r\n                    </Row>\r\n                </Container>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            \r\n            <Container>\r\n                <Row>\r\n                    <div className=\"col-12 text-center\">\r\n                        <p><b>Complimenti, hai fatto il primo passo per costruire il team per il tuo progetto!</b></p>\r\n                    </div>\r\n                </Row>\r\n                <Row>\r\n                    <div className=\"col-12\">\r\n                        <p>Per poter organizzare una prima chiamata conoscitiva, ti chiediamo di inserire le tue disponibilità in questo form.</p>\r\n                    </div>\r\n                </Row>\r\n                {/* <Row>\r\n                    <div className=\"col-2 text-right\">Step 1.</div>\r\n                    <div className=\"col-10\">Compila il calendly con le tue disponibilità</div>\r\n                </Row>\r\n                <Row>\r\n                    <div className=\"col-2 text-right\">Step 2.</div>\r\n                    <div className=\"col-10\">Attendi che il candidato team member prenoti una chiamata con te</div>\r\n                </Row>\r\n                <Row>\r\n                    <div className=\"col-2 text-right\">Step 3.</div>\r\n                    <div className=\"col-10\">Incontratevi e conoscetevi online</div>\r\n                </Row> */}\r\n            </Container>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n                <Container>\r\n                        <Row>\r\n                            <div className=\"col-12 text-center\">\r\n                                 <button onClick={props.clickMe} type=\"submit\" className=\"btn btn-primary btn-lg\" style={{width:'300px'}} >Vai al form</button>\r\n                            </div>\r\n                        </Row>\r\n                </Container>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      );\r\n}\r\n\r\nexport default PopupCandidature","import React, {useEffect, useState} from 'react';\r\nimport { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {updateCallStatus} from '../../../../../../actions/candidacy'\r\nimport Popup from './PopupCandidature'\r\nimport PopupRejected from './PopupCandidatureReject'\r\nimport PopupRejectedFeedback from './PopupCandidatureRejectFeedback'\r\nimport PopupCandidatureAcceptedCalendar from './PopupCandidatureAcceptedCalendar'\r\n\r\n\r\n  /**\r\n   *\r\n   * guideline graph: https://medium.com/swlh/data-visualization-with-react-chart-js-be5e238bc302\r\n   */\r\nexport const CandidateCall = ({candidate, updateCallStatus, callId, history}) => {\r\n\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [modalShowRejected, setModalShowRejected] = useState(false);\r\n    const [modalShowRejectedFeedback, setModalShowRejectedFeedback] = useState(false);\r\n    const [modalShowAcceptedCalendar, setModalShowAcceptedCalendark] = useState(false);\r\n\r\n    const [feedbackForm, setFeebackForm] = useState('')\r\n\r\n    const refreshPage = ()=>{\r\n        window.location.reload(true);  }\r\n\r\n        \r\n    function updateAccepted()\r\n    {\r\n        console.log('E stata accettata')\r\n    }\r\n    useEffect(()=>{\r\n        console.log(callId)\r\n    }, [callId])\r\n    \r\n    function updateFeedback(newData){\r\n        setFeebackForm(newData)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {/* {console.log(project.Project)} */}\r\n\r\n                <div id=\"cardProjectOutside\" className=\"card  shadow-lg p-3 mb-5 bg-white \">\r\n                    <div id=\"cardProjectInside\" className=\"row no-gutters text-white mb-3\">\r\n                        <div className=\"col-md-4 text-center\">\r\n                        {/* <img src=\"image.jpg\" className=\"card-img\" alt=\"...\" /> */}\r\n                            <h2>{}</h2>\r\n\r\n\r\n                            {/* /**\r\n                                - mettere sopra quelle accettate\r\n                                - mettere in fondo quelle rifiutate\r\n                             */}\r\n\r\n                            {\r\n                                candidate.Status === 'Valutazione' ? (\r\n                                    <Fragment>\r\n                                        <button onClick={() => {\r\n                                            // updateCallStatus({idCandidature: candidate._id, Status: 'Accettato'}\r\n                                            setModalShow(true)\r\n                                            }} style={{width:'140px'}} type=\"button\" className=\"btn btn-success btn-lg\">Accetta</button>\r\n                                        \r\n                                        <Popup\r\n                                            show={modalShow}\r\n                                            clickMe={() => {   // updateAccepted()\r\n                                                                setModalShow(false)\r\n                                                                 setModalShowAcceptedCalendark(true)\r\n                                                                // createCandidature(formData)\r\n                                                                // history.push('/create-profile')\r\n                                                            }\r\n                                                    }\r\n                                            onHide={() => setModalShow(false)}\r\n                                        />\r\n                                         <PopupCandidatureAcceptedCalendar\r\n                                            \r\n                                            show={modalShowAcceptedCalendar}\r\n                                            clickMe={() => {   // updateAccepted()\r\n\r\n                                                                console.log(\"hello\")\r\n                                                                updateCallStatus({idCandidature: candidate._id, Status: 'Accettato', Feedback: 'Accettato'})\r\n                                                                window.location.assign('https://forms.gle/3NZCA5PNMJ8ffgpB7')\r\n                                                                // refreshPage()\r\n                                                                // createCandidature(formData)\r\n                                                                // history.push(`/list-candidate/call/${callId}`)\r\n                                                            }\r\n                                                    }\r\n                                            onHide={() => setModalShowAcceptedCalendark(false)}\r\n                                        />\r\n                                        \r\n                                        <br />\r\n                                        <br />\r\n\r\n                                        <button onClick={() => {setModalShowRejected(true)}} style={{width:'140px'}} type=\"button\" className=\"btn btn-danger btn-lg\">Rifiuta</button>\r\n                                        <PopupRejected\r\n                                            \r\n                                            show={modalShowRejected}\r\n                                            clickMe={() => {  \r\n                                                                \r\n                                                                // updateAccepted()\r\n                                                                setModalShowRejected(false)\r\n                                                               setModalShowRejectedFeedback(true)\r\n                                                                // createCandidature(formData)\r\n                                                                // history.push('/create-profile')\r\n                                                            }\r\n                                                    }\r\n                                            onHide={() => setModalShowRejected(false)}\r\n                                        /> \r\n\r\n                                                 \r\n                                        <PopupRejectedFeedback\r\n                                           \r\n                                            show={modalShowRejectedFeedback}\r\n                                            updateFeedback={updateFeedback}\r\n                                            setFeebackForm={setFeebackForm}\r\n                                             clickMe={(e) => {  \r\n                                                                console.log(\"PopupRejectedFeedback\")\r\n                                                                // updateCallStatus({idCandidature: candidate._id, Status: 'Rifiutato', Feedback: \"hello\" })\r\n                                                                // console.log(e)\r\n                                                                updateCallStatus({idCandidature: candidate._id, Status: 'Rifiutato', Feedback: e })\r\n                                                                refreshPage()\r\n                                                                // history.push(`/list-candidate/call/${callId}`)\r\n                                                            }\r\n                                                    } \r\n                                            onHide={() => setModalShowRejectedFeedback(false)}\r\n                                        />   \r\n\r\n\r\n\r\n\r\n                                    </Fragment>\r\n                                ) : (candidate.Status === 'Rifiutato'? (<button style={{width:'140px', cursor:'not-allowed'}} type=\"button\" className=\"btn btn-danger btn-lg\" >Rifiutato</button>) :\r\n                                (<button style={{width:'140px', cursor:'not-allowed'}} type=\"button\" className=\"btn btn-success btn-lg\">Accettata</button>)\r\n                                 )\r\n\r\n                            }\r\n                            </div>\r\n                        <div className=\"col-md-7\">\r\n                        <div className=\"card-body p-0\">\r\n                            <h2 className=\"card-title row no-gutters\">{candidate.User.Name}</h2>\r\n                            <div className=\"card-text row no-gutters\">\r\n                                <div className=\"col-8\">\r\n                                    <p className=\"m-0\"><span className=\"font-weight-bold\">Professione:</span> {candidate.Profile.Position.Position}</p>\r\n                                    <p className=\"m-0\"><span className=\"font-weight-bold\">Settore:</span> {}</p>\r\n                                    <p className=\"m-0\"><span className=\"font-weight-bold\">Competenze:</span> {candidate.Profile.Skills.join()}</p>\r\n\r\n                                </div>\r\n                                <div className=\"col-4\">\r\n                                    {/* <Link style={{width:'140px'}} type=\"button\" className=\"btn btn-primary btn-lg\" to={`/list-candidate/${project._id}`} >Vedi candidature</Link> */}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-text row no-gutters\">\r\n                                <div className=\"col-12\">\r\n                                    <p className=\"m-0\"><span className=\"font-weight-bold\">Breve bio:</span> {candidate.Profile.Biography}</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row no-gutters\">\r\n                        <div className=\"col-12\">\r\n                            <p><b>Lettera motivazionale: </b>{candidate.Motivational_Letter}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, {updateCallStatus})(CandidateCall)\r\n","/**\r\n * \r\n * List of the candidates for a certain project\r\n */\r\n\r\nimport React, { useEffect, Fragment, useState } from 'react';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getCandidatesCall } from '../../../../../actions/candidacy';\r\nimport Head from '../../../../components/Head';\r\nimport Menu from '../../../../components/Menu';\r\nimport Navbar from '../../../../components/Navbar';\r\nimport CandidateCall from './components/CandidateCall';\r\nimport {Link} from 'react-router-dom'\r\nimport { withRouter } from \"react-router\";\r\nimport Spinner from '../../../../../resources/differentResources/Spinner' \r\nimport Footer from '../../../../components/Footer';\r\nimport { createHashHistory } from 'history'\r\nexport const history = createHashHistory()\r\n\r\nexport const CandidatesForCall = ({match, getCandidatesCall, candidacy:{candidatesProject, candidatesProjectLoading, history} }) => {\r\n\r\n   \r\n    useEffect(() => {\r\n        \r\n        getCandidatesCall(match.params.id)\r\n    \r\n    }, [getCandidatesCall, match.params.id])\r\n    // }, [getCandidatesCall, match.params.id, candidatesProject])\r\n\r\n    return (\r\n        <div>\r\n            {/** START - Definition of the upper part of the page */}\r\n            <Head />\r\n            <Navbar />\r\n            <Menu />\r\n            {/** END */}\r\n            <Container fluid id=\"createProjectBackground\" >\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n\r\n            { candidatesProjectLoading ? (<Spinner />) :(\r\n                        \r\n                        candidatesProject.length !=0 ? (\r\n                    <Fragment>\r\n                            <Row>\r\n                                 <div className=\"col-12 col-md-6 offset-md-3\"> <h1 className=\"text-white display-4\">Lista candidati per la call</h1> </div>\r\n                             </Row>  \r\n                            {\r\n                                 candidatesProject.map((candidate, index) => ( \r\n                            \r\n                                    <Row  key={index}>\r\n                                         <div key={index} className=\"col-10 offset-1 col-md-6 offset-md-3\">\r\n                                              <CandidateCall key={candidate._id} candidate={candidate} callId={ match.params.id} history={history} />\r\n                                        </div>\r\n                                    </Row>\r\n                             ))\r\n                                    \r\n                                  \r\n                            }  \r\n                    </Fragment>\r\n                    \r\n                    ) : (\r\n                            <Fragment>\r\n                                <Row>\r\n                                    <div className=\"col-12 col-md-6 offset-md-3\"> <h1 className=\"text-white display-4\">Non hai ancora ricevuto nessuna candidatura! Ritorna alla <Link  to='/personal-list-projects'>lista dei tuoi progetti</Link></h1> </div>\r\n                                </Row>\r\n                            </Fragment>\r\n                            )\r\n                        )\r\n                    }\r\n            </Container>\r\n            <Footer />\r\n            </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    candidacy: state.candidacy\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    getCandidatesCall\r\n})(CandidatesForCall)","import React, { useState, useEffect } from 'react'\r\nimport { Container, Form, Row } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { getCandidature, updateCandidature } from '../../../../../actions/candidacy'\r\nimport Head from '../../../../components/Head'\r\nimport Menu from '../../../../components/Menu'\r\nimport Navbar from '../../../../components/Navbar'\r\n\r\nexport const UpdateCandidature = ({getCandidature, updateCandidature, match, history, candidacy: {candidature, candidacyLoading}}) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        Motivational_Letter: '',\r\n        idCandidature: match.params.id \r\n    })\r\n\r\n    useEffect(() => {\r\n        getCandidature(match.params.id)\r\n    }, [getCandidature, match.params.id])\r\n\r\n    useEffect(() => {\r\n       if(!candidacyLoading)\r\n        {setFormData({\r\n            Motivational_Letter: candidature.Motivational_Letter,\r\n            idCandidature: match.params.id \r\n        })}\r\n    }, [candidacyLoading])\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        updateCandidature(formData)\r\n        history.push('/dashboard')\r\n\r\n    }\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\r\n\r\n    \r\n    const {Motivational_Letter, idCandidature} = formData\r\n\r\n    return (\r\n        <div>\r\n        {/** START - Definition of the upper part of the page */}\r\n        <Head />\r\n        <Navbar />\r\n        <Menu />\r\n        {/** END */}\r\n        \r\n        <Container fluid id=\"createProjectBackground\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n\r\n            <Row>\r\n                <div className=\"col-8 offset-2\">\r\n                    <h1 className=\"text-white display-4 text-center\">Lettera motivazionale</h1>\r\n                    <br />                     \r\n                </div>                  \r\n            </Row>\r\n            <Row>\r\n                <div className=\"col-8 offset-2\">\r\n                    <Form onSubmit = {e=>onSubmit(e)}>\r\n                        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Control  style={{borderRadius: '25px'}} as=\"textarea\" rows={15} placeholder=\"Voglio partecipare a questo progetto perchè .....\" name='Motivational_Letter' value={Motivational_Letter} onChange={e => onChange(e)} required />\r\n                        </Form.Group>\r\n                        <br />\r\n                        <Row>\r\n                            <div className=\"col-12 text-center\">\r\n                                <button className=\"btn btn-primary btn-lg\">Aggiorno candidatura</button>\r\n                                \r\n                            </div>\r\n                            \r\n                        </Row>\r\n                    </Form> \r\n                    \r\n                        \r\n\r\n                </div>\r\n            </Row>\r\n        </Container>\r\n        {/* <Footer /> */}\r\n    </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    candidacy: state.candidacy\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps, {getCandidature, updateCandidature})(UpdateCandidature)) \r\n","export default __webpack_public_path__ + \"static/media/about_us_image_1.81f85f1c.jpg\";","export default __webpack_public_path__ + \"static/media/about_us_image_2.0cb1b139.jpg\";","/**\r\n * Page that explains the project\r\n */\r\n\r\nimport React, { Fragment } from 'react'\r\nimport { Container, Row, Image } from 'react-bootstrap'\r\nimport Footer from '../../components/FooterPublic'\r\nimport Head from '../../components/Head'\r\nimport Navbar from '../../components/NavbarPublic'\r\nimport Image_1 from '../../../resources/img/about_us_image_1.jpg'\r\nimport Image_2 from '../../../resources/img/about_us_image_2.jpg'\r\nimport {Link, Redirect, withRouter} from 'react-router-dom' \r\nimport { connect } from 'react-redux'\r\n\r\n\r\nimport PrivateNavbar from '../../components/Navbar'\r\nimport Menu from '../../components/Menu'\r\n\r\nconst AboutUs = ({auth: {isAuthenticated}}) => {\r\n    return (\r\n        <Fragment>\r\n\r\n            {/**Definition of the upper part of the page */}\r\n                <Head />\r\n                {isAuthenticated ? (\r\n                <Fragment>\r\n                        <PrivateNavbar />\r\n                        <Menu />\r\n                </Fragment>\r\n            ):(<Navbar />)}\r\n            {/** END */}\r\n\r\n            <Container fluid id=\"background-about-us-svg\">\r\n                <Row className=\"pt-5\">\r\n                    <div className=\"col-md-8 offset-md-2 col-12 text-center \">\r\n                        <p id=\"about-text-first\" className=\"text-black bold-text-class\">Connettiamo chi ha un’idea imprenditoriale con chi ha<br/> giuste competenze e motivazione per realizzarla</p>\r\n                    </div>\r\n                </Row>\r\n                <Row>\r\n                    <div className=\"col-md-3 offset-md-2 col-10 offset-1 shadow\" id='containerFormCreateProject'>\r\n                        <Row>\r\n                            <div className=\"col-10 offset-1 col-md-12 offset-md-0 p-0\"> <Image src={Image_1} width=\"auto\" height='290px' style={{ borderRadius: '10%' }} /></div>\r\n                        </Row>\r\n                        <Row className=\"pt-5\">\r\n                            <div className=\"col-12 text-center text-white p-0\"><p id=\"about-text-card-first\" >Founder o aspiranti tali che cercano co-founder o team member</p></div>\r\n                        </Row>\r\n                        <Row>\r\n                            <div className=\"col-12 text-white p-0\">\r\n                                <ol>\r\n                                    <p id=\"about-text-card-second\"><li className=\"mt-3\">Carica il tuo progetto e indica la figura che cerchi</li></p>\r\n                                    <p id=\"about-text-card-second\"><li className=\"mt-3\">Ricevi candidature di potenziali team member</li></p>\r\n                                    <p id=\"about-text-card-second\"><li className=\"mt-3\">Seleziona i profili in linea con quanto richiesto dal processo</li></p>\r\n                                    <p id=\"about-text-card-second\"><li className=\"mt-3\">Incontra il potenziale team member</li></p> \r\n                                </ol>\r\n                            </div>\r\n                        </Row>\r\n                    </div>\r\n                    <div className=\"col-md-3 offset-md-2 col-10 offset-1 shadow\" id='containerFormCreateProject'>\r\n                        <Row>\r\n                            <div className=\"col-10 offset-1 col-md-12 offset-md-0 p-0\"> <Image src={Image_2} width=\"auto\" height='290px' style={{ borderRadius: '10%' }} /></div>\r\n                        </Row>\r\n                        <Row className=\"pt-5\">\r\n                            <div className=\"col-12 text-center text-white p-0\"><p id=\"about-text-card-first\">Professionisti che vogliono contribuire alla nascita di una startup</p></div>\r\n                        </Row>\r\n                        <Row>\r\n                            <div className=\"col-12 text-white p-0\">\r\n                                <ol>\r\n                                    <p id=\"about-text-card-second\"><li className=\"mt-3\">Scegli i progetti che più ti interessano</li></p>\r\n                                    <p id=\"about-text-card-second\"><li className=\"mt-3\">Invia la tua candidatura per conoscere il founder</li></p>\r\n                                    <p id=\"about-text-card-second\"><li className=\"mt-3\">Scopri se il tuo profilo è in linea con quanto richiesto dal progetto</li></p>\r\n                                    <p id=\"about-text-card-second\"><li className=\"mt-3\">Incontra l'aspirante founder</li></p> \r\n                                </ol>\r\n                            </div>\r\n                        </Row>\r\n                    </div>\r\n                </Row>\r\n                <Row className=\"mt-4 mt-md-0\">\r\n                    <div className=\"col-12 text-center my-auto\">                          \r\n                         <Link type=\"button\"  className=\"btn btn-primary btn-lg\" id='buttonLanding' to={`/create-project`} >Inizia ora</Link>\r\n                    </div>\r\n                </Row>\r\n                <Row className=\"mt-5 mb-5\">\r\n                    <div className=\"col-12\">\r\n                        <hr className='dashed-line' />\r\n                    </div>                    \r\n                </Row>\r\n            </Container>\r\n            <Container fluid id='background-about-us-svg_2'>\r\n                <Row>\r\n                    <div className=\"col-md-6 offset-md-3 col-10 offset-1\">\r\n\r\n                        <div id=\"cardProjectOutside\" className=\"card  shadow-lg p-3 mb-5 bg-white \">\r\n                            <div id=\"cardProjectInside\" className=\"row no-gutters text-white mb-3 shadow\">\r\n                                <div className=\"col-md-12\">\r\n                                {/* <img src=\"image.jpg\" className=\"card-img\" alt=\"...\" /> */}\r\n                                    <p id=\"about-text-card-third\" className=\"p-3 text-center\">Testiamo gli elementi chiave <br /> per costruire un team di successo</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row no-gutters\">\r\n                                <div className=\"col-12 p-0 text-black\">\r\n                                    <Row>\r\n                                        <div className=\"col-10 offset-1 col-md-2 offset-1 text-center my-auto\">\r\n                                            <h2 style={{fontSize:'70px'}}>1.</h2>\r\n                                        </div>\r\n                                        <div className=\"col-10 offset-1 col-md-8 \">\r\n                                            <p id=\"about-text-card-fourth\"><b>Competenze:</b></p>\r\n                                            <h5>Ricerca mirata delle competenze necessarie per creare team eterogenei</h5>\r\n                                        </div>\r\n                                    </Row>\r\n                                    <Row className='mt-5'>\r\n                                        <div className=\"col-10 offset-1 col-md-2 offset-1 text-center my-auto\">\r\n                                            <h2 style={{fontSize:'70px'}}>2.</h2>\r\n                                        </div>\r\n                                        <div className=\"col-10 offset-1 col-md-8 \">\r\n                                            <p id=\"about-text-card-fourth\"><b>Motivazione:</b></p>\r\n                                            <h5>La volontà di unirsi al  progetto viene subito testata</h5>\r\n                                        </div>\r\n                                    </Row>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Row>\r\n                <Row style={{marginTop: '10vh'}}>\r\n                    <div className=\"col-10 offset-1 col-md-6 offset-md-3 text-center text-black\">\r\n                        <Row>\r\n                            <div className='col-12 mb-5'><h1 >Contattaci</h1></div>\r\n                        </Row>\r\n                        <Row>\r\n                            <div className='col-12 ' style={{fontSize:'28px'}}>\r\n                                <p> info@nucleus.it</p>\r\n                                {/* <p>Linkedin:ddddddds</p>                             */}\r\n                            </div>\r\n                        </Row>\r\n                    </div>\r\n                </Row>\r\n                <Row className=\"mt-5 mb-5\">\r\n                    <div className=\"col-12\">\r\n                        <hr className='dashed-line' />\r\n                    </div>                    \r\n                </Row>\r\n            </Container>\r\n            <Container id='faq'>\r\n                <Row>\r\n                    <div className=\"col-10 offset-1 text-center text-black mb-5\">\r\n                        <h1>Domande frequenti</h1>\r\n                    </div>\r\n                </Row>\r\n                <Row>\r\n                <div className=\"col-10 col-md-10\">\r\n                        <p id=\"about-faq-question\">1. Se mi candido a un progetto, sono poi vincolato a prendervi parte?</p>\r\n                        <p id=\"about-faq-answer\">No, la candidatura è una semplice manifestazione di interesse a voler conoscere il founder o aspirante tale.</p>\r\n                        <br />\r\n                    </div>\r\n                </Row>\r\n                <Row>\r\n                <div className=\"col-10 col-md-10\">\r\n                        <p id=\"about-faq-question\">2. Come avverrà l’incontro tra founder  e team member?</p>\r\n                        <p id=\"about-faq-answer\">Avverrà tramite videochiamata organizzata da Nucleus. </p>\r\n                        <br />\r\n                    </div>\r\n                </Row>\r\n                <Row>\r\n                <div className=\"col-10 col-md-10\">\r\n                        <p id=\"about-faq-question\">3. Il servizio è a pagamento?</p>\r\n                        <p id=\"about-faq-answer\">No, al momento è completamente gratuito. </p>\r\n                        <br />\r\n                    </div>\r\n                </Row>\r\n                <Row>\r\n                <div className=\"col-10 col-md-10\">\r\n                        <p id=\"about-faq-question\">4. Mi posso candidare a più progetti contemporaneamente?</p>\r\n                        <p id=\"about-faq-answer\">Sì, non c'è alcun limite.</p>\r\n                        <br />\r\n                    </div>\r\n                </Row>\r\n                <Row>\r\n                <div className=\"col-10 col-md-10\">\r\n                        <p id=\"about-faq-question\">5. Ho una domanda che non è tra queste, come faccio?</p>\r\n                        <p id=\"about-faq-answer\">Per qualsiasi altra domanda e curiosità puoi scriverci a  info@nucleus.it.</p>\r\n                        <br />\r\n                    </div>\r\n                </Row>\r\n            </Container>\r\n            <Footer />\r\n        </Fragment>\r\n    )\r\n}\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {})(withRouter(AboutUs))\r\n","import React  from 'react';\r\nimport {Modal, Tabs, Tab, Form, Button, Container, Row, Col, option} from 'react-bootstrap';\r\nimport Logo from '../../../../resources/img/nucleus.png';\r\n\r\nexport const PopupScopriProgetto = (props) => {\r\n    return (\r\n        <Modal\r\n          {...props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n\r\n        >\r\n          <Modal.Header closeButton id=\"backgroundPopup\">\r\n            <Modal.Title id=\"contained-modal-title-vcenter\" className=\"text-center\">\r\n                \r\n            </Modal.Title>\r\n\r\n                <Container>\r\n                    <Row>\r\n                        <div className=\"col-12 text-center\">\r\n                            <img src={Logo} style={{ width: '380px'}} alt='Loading...' />\r\n                        </div>\r\n                    </Row>\r\n                </Container>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            \r\n        <Container>\r\n            <Row>\r\n                <div className=\"col-12 text-center\">\r\n                    <p><b>Per vedere le caratteristiche del progetto ti chiediamo di registrarti alla piattaforma</b></p>\r\n                </div>\r\n            </Row>\r\n            {/* <Row>\r\n                <div className=\"col-12\">\r\n                    <p>Ti ricordiamo che la candidatura vuole essere una semplice manifestazione di interesse verso il progetto; rappresenta una richiesta di poter fissare una chiamata conoscitiva con il founder</p>\r\n                </div>\r\n            </Row> */}\r\n        </Container>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n                <Container>\r\n                        <Row>\r\n                            <div className=\"col-12 text-center\">\r\n                                 <button onClick={props.clickMe} type=\"submit\" className=\"btn btn-primary btn-lg\" style={{width:'140px'}} >Registrati</button>\r\n                            </div>\r\n                        </Row>\r\n                </Container>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      );\r\n}\r\n\r\nexport default PopupScopriProgetto","import React, {useState} from 'react';\r\nimport { Link, withRouter} from 'react-router-dom';\r\nimport Popup from './PopupScopriProgetto'\r\n\r\nconst data = {\r\n    labels: [\r\n      'Red',\r\n      'Green',\r\n      'Yellow'\r\n    ],\r\n    datasets: [{\r\n      data: [300, 50, 100],\r\n      backgroundColor: [\r\n      '#FF6384',\r\n      '#36A2EB',\r\n      '#FFCE56'\r\n      ],\r\n      hoverBackgroundColor: [\r\n      '#FF6384',\r\n      '#36A2EB',\r\n      '#FFCE56'\r\n      ]\r\n    }]\r\n  };\r\n\r\n  const options = {\r\n    legend: {\r\n       display: false\r\n    }\r\n}\r\n\r\n  /**\r\n   * \r\n   * guideline graph: https://medium.com/swlh/data-visualization-with-react-chart-js-be5e238bc302 \r\n   */\r\nexport const CallProject = ({project, history}) => {\r\n  const [modalShow, setModalShow] = useState(false);\r\n  \r\n  return (\r\n        <div>\r\n            {/* {console.log(project.Project)} */}\r\n\r\n            <div id=\"cardProjectOutside\" className=\"card mb-3 shadow\">\r\n                <div className=\"row no-gutters\">\r\n                    <div id=\"cardCallInside\" className=\"col-md-4 \">\r\n                      <p className=\"text-white text-center\"><b>Nome progetto:</b></p>\r\n                      <p id=\"cardCallFontPosition\" style={{fontSize:'32px'}} className=\"m-0 mb-3 text-white text-center\">{project.Project.Name}</p>\r\n                    </div>\r\n                    <div className=\"col-md-8\">\r\n                      <div className=\"card-body p-0\">\r\n                          <h5 className=\"card-title row no-gutters\">{ }</h5>\r\n                          <div className=\"card-text row no-gutters\">\r\n                              <div className=\"col-5 offset-1\">\r\n                              {(project.Position._id === '6074b0c6e25f3348639fb03a') ? null :   <p style={{fontSize:'20px'}}  className=\"mb-1\"><b>Figura ricercata:</b></p>}\r\n                                  {/* <p id=\"cardCallFontPosition\" className=\"m-0 display-4 mb-3\"><u><b>{project.Position.Position}</b></u></p> */}\r\n    {(project.Position._id === '6074b0c6e25f3348639fb03a') ? null : <p id=\"cardCallFontPosition\" className=\"m-0 display-4 mb-3\"><u><b>{project.Position.Position}</b></u></p>}\r\n                                  <p className=\"m-0\"><span className=\"font-weight-bold\">Settore:</span> {project.Industry}</p>\r\n                                  <p className=\"m-0\"><span className=\"font-weight-bold\">Fase:</span> {project.Project.Development_Stage.Development_Stage} </p>\r\n                                  {/* <Link to={`/project/${_id}`} className=\"card-link\">Detagli progetto</Link> */}\r\n                              </div>\r\n                              <div className=\"col-6 text-center  my-auto\">\r\n                                  <button onClick={() =>  setModalShow(true)} style={{width:'140px'}} type=\"button\" className=\"btn btn-primary btn-lg\" >Scopri</button>\r\n                                  <Popup\r\n                                        show={modalShow}\r\n                                        clickMe={() => {history.push(`/sign/${project._id}`)}}\r\n                                        onHide={() => setModalShow(false)}\r\n                                    />\r\n                              </div>\r\n                          </div>                          \r\n                      </div>\r\n                    </div>\r\n                </div>\r\n             </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(CallProject)\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getPublicCalls } from '../../../actions/project';\r\nimport Spinner from '../../../resources/differentResources/Spinner';\r\nimport Footer from '../../components/FooterPublic';\r\nimport Head from '../../components/Head';\r\nimport Navbar from '../../components/NavbarPublic';\r\nimport CallProject from './components/CallProject';\r\n\r\n\r\nconst ListCallPublic = ({getPublicCalls, project:{publicCalls, loadingPublicCalls}}) => {\r\n\r\n    useEffect(() => {\r\n        getPublicCalls()\r\n    }, [getPublicCalls])\r\n\r\n    return (\r\n        <Fragment>\r\n            {/** START - Definition of the upper part of the page */}\r\n            <Head />\r\n            <Navbar />\r\n            {/** END */}\r\n        \r\n            {/* <Container fluid id=\"containerFirstLanding\"> */}\r\n            <Container fluid id=\"dashboardBackground\">\r\n                <Row style={{paddingTop:'6%'}} id='listCallFitPage'>\r\n                    \r\n                    <div className=\"col-8 offset-2 text-center\">\r\n                        <h3 className=\"text-white display-4 \">Trova il progetto a cui unirti</h3>\r\n                    </div> \r\n                </Row>\r\n                    {loadingPublicCalls ? <Spinner /> :\r\n                        <Row>\r\n                            <div className=\"col-10 offset-1 col-md-6 offset-md-3\">\r\n                            <br />\r\n                                {\r\n                                    publicCalls.map((call, index) => ( <CallProject key={index} project={call}/>))\r\n                                }                        \r\n                            </div>\r\n                        \r\n                        </Row>\r\n                    }\r\n            </Container>\r\n            <Footer />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    project: state.project\r\n})\r\n\r\nexport default connect(mapStateToProps, {getPublicCalls})(ListCallPublic)\r\n","import React, { useState, Fragment } from 'react'\r\nimport { Button, Container, Form, Nav, Row, Tab } from 'react-bootstrap';\r\nimport { connect } from 'react-redux'\r\nimport { resetPassword } from '../../../actions/auth';\r\nimport Footer from '../../components/FooterPublic';\r\nimport Head from '../../components/Head';\r\nimport NavbarPublic from '../../components/NavbarPublic';\r\n\r\nimport {Redirect} from 'react-router-dom' \r\n\r\nexport const ResetPassword = ({resetPassword, history}) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        Email: '',\r\n        Password_1: '',\r\n        Password_2: ''\r\n    })\r\n\r\n    const {Email, Password_1, Password_2} = formData;\r\n\r\n    const [matchPassword, setMatchPassword] = useState(true)\r\n\r\n    const onChange = e => {\r\n        setFormData({...formData, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    const onSubmit = e => { \r\n        e.preventDefault();\r\n\r\n        if(Password_1 !== Password_2){ setMatchPassword(false)}\r\n        else {\r\n            setMatchPassword(true)\r\n            console.log('formData:  ', formData)\r\n            resetPassword(formData, history)\r\n        }\r\n      };\r\n\r\n    return (\r\n        <Fragment>\r\n            \r\n        {/**Definition of the upper part of the page */}\r\n        <Head />\r\n        {/* <Alert /> */}\r\n        <NavbarPublic />\r\n        {/** END */}\r\n        \r\n        {/* <Container fluid id=\"createProjectBackground\">                */}\r\n        <Container fluid id=\"rectangle-sign-page\">               \r\n            <Row>\r\n                <div className=\"col-md-4 offset-md-4 col-10 offset-1 pb-5 pb-md-0\" >   \r\n                    <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n                        <Row id=\"containerFormCreateProject\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"cardLoginRegister\" >\r\n                                    <Nav variant=\"pills\" className=\"flex-column text-center\">\r\n                                        {/* <Nav.Item>\r\n                                          <Nav.Link  className=\"navItemLoginRegister nav-link-LoginRegister\" eventKey=\"first\">Registrati</Nav.Link>\r\n                                        </Nav.Item> */}\r\n                                        <Nav.Item >\r\n                                          <Nav.Link className=\"navItemLoginRegister nav-link-LoginRegister\" eventKey=\"first\">Reset password</Nav.Link>\r\n                                        </Nav.Item>\r\n                                    </Nav>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-12\">\r\n                            <Tab.Content>\r\n                                <Tab.Pane eventKey=\"first\">\r\n                                    <div className=\"cardLoginRegister mt-4\">\r\n                                        <Form onSubmit={onSubmit}>\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label className=\"text-white\">Email</Form.Label>\r\n                                                <Form.Control type=\"email\" placeholder=\"Enter email\" name=\"Email\" value={Email} onChange={onChange} required/>\r\n                                                <br />\r\n                                                <Form.Label className=\"text-white\">Password</Form.Label>\r\n                                                    <Form.Control name=\"Password_1\" type=\"password\" value={Password_1} placeholder=\"Password\" onChange={onChange} required/>\r\n                                                    <br />\r\n                                                    <Form.Label className=\"text-white\">Conferma Password</Form.Label>\r\n                                                    <Form.Control name=\"Password_2\" type=\"password\" value={Password_2} placeholder=\"Conferma Password\" onChange={onChange} required/>\r\n                                                    {matchPassword ? (null) : (<Form.Label className=\"text-danger\">non corrisponde alla password inserita</Form.Label>) }\r\n                                            </Form.Group>\r\n                                            <Row className=\"mt-3\">\r\n                                                <div className=\"col-12 text-center \">\r\n                                                    <Button  type=\"submit\" className=\"btn border-white text-white loginRegisterButton rounded-pill\">\r\n                                                        Invia\r\n                                                    </Button>\r\n                                                </div>\r\n                                            </Row>\r\n                                            \r\n                                        </Form>\r\n                                    </div>\r\n                                </Tab.Pane>\r\n                                \r\n                            </Tab.Content>\r\n                            </div>\r\n                        </Row>\r\n                    </Tab.Container>\r\n                </div>\r\n            </Row>\r\n\r\n            \r\n        </Container>  \r\n        <Footer />          \r\n    </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    \r\n})\r\nexport default connect(mapStateToProps, {resetPassword})(ResetPassword)","import React, { useState, Fragment } from 'react'\r\nimport { Button, Container, Form, Nav, Row, Tab } from 'react-bootstrap';\r\nimport { connect } from 'react-redux'\r\nimport { resetPassword } from '../../../actions/auth';\r\nimport Footer from '../../components/FooterPublic';\r\nimport Head from '../../components/Head';\r\nimport Navbar from '../../components/NavbarPublic';\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport const ResetPasswordConferma = () => {\r\n  return (\r\n    <Fragment>\r\n             {/**Definition of the upper part of the page */}\r\n            <Head />\r\n            <Navbar />\r\n            {/** END */}\r\n\r\n            <Container fluid id=\"notFoundBackground\" className='my-auto'>\r\n                <Row className=\"pt-5\">\r\n                    <div className=\"pt-5 col-10 offset-1 col-md-8 offset-md-2 text-center text-white\">\r\n                        <h1>Password aggiornata!</h1>\r\n                        {/* <h3>Se la mail inserità è corretta allora la</h3> */}\r\n                    </div>\r\n                </Row>\r\n                <Row>\r\n                    <div className=\"col-12  text-center mt-5\">\r\n                         <Link style={{width:'340px'}} type=\"button\" className=\"btn btn-primary btn-lg\" id='buttonLanding' to={`/`} >Ritorna alla homepage</Link>\r\n                    </div>\r\n                </Row>\r\n            </Container>\r\n            <Footer />\r\n        </Fragment>\r\n  )\r\n}\r\n\r\nexport default ResetPasswordConferma\r\n","import {SET_ALERT, REMOVE_ALERT} from \"../actions/types\"\r\n\r\nconst initialState = []\r\n\r\nexport default function(state = initialState, action){\r\n\r\n    const {type, payload} = action\r\n\r\n    switch(type)\r\n    {\r\n        case SET_ALERT: \r\n            return [...state, payload]; // in this way we add the new allert in the queue\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload);\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    USER_UPDATED,\r\n    RESET_PASSWORD_SUCCESS\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null,\r\n    collaborator: null\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    const {type, payload} = action;\r\n\r\n    switch(type){\r\n        case USER_LOADED:\r\n        case USER_UPDATED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                user: payload\r\n            }\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token',payload.token)\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                isAuthenticated: true,\r\n                loading: false\r\n            }\r\n        case REGISTER_FAIL:\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT:\r\n            localStorage.removeItem('token')\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    GET_PROFILE,\r\n    PROFILE_ERROR,\r\n    CLEAR_PROFILE,\r\n    UPDATE_PROFILE,\r\n    GET_PROFILES,\r\n    GET_INDUSTRIES_PROFILE\r\n  } from '../actions/types';\r\n  \r\n  const initialState = {\r\n    profile: null,\r\n    industries: [],\r\n    profiles: [],\r\n    loading: true,\r\n    loadingIndustries: true,\r\n    error: {}\r\n  };\r\n  \r\n  export default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case GET_PROFILE:\r\n      case UPDATE_PROFILE:\r\n        return {\r\n          ...state,\r\n          profile: payload,\r\n          loading: false\r\n        };\r\n      case GET_INDUSTRIES_PROFILE:\r\n        return{\r\n          ...state,\r\n          industries: payload,\r\n          loadingIndustries: false\r\n        }\r\n      case GET_PROFILES:\r\n          return{\r\n            ...state,\r\n            profiles: payload,\r\n            loading: false\r\n          }\r\n      case PROFILE_ERROR:\r\n        return {\r\n          ...state,\r\n          error: payload,\r\n          loading: false,\r\n          profile: null\r\n        };\r\n      case CLEAR_PROFILE:\r\n        return{\r\n          ...state,\r\n          profile: null,\r\n          loading: false,\r\n          industries: []\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }","import {\r\n    GET_PROJECTS,\r\n    PROJECT_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_PROJECT,\r\n    ADD_PROJECT,\r\n    GET_PROJECT,\r\n    GET_PROJECTS_SHOWCASE,\r\n    GET_PROJECT_SHOWCASE,\r\n    GET_PROJECTS_OF_THE_USER,\r\n    GET_PROJECT_DEV_STAGES,\r\n    GET_PROJECT_INDUSTRIES,\r\n    ADD_CALL_PROJECT,\r\n    GET_CALLS,\r\n    GET_CALL_INFORMATION,\r\n    GET_USER_CALLS,\r\n    GET_PUBLIC_CALLS,\r\n    GET_OWNER_PROJECT\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n    projects:[],\r\n    call_project: null,\r\n    project: null,\r\n    loading: true,\r\n    industries: [],\r\n    dev_stages: [],\r\n    projectsOfTheUser: [],\r\n    loadingIndustries: true,\r\n    calls:[],\r\n    publicCalls: [],\r\n    loadingPublicCalls: true,\r\n    userCalls: [],\r\n    call: null,\r\n    error: {},\r\n    loadingShowcase: true,\r\n    loadingCall: true,\r\n    loadingUserCalls: true,\r\n    owner: null\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    const {type, payload} = action;\r\n\r\n    switch(type){\r\n        case GET_PROJECT:\r\n            return{\r\n                ...state,\r\n                project: payload,\r\n                loading: false\r\n            };\r\n        case GET_OWNER_PROJECT: \r\n          return {\r\n            ...state,\r\n            owner: payload,\r\n            loading:false\r\n          }\r\n        case GET_USER_CALLS:\r\n            return{\r\n                ...state,\r\n                userCalls: payload,\r\n                loading: false,\r\n                loadingUserCalls: false\r\n            };\r\n        case GET_PROJECT_SHOWCASE:\r\n            return{\r\n                ...state,\r\n                project: payload,\r\n                loading: false\r\n            };\r\n        case GET_PROJECTS_OF_THE_USER:\r\n            return{\r\n                ...state,\r\n                projectsOfTheUser: payload,\r\n                loading: false\r\n            }\r\n        case GET_PUBLIC_CALLS:\r\n            return {\r\n                ...state,\r\n                publicCalls: payload,\r\n                loadingPublicCalls: false\r\n            }\r\n        case GET_PROJECTS:\r\n            return{\r\n                ...state,\r\n                projects:payload,\r\n                loading: false\r\n            };\r\n        case GET_PROJECTS_SHOWCASE:\r\n            return{\r\n                ...state,\r\n                projects: payload,\r\n                loadingShowcase: false\r\n            };\r\n        case ADD_PROJECT:\r\n            return{\r\n                ...state,\r\n                project: payload,\r\n                loading: false\r\n            };\r\n        case GET_CALLS:\r\n            return{\r\n                ...state,\r\n                calls: payload,\r\n                loading: false\r\n            };\r\n        case GET_CALL_INFORMATION:\r\n            return{\r\n                ...state,\r\n                call: payload,\r\n                loading: false,\r\n                loadingCall: false\r\n            }\r\n        case DELETE_PROJECT:\r\n            return{\r\n                ...state,\r\n                // returns all the projects expect from the one that matches\r\n                projects: state.projects.filter(project => project._id !== payload),\r\n                loading: false\r\n            };\r\n        case ADD_CALL_PROJECT:\r\n            return{\r\n                ...state,\r\n                call_project: payload,\r\n                loading: false\r\n            }\r\n        case PROJECT_ERROR:\r\n            return{\r\n                ...state,\r\n                projects:payload,\r\n                loading: false\r\n            };\r\n        case UPDATE_LIKES:\r\n            return{\r\n                ...state,\r\n                projects: state.projects.map(project => project._id === payload.id ? {...project, likes: payload.likes} : project),\r\n                loading: false\r\n            };\r\n        case GET_PROJECT_INDUSTRIES:\r\n            return{\r\n                ...state,\r\n                industries: payload,\r\n                loadingIndustries: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    CREATE_CANDIDACY,\r\n    CANDIDACY_ERROR,\r\n    GET_CANDIDATES,\r\n    UPDATE_STATUS_CANDIDACY,\r\n    GET_CANDIDATURES_USER,\r\n    GET_CANDIDACIES_OF_THE_USER,\r\n    GET_CANDIDATES_CALL,\r\n    GET_CANDIDATURE,\r\n    UPDATE_CANDIDACY,\r\n    UPDATE_STATUS_CANDIDACY_BY_OWNER,\r\n    GET_CANDIDATES_CALL_SUMMARY\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n    candidacy: null,\r\n    candidacies: [],\r\n    userCandidacies: [],\r\n    candidatesProject: [],\r\n    candidature: null,\r\n    loading: true,\r\n    error: {},\r\n    userCandidaciesLoading: true,\r\n    candidatesProjectLoading: true,\r\n    candidacyLoading: true,\r\n    loadingUpdateStatus: true,\r\n    candidatesSummary: [],\r\n    loadCandidatesSummary: true\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    const{type, payload} = action\r\n\r\n    switch(type){\r\n        case CREATE_CANDIDACY:\r\n            return {\r\n                ...state,\r\n                candidacy: payload,\r\n                loading: false\r\n            };\r\n            case GET_CANDIDATES_CALL_SUMMARY:\r\n                return{\r\n                    ...state,\r\n                    candidatesSummary: [...state.candidatesSummary, payload],\r\n                    loadCandidatesSummary: false\r\n                };\r\n            case CANDIDACY_ERROR:\r\n                return{\r\n                    ...state,\r\n                    candidacies:null,\r\n                    loading: false\r\n                };\r\n            case GET_CANDIDACIES_OF_THE_USER:\r\n                return{\r\n                    ...state,\r\n                    loading: false,\r\n                    userCandidaciesLoading: false,\r\n                    userCandidacies: payload\r\n                };\r\n            case UPDATE_STATUS_CANDIDACY_BY_OWNER:\r\n                return {\r\n                    ...state,\r\n                    loading: false,\r\n                    candidacy: payload,\r\n                    loadingUpdateStatus: false\r\n                };\r\n            case GET_CANDIDATES_CALL:\r\n                return{\r\n                    ...state,\r\n                    candidatesProject: payload,\r\n                    candidatesProjectLoading: false,\r\n                    loading: false\r\n                };\r\n            case GET_CANDIDATES:\r\n                return{\r\n                    ...state,\r\n                    candidacies:payload,\r\n                    loading: false\r\n                };\r\n            case UPDATE_STATUS_CANDIDACY:\r\n                return{\r\n                    ...state, \r\n                    candidacy: payload,\r\n                    loading: false\r\n                };\r\n            case GET_CANDIDATURE:\r\n                return {\r\n                    ...state,\r\n                    candidature: payload,\r\n                    candidacyLoading: false\r\n                };\r\n            case UPDATE_CANDIDACY:\r\n                return {\r\n                    ...state,\r\n                    candidature: payload,\r\n                    candidacyLoading: false\r\n                }\r\n            case GET_CANDIDATURES_USER:\r\n                return{\r\n                    ...state,\r\n                    candidacies: payload,\r\n                    loading: false\r\n                };\r\n            default:\r\n                return state;\r\n    }\r\n} ","import {\r\n    GET_USER,\r\n    USER_ERROR,\r\n    SAVE_CONTACT_USER\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n    error:{},\r\n    loading: true,\r\n    user: null,\r\n    users: [],\r\n    usercontact: null\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n  const{type, payload} = action\r\n\r\n  switch(type){\r\n    case GET_USER:\r\n      return {\r\n        ...state,\r\n        users: [payload, ...state.users],\r\n        loading: false\r\n      }\r\n  case USER_ERROR:\r\n    return {\r\n      ...state,\r\n      loading: false,\r\n      users: payload\r\n    }\r\n  case SAVE_CONTACT_USER: \r\n    return {\r\n      ...state,\r\n      usercontact: payload\r\n    }\r\n  default:\r\n    return state;\r\n  }\r\n}\r\n","import {\r\n    ADMIN_ERROR,\r\n    GET_USERS_GENERAL_DATA,\r\n    GET_CALLS_GENERAL_DATA,\r\n    GET_USERS,\r\n    ADD_POSITION,\r\n    GET_POSITIONS,\r\n    ADD_INDUSTRY,\r\n    GET_INDUSTRIES,\r\n    GET_DEV_STAGES,\r\n    ADD_DEV_STAGE,\r\n    ADD_ANALYSIS_QUESTION,\r\n    GET_ANALYSIS_QUESTIONS,\r\n    GET_PENDING_PROJECTS,\r\n    UPDATE_STATE_PROJECT,\r\n    GET_CANDIDATURES_GENERAL_DATA\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n    usersGeneralData: [],\r\n    users: [],\r\n    loading: true,\r\n    positions: [],\r\n    industries: [],\r\n    dev_stages:[],\r\n    analysis_questions:[],\r\n    error: {},\r\n    pendingProjects: [],\r\n    callsGeneralData: [],\r\n    candidaturesGeneralData: [],\r\n    loadingPendingProjects: true\r\n}\r\n\r\nexport default function (state = initialState, action)\r\n{\r\n    const{type, payload} = action\r\n    \r\n    switch(type){\r\n        case GET_USERS:\r\n            return{\r\n                ...state,\r\n                users: payload,\r\n                loading: false\r\n            };\r\n        case ADMIN_ERROR:\r\n            return{\r\n                ...state,\r\n                users: null, \r\n                loading: false\r\n            };\r\n        case GET_POSITIONS:\r\n            return {\r\n                ...state,\r\n                positions: payload,\r\n                loading: false\r\n            };\r\n        case GET_INDUSTRIES:\r\n            return{\r\n                ...state,\r\n                industries: payload,\r\n                loading: false\r\n            };\r\n        case GET_PENDING_PROJECTS:\r\n            return {\r\n              ...state,\r\n              pendingProjects: payload,\r\n              loadingPendingProjects: false\r\n            };\r\n        case ADD_POSITION:\r\n            return{\r\n                ...state,\r\n                positions: [payload, ...state.positions],\r\n                loading: false\r\n            };\r\n        case ADD_INDUSTRY:\r\n            return{\r\n                ...state,\r\n                industries: [payload, ...state.industries],\r\n                loading: false\r\n            };\r\n        case GET_DEV_STAGES:\r\n            return{\r\n                ...state,\r\n                dev_stages: payload,\r\n                loading: false\r\n            };\r\n        case ADD_DEV_STAGE:\r\n            return{\r\n                ...state,\r\n                dev_stages: [payload, ...state.dev_stages],\r\n                loading: false\r\n            };\r\n        case ADD_ANALYSIS_QUESTION:\r\n            return{\r\n                ...state,\r\n                analysis_questions:[payload, ...state.analysis_questions],\r\n                loading:false\r\n            };\r\n        case GET_ANALYSIS_QUESTIONS:\r\n            return{\r\n                ...state,\r\n                analysis_questions: payload,\r\n                loading: false\r\n            }\r\n        case GET_USERS_GENERAL_DATA:\r\n            return{\r\n                ...state,\r\n                usersGeneralData: payload,\r\n                loading: false\r\n            }\r\n        case GET_CALLS_GENERAL_DATA:\r\n            return {\r\n                ...state,\r\n                callsGeneralData: payload,\r\n                loading: false\r\n            }\r\n        case GET_CANDIDATURES_GENERAL_DATA:\r\n            return {\r\n                ...state,\r\n                candidaturesGeneralData: payload,\r\n                loading: false\r\n            }\r\n        case UPDATE_STATE_PROJECT:\r\n          return {\r\n            ...state,\r\n            loading: false\r\n          }\r\n        default: \r\n            return state;\r\n    };\r\n}","import {\r\n    ADMIN_LOGIN_FAIL,\r\n    ADMIN_LOGIN_SUCCESS,\r\n    LOGOUT_ADMIN,\r\n    ADMIN_LOADED,\r\n    ADMIN_AUTH_ERROR\r\n} from '../actions/types'\r\n\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    collaborator: null\r\n} \r\n\r\nexport default function(state = initialState, action)\r\n{\r\n    const{type, payload} = action;\r\n\r\n    switch(type)\r\n    {\r\n        case ADMIN_LOGIN_SUCCESS:\r\n            localStorage.setItem('token', payload.token)\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                isAuthenticated: true,\r\n                loading: false\r\n            }\r\n        case ADMIN_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                collaborator: payload\r\n            }\r\n        case ADMIN_LOGIN_FAIL:\r\n        case ADMIN_AUTH_ERROR:\r\n        case LOGOUT_ADMIN:\r\n            localStorage.removeItem('token')\r\n\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    GET_POSITIONS_USER,\r\n    COMPLEMENTARYINFO_ERROR,\r\n    GET_INDUSTRIES_USER,\r\n    GET_DEV_STAGES,\r\n    GET_ANALYSIS_QUESTIONS_PROJECT\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n    positions: [],\r\n    industries: [],\r\n    dev_stages:[],\r\n    loading: true,\r\n    analysis_questions: [],\r\n    error: {}\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    const{type, payload} = action;\r\n\r\n    switch(type){\r\n        case GET_POSITIONS_USER:\r\n            return{\r\n                ...state,\r\n                positions: payload,\r\n                loading: false\r\n            };\r\n        case GET_INDUSTRIES_USER:\r\n            return{\r\n                ...state,\r\n                industries: payload,\r\n                loading:false\r\n            };\r\n        case GET_DEV_STAGES:\r\n            return{\r\n                ...state,\r\n                dev_stages: payload,\r\n                loading:false\r\n            };\r\n        case COMPLEMENTARYINFO_ERROR:\r\n            return{\r\n                ...state,\r\n                error: payload,\r\n                loading: false,\r\n                positions: null,\r\n                industries: null\r\n            };\r\n        case GET_ANALYSIS_QUESTIONS_PROJECT:\r\n            return{\r\n                ...state,\r\n                analysis_questions: payload,\r\n                loading:false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import{\r\n    GET_PROJECT_INDUSTRY,\r\n    PROJECT_INFO_ERROR\r\n} from '../actions/types'\r\n\r\n\r\nconst initialState = {\r\n    industry: null,\r\n    loading: true,\r\n    error:{}\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    const{type, payload} = action;\r\n\r\n    switch(type){\r\n        case GET_PROJECT_INDUSTRY:\r\n            return{\r\n                ...state,\r\n                industry: payload,\r\n                loading: false\r\n            };\r\n        case PROJECT_INFO_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport alert from './alert'\r\nimport auth from './auth'\r\nimport profile from './profile'\r\nimport project from './project'\r\nimport candidacy from './candidacy'\r\nimport user from './user'\r\nimport admin from './admin'\r\nimport authCollaborator from './authCollaborator'\r\nimport complementaryInfo from './complementaryInfo'\r\nimport projectInformation from './projectInformation'\r\n\r\nexport default combineReducers({\r\n  alert,\r\n  auth,\r\n  profile,\r\n  project,\r\n  candidacy,\r\n  user,\r\n  admin,\r\n  authCollaborator,\r\n  complementaryInfo,\r\n  projectInformation\r\n});","import axios from 'axios'\r\n\r\nconst setAuthToken = token => {\r\n    if(token){\r\n        axios.defaults.headers.common['x-auth-token'] = token\r\n    }else{\r\n        delete axios.defaults.headers.common['x-auth-token']\r\n    }\r\n}\r\n\r\nexport default setAuthToken;","import {createStore, applyMiddleware} from 'redux'\r\nimport { composeWithDevTools} from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\nimport setAuthToken from './utils/setAuthToken';\r\n\r\n\r\nconst initialState = {}\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\n// set up a store subscription listener\r\n// to store the users token in localStorage\r\n\r\n// initialize current state from redux store for subscription comparison\r\n// preventing undefined error\r\nlet currentState = store.getState();\r\n\r\nstore.subscribe(() => {\r\n  // keep track of the previous and current state to compare changes\r\n  let previousState = currentState;\r\n  currentState = store.getState();\r\n\r\n  //USER\r\n  // if the token changes set the value in localStorage and axios headers\r\n  if (previousState.auth.token !== currentState.auth.token) {\r\n    const token = currentState.auth.token;\r\n    setAuthToken(token);\r\n  }\r\n\r\n  //ADMIN\r\n  // if the token changes set the value in localStorage and axios headers\r\n  if (previousState.authCollaborator.token !== currentState.authCollaborator.token) {\r\n    const token = currentState.authCollaborator.token;\r\n    setAuthToken(token);\r\n  }\r\n});\r\n\r\nexport default store","import axios from 'axios'\r\nimport {setAlert} from './alert'\r\n\r\nimport {\r\n    ADMIN_LOGIN_FAIL,\r\n    ADMIN_LOGIN_SUCCESS,\r\n    LOGOUT_ADMIN,\r\n    ADMIN_LOADED,\r\n    ADMIN_AUTH_ERROR\r\n} from './types'\r\n\r\n\r\n// Load Admin\r\nexport const loadCollaborator = () => async dispatch => {\r\n    try{\r\n        console.log(\"collaborator 1 - load\")\r\n\r\n        const res = await axios.get('/api/admin/auth')\r\n\r\n        console.log(\"collaborator 2\")\r\n\r\n        dispatch({\r\n            type: ADMIN_LOADED,\r\n            payload: res.data\r\n        })\r\n    }catch (err){\r\n        dispatch({\r\n            type: ADMIN_AUTH_ERROR\r\n        })\r\n    }\r\n}\r\n\r\n\r\n//Login Admin\r\nexport const loginAdmin = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type':'application/json'\r\n        }\r\n    }\r\n\r\n    console.log(\"GOOOOOOOD\")\r\n    const body = JSON.stringify({email, password})\r\n\r\n    try{\r\n\r\n        const res = await axios.post('/api/admin/auth', body, config)\r\n        \r\n        console.log(\"MY toooooooken \" + res.data)\r\n        //console.log(res.data)\r\n\r\n        dispatch({\r\n            type: ADMIN_LOGIN_SUCCESS,\r\n            payload: res.data\r\n        })\r\n        \r\n        console.log(\"tokeeeeeeeeeen\")\r\n       // console.log(res.data)\r\n        console.log(\"control\")\r\n\r\n        dispatch(loadCollaborator())\r\n\r\n    }catch(err){\r\n        \r\n        const errors = err.response.data.errors;\r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n\r\n        dispatch({\r\n            type: ADMIN_LOGIN_FAIL\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n//Register \r\n export const registerAdmin = ({name, email, password}) => async dispatch => {\r\n     const config = {\r\n         headers: {\r\n             'Content-Type': 'application/json'\r\n         }\r\n     }\r\n     const body = JSON.stringify({name, email, password})\r\n\r\n     try { \r\n         const res = await axios.post('/api/admin/register', body, config)\r\n    \r\n        //  dispatch({\r\n        //      type: REGISTER_SUCCESS,\r\n        //      payload: res.data\r\n        //  })\r\n\r\n        //  dispatch(loadCollaborator())\r\n         \r\n     }catch(err) {\r\n\r\n         const errors = err.response.data.errors;\r\n         if(errors){\r\n             errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n         }\r\n\r\n         dispatch({\r\n            // type: REGISTER_FAIL\r\n         })\r\n     }\r\n }\r\n\r\n\r\n\r\n//Logout / Clear Profile\r\nexport const logout = () => dispatch => \r\n{\r\n    dispatch({type:LOGOUT_ADMIN})\r\n}","/**\r\n * Here is the component that is definining the layouout for the\r\n * entire part of the Admin area\r\n */\r\nimport {Helmet} from \"react-helmet\" //It includes the code in the <head> tag of the HTML page\r\nimport React, { Fragment } from 'react'\r\nimport MetaTags from \"react-meta-tags\"\r\n\r\nexport const LayoutAdmin = () => {\r\n    return (\r\n        <Fragment>\r\n            <Helmet>\r\n                <MetaTags>\r\n                    \r\n                    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n                    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n                    <meta name=\"description\" content=\"\" />\r\n                    <meta name=\"author\" content=\"\" />\r\n                 </MetaTags>\r\n\r\n                    <title>Admin area</title>\r\n\r\n                    {/* <!-- Custom fonts for this template--> */}\r\n                    <link href=\"vendor/fontawesome-free/css/all.min.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n                    <link href=\"https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i\" rel=\"stylesheet\" />\r\n\r\n                    {/* <!-- Custom styles for this template--> */}\r\n                    <link href=\"https://startbootstrap.github.io/startbootstrap-sb-admin-2/css/sb-admin-2.min.css\" rel=\"stylesheet\" />\r\n                    \r\n               \r\n            </Helmet>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default LayoutAdmin;","/**\r\n * Layout of the body for the ADMIN area\r\n */\r\n\r\nimport React, { Fragment } from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport {logout} from '../../actions/auth'\r\nimport {connect} from 'react-redux'\r\nimport { withRouter } from \"react-router\";\r\n\r\n function LayoutAdminBody({ children, logout }){\r\n     return (\r\n         <Fragment>\r\n            <div id=\"wrapper\">\r\n                {/* <!-- Sidebar -->*/}\r\n                <ul className=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\" id=\"accordionSidebar\">\r\n\r\n                    {/* <!-- Sidebar - Brand -->*/}\r\n                    <a className=\"sidebar-brand d-flex align-items-center justify-content-center\" href=\"#\">\r\n                        <div className=\"sidebar-brand-icon rotate-n-15\">\r\n                        <i className=\"fas fa-laugh-wink\"></i>\r\n                        </div>\r\n                        <div className=\"sidebar-brand-text mx-3\">Nucleus Admin</div>\r\n                    </a>\r\n\r\n                    {/* <!-- Divider -->*/}\r\n                    <hr className=\"sidebar-divider my-0\" />\r\n\r\n                    {/* <!-- Nav Item - Dashboard -->*/}\r\n                    <li className=\"nav-item active\">\r\n                        <Link className=\"nav-link\" to=\"/admin/dashboard/\">\r\n                        <i className=\"fas fa-fw fa-tachometer-alt\"></i>\r\n                        <span>Dashboard</span></Link>\r\n                    </li>\r\n\r\n                    {/* <!-- Divider -->*/}\r\n                    <hr className=\"sidebar-divider\" />\r\n\r\n                    {/* <!-- Heading -->*/}\r\n                    <div className=\"sidebar-heading\">\r\n                        Interface\r\n                    </div>\r\n\r\n                    {/* <!-- Nav Item - Pages Collapse Menu -->*/}\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/admin/project/acceptance\" className=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"true\" aria-controls=\"collapseTwo\">\r\n                            <i className=\"fas fa-fw fa-cog\"></i>\r\n                            <span>Accettare / Rifiutare candidature</span>\r\n                        </Link>\r\n                        <div id=\"collapseTwo\" className=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordionSidebar\">\r\n                        <div className=\"bg-white py-2 collapse-inner rounded\">\r\n                            <h6 className=\"collapse-header\">Custom Components:</h6>\r\n                            <a className=\"collapse-item\" href=\"buttons.html\">Buttons</a>\r\n                            <a className=\"collapse-item\" href=\"cards.html\">Cards</a>\r\n                        </div>\r\n                        </div>\r\n                    </li>\r\n\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/admin/download-documents\" className=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"true\" aria-controls=\"collapseTwo\">\r\n                            <i className=\"fas fa-fw fa-cog\"></i>\r\n                            <span>Scarica documenti</span>\r\n                        </Link>\r\n                        <div id=\"collapseTwo\" className=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordionSidebar\">\r\n                        <div className=\"bg-white py-2 collapse-inner rounded\">\r\n                            <h6 className=\"collapse-header\">Custom Components:</h6>\r\n                            <a className=\"collapse-item\" href=\"buttons.html\">Buttons</a>\r\n                            <a className=\"collapse-item\" href=\"cards.html\">Cards</a>\r\n                        </div>\r\n                        </div>\r\n                    </li>\r\n\r\n                    {/* <!-- Nav Item - Pages Collapse Menu -->*/}\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/admin/manage/position\" className=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"true\" aria-controls=\"collapseTwo\">\r\n                            <i className=\"fas fa-fw fa-cog\"></i>\r\n                            <span>Manage Position</span>\r\n                        </Link>\r\n                        <div id=\"collapseTwo\" className=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordionSidebar\">\r\n                        <div className=\"bg-white py-2 collapse-inner rounded\">\r\n                            <h6 className=\"collapse-header\">Custom Components:</h6>\r\n                            <a className=\"collapse-item\" href=\"buttons.html\">Buttons</a>\r\n                            <a className=\"collapse-item\" href=\"cards.html\">Cards</a>\r\n                        </div>\r\n                        </div>\r\n                    </li>\r\n\r\n                    {/* <!-- Nav Item - Utilities Collapse Menu -->*/}\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/admin/manage/industry\" className=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapseUtilities\" aria-expanded=\"true\" aria-controls=\"collapseUtilities\">\r\n                        <i className=\"fas fa-fw fa-wrench\"></i>\r\n                        <span>Manage Industry</span>\r\n                        </Link>\r\n                        <div id=\"collapseUtilities\" className=\"collapse\" aria-labelledby=\"headingUtilities\" data-parent=\"#accordionSidebar\">\r\n                        <div className=\"bg-white py-2 collapse-inner rounded\">\r\n                            <h6 className=\"collapse-header\">Custom Utilities:</h6>\r\n                            <a className=\"collapse-item\" href=\"utilities-color.html\">Colors</a>\r\n                            <a className=\"collapse-item\" href=\"utilities-border.html\">Borders</a>\r\n                            <a className=\"collapse-item\" href=\"utilities-animation.html\">Animations</a>\r\n                            <a className=\"collapse-item\" href=\"utilities-other.html\">Other</a>\r\n                        </div>\r\n                        </div>\r\n                    </li>\r\n\r\n                    {/* <!-- Nav Item - Utilities Collapse Menu -->*/}\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/admin/manage/development-stage\" className=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapseUtilities\" aria-expanded=\"true\" aria-controls=\"collapseUtilities\">\r\n                        <i className=\"fas fa-fw fa-wrench\"></i>\r\n                        <span>Manage Development Stage</span>\r\n                        </Link>\r\n                        <div id=\"collapseUtilities\" className=\"collapse\" aria-labelledby=\"headingUtilities\" data-parent=\"#accordionSidebar\">\r\n                        <div className=\"bg-white py-2 collapse-inner rounded\">\r\n                            <h6 className=\"collapse-header\">Custom Utilities:</h6>\r\n                            <a className=\"collapse-item\" href=\"utilities-color.html\">Colors</a>\r\n                            <a className=\"collapse-item\" href=\"utilities-border.html\">Borders</a>\r\n                            <a className=\"collapse-item\" href=\"utilities-animation.html\">Animations</a>\r\n                            <a className=\"collapse-item\" href=\"utilities-other.html\">Other</a>\r\n                        </div>\r\n                        </div>\r\n                    </li>\r\n\r\n                    {/* <!-- Nav Item - Utilities Collapse Menu -->*/}\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/admin/manage/analysis-question\" className=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapseUtilities\" aria-expanded=\"true\" aria-controls=\"collapseUtilities\">\r\n                        <i className=\"fas fa-fw fa-wrench\"></i>\r\n                        <span>Domande Progetto</span>\r\n                        </Link>\r\n                        <div id=\"collapseUtilities\" className=\"collapse\" aria-labelledby=\"headingUtilities\" data-parent=\"#accordionSidebar\">\r\n                        <div className=\"bg-white py-2 collapse-inner rounded\">\r\n                            <h6 className=\"collapse-header\">Custom Utilities:</h6>\r\n                            <a className=\"collapse-item\" href=\"utilities-color.html\">Colors</a>\r\n                            <a className=\"collapse-item\" href=\"utilities-border.html\">Borders</a>\r\n                            <a className=\"collapse-item\" href=\"utilities-animation.html\">Animations</a>\r\n                            <a className=\"collapse-item\" href=\"utilities-other.html\">Other</a>\r\n                        </div>\r\n                        </div>\r\n                    </li>\r\n\r\n                    <li className=\"nav-item\">\r\n                  <a  className=\"nav-link\" onClick={logout} href='#!'>\r\n                  <i className='fas fa-sign-out-alt' />{' '}\r\n                 <button onClick={logout} type=\"button\" className='hide-sm'>Logout Admin</button>\r\n              </a>\r\n            </li>\r\n\r\n                    {/* <!-- Divider -->*/}\r\n                    <hr className=\"sidebar-divider\" />\r\n\r\n                    {/* <!-- Heading -->*/}\r\n                    <div className=\"sidebar-heading\">\r\n                        Addons\r\n                    </div>\r\n\r\n                    {/* <!-- Nav Item - Pages Collapse Menu -->*/}\r\n                    {/* <li className=\"nav-item\">\r\n                        <a className=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapsePages\" aria-expanded=\"true\" aria-controls=\"collapsePages\">\r\n                        <i className=\"fas fa-fw fa-folder\"></i>\r\n                        <span>Pages</span>\r\n                        </a>\r\n                        <div id=\"collapsePages\" className=\"collapse\" aria-labelledby=\"headingPages\" data-parent=\"#accordionSidebar\">\r\n                        <div className=\"bg-white py-2 collapse-inner rounded\">\r\n                            <h6 className=\"collapse-header\">Login Screens:</h6>\r\n                            <a className=\"collapse-item\" href=\"login.html\">Login</a>\r\n                            <a className=\"collapse-item\" href=\"register.html\">Register</a>\r\n                            <a className=\"collapse-item\" href=\"forgot-password.html\">Forgot Password</a>\r\n                            <div className=\"collapse-divider\"></div>\r\n                            <h6 className=\"collapse-header\">Other Pages:</h6>\r\n                            <a className=\"collapse-item\" href=\"404.html\">404 Page</a>\r\n                            <a className=\"collapse-item\" href=\"blank.html\">Blank Page</a>\r\n                        </div>\r\n                        </div>\r\n                    </li> */}\r\n\r\n                    {/* <!-- Nav Item - Charts -->*/}\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\">\r\n                            \r\n                        <i className=\"fas fa-fw fa-chart-area\"></i>\r\n                        <span>Charts</span>\r\n                        \r\n                        </a>\r\n                    </li>\r\n\r\n                    {/* <!-- Nav Item - Tables -->*/}\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\">\r\n                        <i className=\"fas fa-fw fa-table\"></i>\r\n                        <span>Tables</span></a>\r\n                    </li>\r\n\r\n                    {/* <!-- Divider -->*/}\r\n                    <hr className=\"sidebar-divider d-none d-md-block\" />\r\n\r\n                    {/* <!-- Sidebar Toggler (Sidebar) -->*/}\r\n                    <div className=\"text-center d-none d-md-inline\">\r\n                        <button className=\"rounded-circle border-0\" id=\"sidebarToggle\"></button>\r\n                    </div>\r\n\r\n                    </ul>\r\n                {/* <!-- End of Sidebar -->*/}\r\n\r\n                {/* <!-- Content Wrapper -->*/}\r\n                <div id=\"content-wrapper\" className=\"d-flex flex-column\">\r\n                    \r\n                    {/* <!-- Main Content -->*/}\r\n                    <div id=\"content\">\r\n                         {/* <!-- Topbar -->*/}\r\n                        <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\r\n\r\n                                {/* <!-- Sidebar Toggle (Topbar) -->*/}\r\n                                <button id=\"sidebarToggleTop\" className=\"btn btn-link d-md-none rounded-circle mr-3\">\r\n                                    <i className=\"fa fa-bars\"></i>\r\n                                </button>\r\n\r\n                                {/* <!-- Topbar Search -->*/}\r\n                                <form className=\"d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search\">\r\n                                    <div className=\"input-group\">\r\n                                    <input type=\"text\" className=\"form-control bg-light border-0 small\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\" />\r\n                                    <div className=\"input-group-append\">\r\n                                        <button className=\"btn btn-primary\" type=\"button\">\r\n                                        <i className=\"fas fa-search fa-sm\"></i>\r\n                                        </button>\r\n                                    </div>\r\n                                    </div>\r\n                                </form>\r\n\r\n                                {/* <!-- Topbar Navbar -->*/}\r\n                                <ul className=\"navbar-nav ml-auto\">\r\n\r\n                            {/* <!-- Nav Item - Search Dropdown (Visible Only XS) -->*/}\r\n                            <li className=\"nav-item dropdown no-arrow d-sm-none\">\r\n                            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"searchDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                <i className=\"fas fa-search fa-fw\"></i>\r\n                            </a>\r\n                            {/* <!-- Dropdown - Messages -->*/}\r\n                            <div className=\"dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in\" aria-labelledby=\"searchDropdown\">\r\n                                <form className=\"form-inline mr-auto w-100 navbar-search\">\r\n                                <div className=\"input-group\">\r\n                                    <input type=\"text\" className=\"form-control bg-light border-0 small\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\" />\r\n                                    <div className=\"input-group-append\">\r\n                                    <button className=\"btn btn-primary\" type=\"button\">\r\n                                        <i className=\"fas fa-search fa-sm\"></i>\r\n                                    </button>\r\n                                    </div>\r\n                                </div>\r\n                                </form>\r\n                            </div>\r\n                            </li>\r\n\r\n                            {/* <!-- Nav Item - Alerts -->*/}\r\n                            <li className=\"nav-item dropdown no-arrow mx-1\">\r\n                            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"alertsDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                <i className=\"fas fa-bell fa-fw\"></i>\r\n                                {/* <!-- Counter - Alerts -->*/}\r\n                                <span className=\"badge badge-danger badge-counter\">3+</span>\r\n                            </a>\r\n                            {/* <!-- Dropdown - Alerts -->*/}\r\n                            <div className=\"dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in\" aria-labelledby=\"alertsDropdown\">\r\n                                <h6 className=\"dropdown-header\">\r\n                                Alerts Center\r\n                                </h6>\r\n                                <a className=\"dropdown-item d-flex align-items-center\" href=\"#\">\r\n                                <div className=\"mr-3\">\r\n                                    <div className=\"icon-circle bg-primary\">\r\n                                    <i className=\"fas fa-file-alt text-white\"></i>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div className=\"small text-gray-500\">December 12, 2019</div>\r\n                                    <span className=\"font-weight-bold\">A new monthly report is ready to download!</span>\r\n                                </div>\r\n                                </a>\r\n                                <a className=\"dropdown-item d-flex align-items-center\" href=\"#\">\r\n                                <div className=\"mr-3\">\r\n                                    <div className=\"icon-circle bg-success\">\r\n                                    <i className=\"fas fa-donate text-white\"></i>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div className=\"small text-gray-500\">December 7, 2019</div>\r\n                                    $290.29 has been deposited into your account!\r\n                                </div>\r\n                                </a>\r\n                                <a className=\"dropdown-item d-flex align-items-center\" href=\"#\">\r\n                                <div className=\"mr-3\">\r\n                                    <div className=\"icon-circle bg-warning\">\r\n                                    <i className=\"fas fa-exclamation-triangle text-white\"></i>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div className=\"small text-gray-500\">December 2, 2019</div>\r\n                                    Spending Alert: We've noticed unusually high spending for your account.\r\n                                </div>\r\n                                </a>\r\n                                <a className=\"dropdown-item text-center small text-gray-500\" href=\"#\">Show All Alerts</a>\r\n                            </div>\r\n                            </li>\r\n\r\n                            {/* <!-- Nav Item - Messages -->*/}\r\n                            <li className=\"nav-item dropdown no-arrow mx-1\">\r\n                            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"messagesDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                <i className=\"fas fa-envelope fa-fw\"></i>\r\n                                {/* <!-- Counter - Messages -->*/}\r\n                                <span className=\"badge badge-danger badge-counter\">7</span>\r\n                            </a>\r\n                            {/* <!-- Dropdown - Messages -->*/}\r\n                            <div className=\"dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in\" aria-labelledby=\"messagesDropdown\">\r\n                                <h6 className=\"dropdown-header\">\r\n                                Message Center\r\n                                </h6>\r\n                                <a className=\"dropdown-item d-flex align-items-center\" href=\"#\">\r\n                                <div className=\"dropdown-list-image mr-3\">\r\n                                    <img className=\"rounded-circle\" src=\"https://source.unsplash.com/fn_BT9fwg_E/60x60\" alt=\"\" />\r\n                                    <div className=\"status-indicator bg-success\"></div>\r\n                                </div>\r\n                                <div className=\"font-weight-bold\">\r\n                                    <div className=\"text-truncate\">Hi there! I am wondering if you can help me with a problem I've been having.</div>\r\n                                    <div className=\"small text-gray-500\">Emily Fowler · 58m</div>\r\n                                </div>\r\n                                </a>\r\n                                <a className=\"dropdown-item d-flex align-items-center\" href=\"#\">\r\n                                <div className=\"dropdown-list-image mr-3\">\r\n                                    <img className=\"rounded-circle\" src=\"https://source.unsplash.com/AU4VPcFN4LE/60x60\" alt=\"\" />\r\n                                    <div className=\"status-indicator\"></div>\r\n                                </div>\r\n                                <div>\r\n                                    <div className=\"text-truncate\">I have the photos that you ordered last month, how would you like them sent to you?</div>\r\n                                    <div className=\"small text-gray-500\">Jae Chun · 1d</div>\r\n                                </div>\r\n                                </a>\r\n                                <a className=\"dropdown-item d-flex align-items-center\" href=\"#\">\r\n                                <div className=\"dropdown-list-image mr-3\">\r\n                                    <img className=\"rounded-circle\" src=\"https://source.unsplash.com/CS2uCrpNzJY/60x60\" alt=\"\" />\r\n                                    <div className=\"status-indicator bg-warning\"></div>\r\n                                </div>\r\n                                <div>\r\n                                    <div className=\"text-truncate\">Last month's report looks great, I am very happy with the progress so far, keep up the good work!</div>\r\n                                    <div className=\"small text-gray-500\">Morgan Alvarez · 2d</div>\r\n                                </div>\r\n                                </a>\r\n                                <a className=\"dropdown-item d-flex align-items-center\" href=\"#\">\r\n                                <div className=\"dropdown-list-image mr-3\">\r\n                                    <img className=\"rounded-circle\" src=\"https://source.unsplash.com/Mv9hjnEUHR4/60x60\" alt=\"\" />\r\n                                    <div className=\"status-indicator bg-success\"></div>\r\n                                </div>\r\n                                <div>\r\n                                    <div className=\"text-truncate\">Am I a good boy? The reason I ask is because someone told me that people say this to all dogs, even if they aren't good...</div>\r\n                                    <div className=\"small text-gray-500\">Chicken the Dog · 2w</div>\r\n                                </div>\r\n                                </a>\r\n                                <a className=\"dropdown-item text-center small text-gray-500\" href=\"#\">Read More Messages</a>\r\n                            </div>\r\n                            </li>\r\n\r\n                            <div className=\"topbar-divider d-none d-sm-block\"></div>\r\n\r\n                            {/* <!-- Nav Item - User Information -->*/}\r\n                            <li className=\"nav-item dropdown no-arrow\">\r\n                            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"userDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                \r\n                                <span className=\"mr-2 d-none d-lg-inline text-gray-600 small\">Name</span>\r\n                                \r\n                                <img className=\"img-profile rounded-circle\" src=\"https://source.unsplash.com/QAB-WJcbgJk/60x60\" />\r\n                            </a>\r\n                            {/* <!-- Dropdown - User Information -->*/}\r\n                            <div className=\"dropdown-menu dropdown-menu-right shadow animated--grow-in\" aria-labelledby=\"userDropdown\">\r\n                                <a className=\"dropdown-item\" href=\"#\">\r\n                                <i className=\"fas fa-user fa-sm fa-fw mr-2 text-gray-400\"></i>\r\n                                Profile\r\n                                </a>\r\n                                <a className=\"dropdown-item\" href=\"#\">\r\n                                <i className=\"fas fa-cogs fa-sm fa-fw mr-2 text-gray-400\"></i>\r\n                                Settings\r\n                                </a>\r\n                                <a className=\"dropdown-item\" href=\"#\">\r\n                                <i className=\"fas fa-list fa-sm fa-fw mr-2 text-gray-400\"></i>\r\n                                Activity Log\r\n                                </a>\r\n                                <div className=\"dropdown-divider\"></div>\r\n                                <a className=\"dropdown-item\" href=\"#\" data-toggle=\"modal\" data-target=\"#logoutModal\">\r\n                                <i className=\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\"></i>\r\n                                Logout\r\n                                </a>\r\n                            </div>\r\n                            </li>\r\n\r\n                        </ul>\r\n\r\n                        </nav>\r\n                        {/* <!-- End of Topbar -->*/}    \r\n                    \r\n                        <div className=\"container-fluid\">\r\n{/************************************************************************* */}\r\n                            {/* HERE GOES THE CONTENT OF OTHER PAGES */}\r\n                            {children}\r\n{/************************************************************************* */}\r\n                        </div>\r\n\r\n                    </div>\r\n                    {/* <!-- End of Main Content -->*/}\r\n\r\n                    {/* <!-- Footer -->*/}\r\n                    <footer className=\"sticky-footer bg-white\">\r\n                        <div className=\"container my-auto\">\r\n                        <div className=\"copyright text-center my-auto\">\r\n                            <span>Copyright &copy; Your Website 2020</span>\r\n                        </div>\r\n                        </div>\r\n                    </footer>\r\n                    {/* <!-- End of Footer -->*/}\r\n                </div>\r\n                {/* <!-- End of Content Wrapper -->*/}   \r\n\r\n             </div>\r\n         </Fragment>\r\n     )\r\n }\r\n \r\n\r\n const mapStateToProps = state => ({\r\n    auth: state.auth\r\n  });\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    { logout }\r\n  )(LayoutAdminBody);","import React, { Fragment, useEffect, useState } from 'react'\r\nimport LayoutAdmin from '../../components/LayoutAdmin'\r\nimport {getUsers} from '../../../actions/admin'\r\nimport {getProjects} from '../../../actions/project'\r\nimport {Link, Redirect} from 'react-router-dom' \r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport TableRow from './components/TableRow'\r\nimport Spinner from '../../../resources/differentResources/Spinner'\r\nimport LayoutBodyAdmin from \"../../components/LayoutAdminBody\"\r\nimport LayoutHeaderAdmin from \"../../components/LayoutAdmin\"\r\n\r\n// Export PDF button\r\n// import {CSVLink, CSVDownload} from 'react-csv'\r\n// import Project from '../../../components/project/Project'\r\n\r\n/**\r\n * FUTURE:\r\n * This page has to be converted in a component with its own state!\r\n */\r\n\r\nconst myCSV = [['ID', 'Nome', 'Cognome', 'Email', 'Data']];\r\nconst projectsCSV =[['ID', 'Titolo', 'Descrizione', 'Sede', 'Stadio Sviluppo', 'Data Inserimento']]\r\n\r\nexport const DashboardAdmin = ({ getUsers, getProjects, project:{projects}, admin:{users, loading}, auth:{collaborator}}) => \r\n{\r\n    //Declaration of the state component\r\n    const [usersList, setUsersList] = useState([]);\r\n    const [projectsList, setProjectsList] = useState([]);\r\n\r\n    useEffect(() => \r\n    {        \r\n        getProjects();\r\n        getUsers();\r\n        \r\n    }, [getUsers, getProjects])\r\n\r\n    return  loading && collaborator == null ? (<Spinner />) : \r\n    (  \r\n        <Fragment>\r\n            <LayoutHeaderAdmin />\r\n            <LayoutBodyAdmin> \r\n\r\n                  {/* <!-- Page Heading -->*/}\r\n                  <div className=\"d-sm-flex align-items-center justify-content-between mb-4\">\r\n                        <h1 className=\"h3 mb-0 text-gray-800\">Dashboard</h1>\r\n                    </div>\r\n\r\n                    {/* <!-- Content Row -->*/}\r\n                    <div className=\"row\">\r\n\r\n                        {/* <!-- Earnings (Monthly) Card Example -->*/}\r\n                        <div className=\"col-xl-3 col-md-6 mb-4\">\r\n                        <div className=\"card border-left-primary shadow h-100 py-2\">\r\n                            <div className=\"card-body\">\r\n                            <div className=\"row no-gutters align-items-center\">\r\n                                <div className=\"col mr-2\">\r\n                                <div className=\"text-xs font-weight-bold text-primary text-uppercase mb-1\">Registered users</div>\r\n                                <div className=\"h5 mb-0 font-weight-bold text-gray-800\">\r\n                                    \r\n                                {\r\n                                    //Here are the users\r\n\r\n                                    // users.length\r\n                                }\r\n\r\n                                </div>\r\n                                </div>\r\n                                <div className=\"col-auto\">\r\n                                <i className=\"fas fa-calendar fa-2x text-gray-300\"></i>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n\r\n                        {/* <!-- Earnings (Monthly) Card Example -->*/}\r\n                        <div className=\"col-xl-3 col-md-6 mb-4\">\r\n                        <div className=\"card border-left-success shadow h-100 py-2\">\r\n                            <div className=\"card-body\">\r\n                            <div className=\"row no-gutters align-items-center\">\r\n                                <div className=\"col mr-2\">\r\n                                <div className=\"text-xs font-weight-bold text-success text-uppercase mb-1\">Registered Projects</div>\r\n                                {/* <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{projects.length}</div> */}\r\n                                </div>\r\n                                <div className=\"col-auto\">\r\n                                <i className=\"fas fa-dollar-sign fa-2x text-gray-300\"></i>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n\r\n                        {/* <!-- Earnings (Monthly) Card Example -->*/}\r\n                        {/* <div className=\"col-xl-3 col-md-6 mb-4\">\r\n                        <div className=\"card border-left-info shadow h-100 py-2\">\r\n                            <div className=\"card-body\">\r\n                            <div className=\"row no-gutters align-items-center\">\r\n                                <div className=\"col mr-2\">\r\n                                <div className=\"text-xs font-weight-bold text-info text-uppercase mb-1\">???</div>\r\n                                <div className=\"row no-gutters align-items-center\">\r\n                                    <div className=\"col-auto\">\r\n                                    <div className=\"h5 mb-0 mr-3 font-weight-bold text-gray-800\">??</div>\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                    <div className=\"progress progress-sm mr-2\">\r\n                                        <div className=\"progress-bar bg-info\" role=\"progressbar\" style={{width: \"50%\"}} aria-valuenow=\"50\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n                                <div className=\"col-auto\">\r\n                                <i className=\"fas fa-clipboard-list fa-2x text-gray-300\"></i>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        </div> */}\r\n\r\n                        {/* <!-- Pending Requests Card Example -->*/}\r\n                        {/* <div className=\"col-xl-3 col-md-6 mb-4\">\r\n                        <div className=\"card border-left-warning shadow h-100 py-2\">\r\n                            <div className=\"card-body\">\r\n                            <div className=\"row no-gutters align-items-center\">\r\n                                <div className=\"col mr-2\">\r\n                                <div className=\"text-xs font-weight-bold text-warning text-uppercase mb-1\">??</div>\r\n                                <div className=\"h5 mb-0 font-weight-bold text-gray-800\">??</div>\r\n                                </div>\r\n                                <div className=\"col-auto\">\r\n                                <i className=\"fas fa-comments fa-2x text-gray-300\"></i>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        </div> */}\r\n                    </div>\r\n\r\n                    {/* <!-- Content Row -->*/}\r\n\r\n                    <div className=\"row\">                            \r\n                            <div className=\"col-12\">                                \r\n                                <div className=\"card shadow mb-4\">\r\n                                    <div className=\"card-header py-3\">\r\n                                        <h6 className=\"m-0 font-weight-bold text-primary\">User registered</h6>\r\n                                        <button className=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\" \r\n                                                // onClick={() => {\r\n                                                //                     users.map( user => myCSV.push([user._id, user.Name, user.Surname, user.Email, user.Date])) \r\n                                                //                     setUsersList(myCSV)  \r\n                                                //     }\r\n                                                // }\r\n                                            >\r\n                                            <i className=\"fas fa-download fa-sm text-white-50\"> </i>                                  \r\n                                            {/* <CSVLink data={usersList} className=\"text-white\">Download Table </CSVLink>             */}\r\n                                        </button>                                        \r\n                                    </div>\r\n\r\n                                    <div className=\"card-body\">\r\n                                    <div className=\"table-responsive\">\r\n                                        <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellspacing=\"0\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                            <th>ID</th>\r\n                                            <th>Nome e cognome</th>\r\n                                            <th>E-mail</th>\r\n                                            <th>Date</th>\r\n                                            {/* <th>??</th>\r\n                                            <th>??</th>\r\n                                            <th>??</th> */}\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tfoot>\r\n                                            <tr>\r\n                                            <th>ID</th>\r\n                                            <th>Nome e cognome</th>\r\n                                            <th>E-mail</th>\r\n                                            <th>Date</th>\r\n                                            {/* <th>??</th>\r\n                                            <th>??</th>\r\n                                            <th>??</th> */}\r\n                                            </tr>\r\n                                        </tfoot>\r\n                                        <tbody>\r\n                                            {/* {\r\n                                                 users.map(        \r\n                                                     (user, countUser) => (<tr key={countUser}>\r\n                                                     <td>{countUser}</td>\r\n                                                     <td> \r\n                                                         <Link to={`/admin/users/${user._id}`}>{user.Name + \" \" + user.Surname}</Link> \r\n                                                     </td> \r\n                                                     <td>{user.Email}</td>\r\n                                                     <td>{user.Date}</td>\r\n                                                 </tr>))\r\n                                            }                         */}\r\n                                        </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* <!-- Content Row -->*/}\r\n\r\n                    <div className=\"row\">                            \r\n                            <div className=\"col-12\">                                \r\n                                <div className=\"card shadow mb-4\">\r\n                                    <div className=\"card-header py-3\">\r\n                                        <h6 className=\"m-0 font-weight-bold text-primary\">Projects Registered</h6>\r\n                                        <button className=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\" \r\n                                                // onClick={() => {\r\n                                                //                     projects.map( project => projectsCSV.push([project._id, project.Name, project.Description, project.Headquarter, project.Development_Stage, project.Date_Inserted])) \r\n                                                //                     setProjectsList(projectsCSV)  \r\n                                                //     }\r\n                                                // }\r\n                                            >\r\n                                            <i className=\"fas fa-download fa-sm text-white-50\"> </i>                                  \r\n                                            {/* <CSVLink data={projectsList} className=\"text-white\">Download Table </CSVLink>             */}\r\n                                        </button>                                        \r\n                                    </div>\r\n\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"table-responsive\">\r\n                                            <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellspacing=\"0\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>ID</th>\r\n                                                    <th>Nome</th>\r\n                                                    <th>Sede</th>\r\n                                                    <th>Data Inserimento</th>\r\n                                                    <th>Founder</th>\r\n                                                    <th>Numero Candidati</th>\r\n                                                    {/* <th>??</th>\r\n                                                    <th>??</th>\r\n                                                    <th>??</th> */}\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tfoot>\r\n                                                <tr>\r\n                                                    <th>ID</th>\r\n                                                    <th>Nome</th>\r\n                                                    <th>Sede</th>\r\n                                                    <th>Data Inserimento</th>\r\n                                                    <th>Founder</th>\r\n                                                    <th>Numero Candidati</th>\r\n                                                    {/* <th>??</th>\r\n                                                    <th>??</th>\r\n                                                    <th>??</th> */}\r\n                                                </tr>\r\n                                            </tfoot>\r\n                                            <tbody>\r\n                                                {/* {\r\n                                                    projects.map(        \r\n                                                        (project, countProject) => (<tr key={countProject}>\r\n                                                        <td>{countProject}</td>\r\n                                                        <td> \r\n                                                            <Link to={`/admin/projects/${project._id}`}>{project.Name}</Link> \r\n                                                        </td>\r\n                                                        <td>{ project.Headquarter }</td>\r\n                                                        <td>{project.Date_Inserted}</td>\r\n                                                    </tr>))\r\n                                                }                         */}\r\n                                            </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n            </LayoutBodyAdmin>                \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nDashboardAdmin.propTypes = {\r\n    admin: PropTypes.object.isRequired,\r\n    getUsers: PropTypes.func.isRequired,\r\n    getProjects: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    project: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin: state.admin,\r\n    auth: state.authCollaborator,\r\n    project: state.project\r\n})\r\n\r\nexport default connect(mapStateToProps, {getUsers, getProjects})(DashboardAdmin)","/**\r\n * The calls used to make for the admin\r\n */\r\n\r\n import axios from 'axios'\r\n import {\r\n    GET_CALLS_GENERAL_DATA,\r\n    GET_USERS,\r\n    GET_USERS_GENERAL_DATA,\r\n    ADMIN_ERROR,\r\n    ADD_POSITION,\r\n    GET_POSITIONS,\r\n    ADD_INDUSTRY,\r\n    GET_INDUSTRIES,\r\n    GET_DEV_STAGES,\r\n    ADD_DEV_STAGE,\r\n    ADD_ANALYSIS_QUESTION,\r\n    GET_ANALYSIS_QUESTIONS,\r\n    GET_PENDING_PROJECTS,\r\n    UPDATE_STATE_PROJECT,\r\n    GET_CANDIDATURES_GENERAL_DATA\r\n } from './types'\r\n import {setAlert} from './alert'\r\n\r\nexport const updateStateProject = (newState, id, history) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {'Content-Type':'application/json'}\r\n    }\r\n    console.log('update', newState)\r\n    const data = {'stato': newState}\r\n    const res = await axios.post(`/api/admin/updatestateproject/${id}`, data, config)\r\n\r\n    dispatch({\r\n      type: UPDATE_STATE_PROJECT,\r\n      payload: res.data\r\n    })\r\n\r\n    history.push('/admin/project/acceptance')\r\n  } catch (err) {\r\n    dispatch({\r\n        type: ADMIN_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status }\r\n    })\r\n  }\r\n}\r\n\r\n //Get the users\r\n export const getUsers = () => async dispatch => {\r\n     try{\r\n        console.log('error --- new')\r\n         const res = await axios.get('/api/admin/users')\r\n         \r\n         dispatch({\r\n             type: GET_USERS,\r\n             payload: res.data\r\n         })\r\n     }\r\n     catch(err)\r\n     {\r\n         dispatch({\r\n             type: ADMIN_ERROR,\r\n             payload: { msg: err.response.statusText, status: err.response.status }\r\n         })\r\n     }\r\n } \r\n\r\n export const getUsersGeneralData = () => async dispatch => {\r\n    try{\r\n         const res = await axios.get('/api/admin/usersdata')\r\n         console.log('Data user', res)\r\n         dispatch({\r\n             type: GET_USERS_GENERAL_DATA,\r\n             payload: res.data\r\n         })\r\n     }\r\n     catch(err)\r\n     {\r\n         dispatch({\r\n             type: ADMIN_ERROR,\r\n             payload: { msg: err.response.statusText, status: err.response.status }\r\n         })\r\n     }\r\n } \r\n\r\n export const getCallData = () => async dispatch => {\r\n    try{\r\n         const res = await axios.get('/api/admin/callsdata')\r\n         dispatch({\r\n             type: GET_CALLS_GENERAL_DATA,\r\n             payload: res.data\r\n         })\r\n     }\r\n     catch(err)\r\n     {\r\n         dispatch({\r\n             type: ADMIN_ERROR,\r\n             payload: { msg: err.response.statusText, status: err.response.status }\r\n         })\r\n     }\r\n } \r\n\r\n export const getCandidaturesData = () => async dispatch => {\r\n    try{\r\n        console.log('getCandidaturesData')\r\n        const res = await axios.get('/api/admin/candidatures-data')\r\n        dispatch({\r\n            type: GET_CANDIDATURES_GENERAL_DATA,\r\n            payload: res.data\r\n        })\r\n    }\r\n    catch(err)\r\n    {\r\n        dispatch({\r\n            type: ADMIN_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n } \r\n\r\n\r\n export const addPosition = (newPosition) => async dispatch => {\r\n        \r\n    const data = {data: newPosition}\r\n    /**\r\n     * NOTE: \r\n     * \r\n     *  POST requests MUST BE JSON TYPE!\r\n     */\r\n\r\n    const config = {\r\n        headers: {'Content-Type':'application/json'}\r\n    }\r\n\r\n    try{\r\n        const res = await axios.post(`/api/admin/position`, data, config);\r\n\r\n        dispatch({\r\n            type: ADD_POSITION,\r\n            payload: res.data\r\n        })\r\n    }\r\n    catch(err)\r\n    {\r\n        const errors = err.response.data.errors;\r\n\r\n        //Show the errors\r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n\r\n        dispatch({\r\n             type: ADMIN_ERROR,\r\n             payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n }\r\n\r\n export const getPositions = () => async dispatch => {\r\n     try{\r\n         const res = await axios.get('/api/admin/position');\r\n\r\n         dispatch({\r\n             type: GET_POSITIONS,\r\n             payload: res.data\r\n         })\r\n     }\r\n     catch(err)\r\n     {\r\n        const errors = err.response.data.errors;\r\n\r\n        //Show the errors\r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n\r\n        dispatch({\r\n             type: ADMIN_ERROR,\r\n             payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n     }\r\n }\r\n\r\n\r\n export const addIndustry = (newIndustry) => async dispatch => {\r\n        \r\n    const data = {data: newIndustry}\r\n    /**\r\n     * NOTE: \r\n     * \r\n     *  POST requests MUST BE JSON TYPE!\r\n     */\r\n\r\n    const config = {\r\n        headers: {'Content-Type':'application/json'}\r\n    }\r\n\r\n    try{\r\n        const res = await axios.post(`/api/admin/industry`, data, config);\r\n\r\n        dispatch({\r\n            type: ADD_INDUSTRY,\r\n            payload: res.data\r\n        })\r\n    }\r\n    catch(err)\r\n    {\r\n        const errors = err.response.data.errors;\r\n\r\n        //Show the errors\r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n\r\n        dispatch({\r\n             type: ADMIN_ERROR,\r\n             payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n }\r\n\r\n export const getIndustries = () => async dispatch => {\r\n    try{\r\n        const res = await axios.get('/api/admin/industry');\r\n\r\n        dispatch({\r\n            type: GET_INDUSTRIES,\r\n            payload: res.data\r\n        })\r\n    }\r\n    catch(err)\r\n    {\r\n       const errors = err.response.data.errors;\r\n\r\n       //Show the errors\r\n       if(errors){\r\n           errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n       }\r\n\r\n       dispatch({\r\n            type: ADMIN_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n       });\r\n    }\r\n}\r\n\r\n\r\nexport const addDevStage = (newDevStage) => async dispatch => {\r\n        \r\n    const data = {data: newDevStage}\r\n    /**\r\n     * NOTE: \r\n     * \r\n     *  POST requests MUST BE JSON TYPE!\r\n     */\r\n\r\n    const config = {\r\n        headers: {'Content-Type':'application/json'}\r\n    }\r\n\r\n    try{\r\n        const res = await axios.post(`/api/admin/devstage`, data, config);\r\n\r\n        dispatch({\r\n            type: ADD_DEV_STAGE,\r\n            payload: res.data\r\n        })\r\n    }\r\n    catch(err)\r\n    {\r\n        const errors = err.response.data.errors;\r\n\r\n        //Show the errors\r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n\r\n        dispatch({\r\n             type: ADMIN_ERROR,\r\n             payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n }\r\n\r\n export const getDevStage = () => async dispatch => {\r\n    try{\r\n        const res = await axios.get('/api/admin/devstage');\r\n\r\n        dispatch({\r\n            type: GET_DEV_STAGES,\r\n            payload: res.data\r\n        })\r\n    }\r\n    catch(err)\r\n    {\r\n       const errors = err.response.data.errors;\r\n\r\n       //Show the errors\r\n       if(errors){\r\n           errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n       }\r\n\r\n       dispatch({\r\n            type: ADMIN_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n       });\r\n    }\r\n}\r\n\r\nexport const getPendingProjects = () => async dispatch => {\r\n    try{\r\n        const res = await axios.get('/api/admin/projects/pending')\r\n\r\n        dispatch({\r\n          type: GET_PENDING_PROJECTS,\r\n          payload: res.data\r\n        })\r\n    }\r\n    catch(err) {\r\n      const errors = err.response.data.errors\r\n      //Show the errors\r\n      if(errors){\r\n        errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n\r\n        dispatch({\r\n            type: ADMIN_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n}\r\n\r\nexport const getAnalysisQuestions = () => async dispatch => {\r\n    try{\r\n        const res = await axios.get('/api/admin/analysis-question');\r\n\r\n        dispatch({\r\n            type: GET_ANALYSIS_QUESTIONS,\r\n            payload: res.data\r\n        })\r\n    }\r\n    catch(err)\r\n    {\r\n       const errors = err.response.data.errors;\r\n\r\n       //Show the errors\r\n       if(errors){\r\n           errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n       }\r\n\r\n       dispatch({\r\n            type: ADMIN_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n       });\r\n    }\r\n}\r\n\r\nexport const addAnalysisQuestion = (newAnalysisQuestion) => async dispatch => {\r\n        \r\n  const data = {\r\n    question: newAnalysisQuestion.question, \r\n    question_exposed: newAnalysisQuestion.question_exposed\r\n  }\r\n    /**\r\n     * NOTE: \r\n     * \r\n     *  POST requests MUST BE JSON TYPE!\r\n     */\r\n\r\n    const config = {\r\n        headers: {'Content-Type':'application/json'}\r\n    }\r\n\r\n    try{\r\n        const res = await axios.post(`/api/admin/analysis-question`, data, config);\r\n\r\n        dispatch({\r\n            type: ADD_ANALYSIS_QUESTION,\r\n            payload: res.data\r\n        })\r\n    }\r\n    catch(err)\r\n    {\r\n        const errors = err.response.data.errors;\r\n\r\n        //Show the errors\r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n\r\n        dispatch({\r\n             type: ADMIN_ERROR,\r\n             payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n }","import React, { Fragment, useState } from 'react'\r\nimport LayoutAdmin from '../../../../components/LayoutAdmin'\r\nimport {loginAdmin} from '../../../../../actions/authCollaborator'\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nexport const LoginAdministrator = ({loginAdmin, isAuthenticated}) => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    const {email, password} = formData;\r\n\r\n    const onChange = e => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        loginAdmin(email, password);\r\n    }\r\n\r\n    if(isAuthenticated){\r\n        return <Redirect to=\"/admin/dashboard\" />\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <LayoutAdmin />\r\n\r\n            <div className=\"bg-gradient-primary\">\r\n            <div className=\"container\">                \r\n                <div className=\"row justify-content-center\">\r\n                <div className=\"col-xl-10 col-lg-12 col-md-9\">\r\n                    <div className=\"card o-hidden border-0 shadow-lg my-5\">\r\n                    <div className=\"card-body p-0\">\r\n                        <div className=\"row\">\r\n                        <div className=\"col-lg-6 d-none d-lg-block bg-login-image\"></div>\r\n                        <div className=\"col-lg-6\">\r\n                            <div className=\"p-5\">\r\n                            <div className=\"text-center\">\r\n                                <h1 className=\"h4 text-gray-900 mb-4\">Welcome Back!</h1>\r\n                            </div>\r\n                            <form className=\"user\" onSubmit={onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                            type=\"email\" \r\n                                            className=\"form-control form-control-user\"                                \r\n                                            id=\"exampleInputEmail\" \r\n                                            aria-describedby=\"emailHelp\" \r\n                                            placeholder=\"Enter Email Address...\"\r\n                                            name=\"email\"\r\n                                            value={email}\r\n                                            onChange={onChange}\r\n                                            required \r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input \r\n                                        type=\"password\" \r\n                                        className=\"form-control form-control-user\" \r\n                                        id=\"exampleInputPassword\" \r\n                                        placeholder=\"Password\" \r\n                                        name=\"password\"\r\n                                        value={password}\r\n                                        onChange={onChange}\r\n                                        minLength=\"6\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                <div className=\"custom-control custom-checkbox small\">\r\n                                    <input \r\n                                        type=\"checkbox\" \r\n                                        className=\"custom-control-input\" \r\n                                        id=\"customCheck\" \r\n                                    />\r\n                                    <label className=\"custom-control-label\" for=\"customCheck\">Remember Me</label>\r\n                                </div>\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-user btn-block\" value=\"Login\"/>\r\n                                \r\n                                <hr />\r\n                                <a href=\"#\" className=\"btn btn-google btn-user btn-block\">\r\n                                <i className=\"fab fa-google fa-fw\"></i> Login with Google\r\n                                </a>\r\n                                <a href=\"#\" className=\"btn btn-facebook btn-user btn-block\">\r\n                                <i className=\"fab fa-facebook-f fa-fw\"></i> Login with Facebook\r\n                                </a>\r\n                            </form>\r\n                            <hr />  \r\n                            <div className=\"text-center\">\r\n                                <a className=\"small\" href=\"#\">Forgot Password?</a>\r\n                            </div>\r\n                            <div className=\"text-center\">\r\n                                <a className=\"small\" href=\"#\">Create an Account!</a>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nLoginAdministrator.propTypes = {\r\n    loginAdmin: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool\r\n}\r\n\r\n// It allows to access the Redux state\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.authCollaborator.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, {loginAdmin})(LoginAdministrator)\r\n","import React, {Fragment, useState} from 'react'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {setAlert} from '../../../../../actions/alert'\r\nimport {registerAdmin} from '../../../../../actions/authCollaborator'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst RegisterAdminstrator = ({setAlert, registerAdmin, isAuthenticated}) => {\r\n    \r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    });\r\n\r\n    const { name, email, password, password2} = formData;\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value})\r\n   \r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        if(password !== password2){\r\n            setAlert('Passwords do not match', 'danger')\r\n        }\r\n        else{\r\n            registerAdmin({name, email, password})\r\n        }\r\n    }\r\n\r\n    //Redirect if logged in\r\n    if(isAuthenticated)\r\n    {\r\n        return <Redirect to='/admin/dashboard'/>\r\n    }\r\n\r\n    \r\n    return (\r\n        <Fragment>\r\n            <form onSubmit={onSubmit}>\r\n                <input type=\"text\" placeholder=\"Name\" name=\"name\" \r\n                    value={name}\r\n                    onChange={e => onChange(e)}\r\n                    />\r\n                \r\n                <input type=\"email\" placeholder=\"Email Address\" name=\"email\"\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n\r\n                        />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                \r\n                    value={password}\r\n                    onChange={e => onChange(e)}\r\n\r\n                    \r\n                />\r\n                <input\r\n                            type=\"password\"\r\n                            placeholder=\"Confirm Password\"\r\n                            name=\"password2\"\r\n                            \r\n                            value={password2}\r\n                            onChange={e => onChange(e)}\r\n\r\n                />\r\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nRegisterAdminstrator.propTypes = {\r\n    setAlert: PropTypes.func.isRequired,\r\n    registerAdmin: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\n\r\nexport default connect( \r\n    mapStateToProps, \r\n    {setAlert, registerAdmin}\r\n    )(RegisterAdminstrator)","import React, { Fragment } from 'react'\r\nimport './profile.css'\r\n\r\nconst UserDetailCard = ({user}) => {\r\n    return(\r\n        <Fragment>\r\n            <div className=\"container emp-profile\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"profile-img\">\r\n                                <img\r\n                                    // src={user.user.avatar}\r\n                                    alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"profile-head\">\r\n                                <h5>\r\n                                    {user.User.Name}{user.User.Surname}\r\n                                </h5>\r\n                                <h6>\r\n                                    {/* {user.status} */}\r\n                                </h6>\r\n\r\n                                <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n                                    <li className=\"nav-item\">\r\n                                        <a className=\"nav-link active\" id=\"home-tab\" data-toggle=\"tab\" href=\"#home\"\r\n                                           role=\"tab\" aria-controls=\"home\" aria-selected=\"true\">About</a>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"profile-work\">\r\n                                <p>SKILLS</p>\r\n                                {/* {user.skills.map(value=>{\r\n                                    return (\r\n                                        <div>\r\n                                            <a href=''> {value} </a>\r\n                                        </div>\r\n                                    )\r\n                                })} */}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"tab-content profile-tab\" id=\"myTabContent\">\r\n                                <div className=\"tab-pane fade show active\" id=\"home\" role=\"tabpanel\"\r\n                                     aria-labelledby=\"home-tab\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <label>User Id</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <p>\r\n                                                {/* {user._id} */}\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <label>Name</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <p>{user.User.Name} {user.User.Surname}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <label>Email</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <p>{user.User.Email}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <label>Phone</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <p>123 456 7890</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <label>Profession</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <p>\r\n                                                {/* {user.status} */}\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <label>Company</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <p>\r\n                                                {/* {user.company} */}\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <label>Location</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            {/* <p>{user.location}</p> */}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <label>Web-site</label>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            {/* <p>{user.website}</p> */}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <label>Bio</label><br/>\r\n                                            {/* <p>{user.bio}</p> */}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default UserDetailCard","/** \r\n * UserDetail show all the data about a certain user.\r\n * The data (which are in the folder model/Profile.js) that have to be shown are:\r\n *  - company\r\n *  - website\r\n *  - location\r\n *  - status\r\n *  - skills\r\n *  - bio\r\n * \r\n * These data have to be shown in a table. In building the page, use the template that is in the folder: Template Admin Area (which is in the server area).\r\n * \r\n * \r\n * In order to develop this part you have to watch this lecture on my UDEMY account.\r\n * So, go on udemy.com and register with:\r\n *             - username: alex.enax@protonmail.com\r\n *             - password: Credinta21\r\n * \r\n * Then, please go and watch:\r\n *  - lecture 54 (that explains the logic to be used to show profiles on\r\n *                this platform, because I am building it following that course)\r\n *  - lecture 53 (from minute 1:10, that explains a method used in lecture 54)\r\n */\r\n\r\n\r\nimport React, { Fragment, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport LayoutBodyAdmin from \"../../../../components/LayoutAdminBody\"\r\nimport LayoutHeaderAdmin from \"../../../../components/LayoutAdmin\"\r\nimport { withRouter, Link } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {getProfileById} from '../../../../../actions/profile'\r\nimport Spinner from '../../../../../resources/differentResources/Spinner'\r\nimport UserDetailCard from './UserDetailCard'\r\n\r\nconst UserDetail = ({\r\n                        getProfileById,\r\n                        profile:{profile,loading},\r\n                        auth,\r\n                        match\r\n}) => {\r\n\r\n    useEffect(()=>{\r\n        getProfileById(match.params.id);\r\n    },[getProfileById,match.params.id])\r\n\r\n    return (\r\n        <Fragment>\r\n            <LayoutHeaderAdmin />\r\n            <LayoutBodyAdmin>\r\n                {profile=== null || loading ? <Spinner/>:\r\n                    <UserDetailCard user={profile}/>\r\n                }\r\n\r\n            </LayoutBodyAdmin>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nUserDetail.propTypes = {\r\n    getProfileById: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps,{ getProfileById })(UserDetail)","/**\r\n * Page that enters in the detail of the projects\r\n */\r\nimport PropTypes from 'prop-types'\r\nimport React, { Fragment, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { getProjectById } from '../../../../../actions/project'\r\nimport Spinner from '../../../../../resources/differentResources/Spinner'\r\n\r\nimport LayoutHeaderAdmin from \"../../../../components/LayoutAdmin\"\r\nimport LayoutBodyAdmin from \"../../../../components/LayoutAdminBody\"\r\n\r\n// export const ProjectDetail = ({getProjectById, getCandidates, candidacy, match, project: {project, loading}}) => {\r\nexport const ProjectDetail = () => {\r\n\r\n    return (\r\n        <Fragment>\r\n            <LayoutHeaderAdmin />\r\n            <LayoutBodyAdmin> \r\n                \r\n                    <Fragment>\r\n                        <div className=\"row pt-5\">\r\n                            <div className=\"col-8 offset-2 jumbotron\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <h1 className=\"display-3\"></h1>\r\n                                        </div>\r\n                                        <div className=\"col-6 text-right\">\r\n                                            <h4> Founder: </h4>\r\n                                        </div>\r\n                                    </div>\r\n                                    <h4>Descrizione idea</h4>\r\n                                    <p className=\"lead\"></p>\r\n                                    <hr className=\"my-4\" />\r\n                                    \r\n                                    <h4>Figure ricercate</h4>\r\n                                    <span className=\"lead\">\r\n\r\n\r\n                                        <ul className=\"list-group\">                                      \r\n                                            {/* {\r\n                                                project.positions_searched.map((element, index) =>(\r\n                                                    <li key={ index} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                                           {element}\r\n                                                    </li>\r\n                                                ))\r\n\r\n                                            } */}\r\n                                        </ul>\r\n                                    </span>\r\n                                    <hr className=\"my-4\" />\r\n\r\n                                    <h4>Informazioni</h4>  \r\n                                    <p className=\"lead\">Settore: </p>\r\n                                    <p className=\"lead\">Tipo di collaborazione: </p>\r\n                                    <p className=\"lead\">Sede: </p>\r\n                                    <p className=\"lead\">Development stage: </p>\r\n                                    \r\n                                    <hr className=\"my-4\" />     \r\n                                    \r\n                                    <h4>Lista Candidati</h4>  \r\n                                    \r\n                                    {/* {candidacy === null || loading ? <Spinner /> : (<Fragment> { candidacy.candidacies.map((candidate, candidateNumber) => <p className=\"lead\">({candidateNumber})  <Link to={`/admin/users/${candidate.user._id}`}> {candidate.user.name} </Link> </p>) }</Fragment>)} */}\r\n                                    \r\n\r\n                                   \r\n                            </div> \r\n                        </div>   \r\n\r\n                    </Fragment>\r\n            </LayoutBodyAdmin>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nProjectDetail.propTypes = {\r\n    getProjectById: PropTypes.func.isRequired,\r\n //   getCandidates: PropTypes.func.isRequired,\r\n    project: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    project: state.project,\r\n   // candidacy: state.candidacy\r\n    \r\n})\r\n\r\n//export default connect(mapStateToProps, {getProjectById, getCandidates})(withRouter(ProjectDetail))\r\nexport default connect(mapStateToProps, {})(withRouter(ProjectDetail))\r\n","import React, { Fragment, useState } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport {addPosition} from '../../../../../../actions/admin'\r\n\r\nexport const PositionForm = ({addPosition}) => {\r\n\r\n    const [value, setValue] = useState('');\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if(!value) return; //If there is no value\r\n        addPosition(value);\r\n        setValue('') // Reset the value of the form\r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n            <form onSubmit={handleSubmit} className=\"d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search\">\r\n                <div className=\"input-group\">\r\n                    <input type=\"text\" value={value} onChange={e => setValue(e.target.value)} className=\"form-control border-0 small\" placeholder=\"Insert new position\" />\r\n                    <div className=\"input-group-append\">\r\n                        <button className=\"btn btn-primary input\" type=\"submit\">\r\n                        <i className=\"fas fa-plus fa-sm\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin: state.admin,\r\n    auth: state.authCollaborator\r\n})\r\n\r\nexport default connect(mapStateToProps, {addPosition})(PositionForm)","/**\r\n * Page to manage the professiona positions inserted in the platform\r\n */\r\nimport Spinner from '../../../../../resources/differentResources/Spinner'\r\nimport LayoutBodyAdmin from \"../../../../components/LayoutAdminBody\"\r\nimport LayoutHeaderAdmin from \"../../../../components/LayoutAdmin\"\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\nimport {getPositions} from '../../../../../actions/admin'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport PositionForm from './components/PositionForm'\r\n\r\nexport const ManagePosition = ({getPositions, admin:{positions, loading}}) => {\r\n\r\n    useEffect(() => {\r\n            getPositions();\r\n    }, [getPositions])\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <LayoutHeaderAdmin />\r\n            <LayoutBodyAdmin> \r\n\r\n                {/* <!-- Page Heading -->*/}\r\n                \r\n                <h1 className=\"h3 mb-2 text-gray-800\">Gestione figure professionali</h1>\r\n                <p className=\"mb-4\">DataTables is a third party plugin that is used to generate the demo table below. For more information about DataTables, please visit the <a target=\"_blank\" href=\"https://datatables.net\">official DataTables documentation</a>.</p>\r\n                \r\n\r\n                {/** Insertion of a new position */}\r\n                <div className=\"row\">\r\n                    <div className=\"col-5\">\r\n                        <PositionForm />\r\n                    </div>\r\n                </div>\r\n\r\n                {/** Table with the positions in the database */}\r\n                {\r\n                    loading ? (<Spinner />) :\r\n                        (\r\n                            <Fragment>\r\n{/**** */}\r\n                                <div className=\"row pt-5\">\r\n                                    <div className=\"col-12\">\r\n                                    <div className=\"card shadow mb-4\">\r\n                                        <div className=\"card-header py-3\">\r\n                                        <h6 className=\"m-0 font-weight-bold text-primary\">Figure professionali inserite</h6>\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n                                        <div className=\"table-responsive\">\r\n                                            <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellspacing=\"0\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>Index</th>\r\n                                                    <th>Figura professionale</th>\r\n                                                    <th>Data Inserimento</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tfoot>\r\n                                                <tr>\r\n                                                    <th>Index</th>\r\n                                                    <th>Figura professionale</th>\r\n                                                    <th>Data Inserimento</th>\r\n                                                </tr>\r\n                                            </tfoot>\r\n                                            <tbody>\r\n                                                {\r\n                                                    positions.map((pos, index) => (\r\n                                                        <tr>\r\n                                                            <td>{index}</td>\r\n                                                            <td>{pos.Position}</td>\r\n                                                            <td>{pos.Date_Inserted}</td>\r\n                                                        </tr>\r\n\r\n                                                    ))\r\n                                                }\r\n                                            </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n{/****** */}\r\n                            </Fragment>\r\n                        )\r\n                }               \r\n            </LayoutBodyAdmin>  \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nManagePosition.propTypes = {\r\n    admin: PropTypes.object.isRequired,\r\n    getPositions: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin: state.admin,\r\n    auth: state.authCollaborator\r\n})\r\n\r\nexport default connect(mapStateToProps, {getPositions})(ManagePosition)","import React, { Fragment, useState } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport {addIndustry} from '../../../../../../actions/admin'\r\n\r\nexport const IndustryForm = ({addIndustry}) => {\r\n\r\n    const [value, setValue] = useState('');\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if(!value) return; //If there is no value\r\n        addIndustry(value);\r\n        setValue('') // Reset the value of the form\r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n            <form onSubmit={handleSubmit} className=\"d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search\">\r\n                <div className=\"input-group\">\r\n                    <input type=\"text\" value={value} onChange={e => setValue(e.target.value)} className=\"form-control border-0 small\" placeholder=\"Insert new industry\" />\r\n                    <div className=\"input-group-append\">\r\n                        <button className=\"btn btn-primary input\" type=\"submit\">\r\n                        <i className=\"fas fa-plus fa-sm\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin: state.admin,\r\n    auth: state.authCollaborator\r\n})\r\n\r\nexport default connect(mapStateToProps, {addIndustry})(IndustryForm)","/**\r\n * Page to manage the industries inserted in the platform\r\n */\r\nimport Spinner from '../../../../../resources/differentResources/Spinner'\r\nimport LayoutBodyAdmin from \"../../../../components/LayoutAdminBody\"\r\nimport LayoutHeaderAdmin from \"../../../../components/LayoutAdmin\"\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\nimport {getIndustries} from '../../../../../actions/admin'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport IndustryForm from './components/IndustryForm'\r\n\r\nexport const ManageIndustry = ({getIndustries, admin:{industries, loading}}) => {\r\n    \r\n    useEffect(() => {\r\n        getIndustries();\r\n        }, [getIndustries])\r\n        \r\n    return (\r\n        <Fragment>\r\n        <LayoutHeaderAdmin />\r\n        <LayoutBodyAdmin> \r\n\r\n            {/* <!-- Page Heading -->*/}\r\n            \r\n            <h1 className=\"h3 mb-2 text-gray-800\">Gestione dei settori</h1>\r\n            <p className=\"mb-4\">DataTables is a third party plugin that is used to generate the demo table below. For more information about DataTables, please visit the <a target=\"_blank\" href=\"https://datatables.net\">official DataTables documentation</a>.</p>\r\n            \r\n\r\n            {/** Insertion of a new position */}\r\n            <div className=\"row\">\r\n                <div className=\"col-5\">\r\n                    <IndustryForm />\r\n                </div>\r\n            </div> \r\n\r\n            {/** Table with the positions in the database */}\r\n            {\r\n                loading ? (<Spinner />) :\r\n                    (\r\n                        <Fragment>\r\n                            <div className=\"row pt-5\">\r\n                                <div className=\"col-12\">\r\n                                  <div className=\"card shadow mb-4\">\r\n                                    <div className=\"card-header py-3\">\r\n                                    <h6 className=\"m-0 font-weight-bold text-primary\">Figure professionali inserite</h6>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                    <div className=\"table-responsive\">\r\n                                        <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellspacing=\"0\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Index</th>\r\n                                                <th>Figura professionale</th>\r\n                                                <th>Data Inserimento</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tfoot>\r\n                                            <tr>\r\n                                                <th>Index</th>\r\n                                                <th>Figura professionale</th>\r\n                                                <th>Data Inserimento</th>\r\n                                            </tr>\r\n                                        </tfoot>\r\n                                        <tbody>\r\n                                            {\r\n                                                industries.map((ind, index) => (\r\n                                                    <tr>\r\n                                                        <td>{index}</td>\r\n                                                        <td>{ind.Industry}</td>\r\n                                                        <td>{ind.Date_Inserted}</td>\r\n                                                    </tr>\r\n\r\n                                                ))\r\n                                            }\r\n                                        </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                    </div>\r\n                                 </div>\r\n                                </div>\r\n                            </div>\r\n                        </Fragment>\r\n                    )\r\n            }               \r\n        </LayoutBodyAdmin>  \r\n    </Fragment>\r\n    )\r\n}\r\n\r\n\r\nManageIndustry.propTypes = {\r\n    admin: PropTypes.object.isRequired,\r\n    getIndustries: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin: state.admin,\r\n    auth: state.authCollaborator\r\n})\r\n\r\nexport default connect(mapStateToProps, {getIndustries})(ManageIndustry)","import React, { Fragment, useState } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {addDevStage} from '../../../../../../actions/admin'\r\n\r\nexport const DevStageForm = ({addDevStage}) => {\r\n\r\n    const [value, setValue] = useState('');\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if(!value) return; //If there is no value\r\n        addDevStage(value);\r\n        setValue('') // Reset the value of the form\r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n            <form onSubmit={handleSubmit} className=\"d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search\">\r\n                <div className=\"input-group\">\r\n                    <input type=\"text\" value={value} onChange={e => setValue(e.target.value)} className=\"form-control border-0 small\" placeholder=\"Insert new stage development\" />\r\n                    <div className=\"input-group-append\">\r\n                        <button className=\"btn btn-primary input\" type=\"submit\">\r\n                        <i className=\"fas fa-plus fa-sm\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin: state.admin,\r\n    auth: state.authCollaborator\r\n})\r\n\r\nexport default connect(mapStateToProps, {addDevStage})(DevStageForm)","/**\r\n * Page to manage the development stage of the startups\r\n */\r\nimport Spinner from '../../../../../resources/differentResources/Spinner'\r\nimport LayoutBodyAdmin from \"../../../../components/LayoutAdminBody\"\r\nimport LayoutHeaderAdmin from \"../../../../components/LayoutAdmin\"\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {getDevStage} from '../../../../../actions/admin'\r\nimport DevStageForm from './components/DevStageForm'\r\n\r\nexport const ManagementDevStage = ({getDevStage, admin:{dev_stages, loading}}) => {\r\n    \r\n    useEffect(() => {getDevStage(); }, [getDevStage])\r\n\r\n    return (\r\n        \r\n       <div>\r\n        <LayoutHeaderAdmin />\r\n        <LayoutBodyAdmin>\r\n            {/* <!-- Page Heading -->*/}\r\n            \r\n            <h1 className=\"h3 mb-2 text-gray-800\">Gestione delle fasi di sviluppo</h1>\r\n            <p className=\"mb-4\">DataTables is a third party plugin that is used to generate the demo table below. For more information about DataTables, please visit the <a target=\"_blank\" href=\"https://datatables.net\">official DataTables documentation</a>.</p>\r\n            \r\n\r\n            {/** Insertion of a new position */}\r\n            <div className=\"row\">\r\n                <div className=\"col-5\">\r\n                    <DevStageForm />\r\n                </div>\r\n            </div> \r\n\r\n            {/** Table with the positions in the database */}\r\n            {\r\n                loading ? (<Spinner />) :\r\n                    (\r\n                        <Fragment>\r\n                            <div className=\"row pt-5\">\r\n                                <div className=\"col-12\">\r\n                                  <div className=\"card shadow mb-4\">\r\n                                    <div className=\"card-header py-3\">\r\n                                    <h6 className=\"m-0 font-weight-bold text-primary\">Figure professionali inserite</h6>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                    <div className=\"table-responsive\">\r\n                                        <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellspacing=\"0\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Index</th>\r\n                                                <th>Development Stage</th>\r\n                                                <th>Data Inserimento</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tfoot>\r\n                                            <tr>\r\n                                                <th>Index</th>\r\n                                                <th>Development Stage</th>\r\n                                                <th>Data Inserimento</th>\r\n                                            </tr>\r\n                                        </tfoot>\r\n                                        <tbody>\r\n                                            {\r\n                                                dev_stages.map((dev, index) => (\r\n                                                    <tr>\r\n                                                        <td>{index}</td>\r\n                                                        <td>{dev.Development_Stage}</td>\r\n                                                        <td>{dev.Date_Inserted}</td>\r\n                                                    </tr>\r\n\r\n                                                ))\r\n                                            }\r\n                                        </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                    </div>\r\n                                 </div>\r\n                                </div>\r\n                            </div>\r\n                        </Fragment>\r\n                    )\r\n            }  \r\n\r\n\r\n        </LayoutBodyAdmin>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin: state.admin,\r\n    auth: state.authCollaborator\r\n})\r\n\r\nexport default connect(mapStateToProps, {getDevStage})(ManagementDevStage)","import React, { Fragment, useState } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport {addAnalysisQuestion} from '../../../../../../actions/admin'\r\n\r\nexport const AnalysisQuestionForm = ({addAnalysisQuestion}) => {\r\n\r\n    const [value, setValue] = useState({\r\n      question: '',\r\n      question_exposed: ''\r\n    });\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if(!value) return; //If there is no value\r\n        addAnalysisQuestion(value);\r\n        setValue('') // Reset the value of the form\r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n            <form onSubmit={handleSubmit} className=\"d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search\">\r\n                <div className=\"input-group\">\r\n                    <input type=\"text\" size=\"150\" onChange={e => setValue({question: e.target.value})} className=\"form-control border-0 small\" placeholder=\"Inserisci nuova domanda\" required/>\r\n                    <input type=\"text\" size=\"150\" onChange={e => setValue({question_exposed:e.target.value})} className=\"form-control border-0 small\" placeholder=\"Inserisci nuova domanda\" required/>\r\n                    <div className=\"input-group-append\">\r\n                        <button className=\"btn btn-primary input\" type=\"submit\">\r\n                        <i className=\"fas fa-plus fa-sm\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin: state.admin,\r\n    auth: state.authCollaborator\r\n})\r\n\r\nexport default connect(mapStateToProps, {addAnalysisQuestion})(AnalysisQuestionForm)","/**\r\n * Page to manage the questions that are used to analyse a Project\r\n */\r\nimport Spinner from '../../../../../resources/differentResources/Spinner'\r\nimport LayoutBodyAdmin from \"../../../../components/LayoutAdminBody\"\r\nimport LayoutHeaderAdmin from \"../../../../components/LayoutAdmin\"\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\nimport {getAnalysisQuestions} from '../../../../../actions/admin'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport AnalysisQuestionForm from './components/AnalysisQuestionForm'\r\n\r\nexport const ManageAnalysisQuestion = ({getAnalysisQuestions, admin:{analysis_questions, loading}}) => {\r\n    \r\n    useEffect(() => {\r\n            getAnalysisQuestions()\r\n    },[getAnalysisQuestions])\r\n        \r\n    return (\r\n        <Fragment>\r\n        <LayoutHeaderAdmin />\r\n        <LayoutBodyAdmin> \r\n\r\n            {/* <!-- Page Heading -->*/}\r\n            \r\n            <h1 className=\"h3 mb-2 text-gray-800\">Gestione domande per progetto</h1>\r\n            <p className=\"mb-4\">DataTables is a third party plugin that is used to generate the demo table below. For more information about DataTables, please visit the <a target=\"_blank\" href=\"https://datatables.net\">official DataTables documentation</a>.</p>\r\n            \r\n\r\n            {/** Insertion of a new position */}\r\n            <div className=\"row\">\r\n                <div className=\"col-10\">\r\n                    <AnalysisQuestionForm />\r\n                </div>\r\n            </div> \r\n\r\n            {/** Table with the positions in the database */}\r\n            {\r\n                loading ? (<Spinner />) :\r\n                    (\r\n                        <Fragment>\r\n                            <div className=\"row pt-5\">\r\n                                <div className=\"col-12\">\r\n                                  <div className=\"card shadow mb-4\">\r\n                                    <div className=\"card-header py-3\">\r\n                                    <h6 className=\"m-0 font-weight-bold text-primary\">Domande progetto inserite</h6>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                    <div className=\"table-responsive\">\r\n                                        <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellspacing=\"0\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Index</th>\r\n                                                <th>Domande progetto</th>\r\n                                                <th>Data Inserimento</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tfoot>\r\n                                            <tr>\r\n                                                <th>Index</th>\r\n                                                <th>Domande progetto</th>\r\n                                                <th>Data Inserimento</th>\r\n                                            </tr>\r\n                                        </tfoot>\r\n                                        <tbody>\r\n                                            {\r\n                                                analysis_questions.map((analysis_question, index) => (\r\n                                                    <tr>\r\n                                                        <td>{index}</td>\r\n                                                        <td>{analysis_question.Question}</td>\r\n                                                        <td>{analysis_question.Date_Inserted}</td>\r\n                                                    </tr>\r\n\r\n                                                ))\r\n                                            }\r\n                                        </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                    </div>\r\n                                 </div>\r\n                                </div>\r\n                            </div>\r\n                        </Fragment>\r\n                    )\r\n            }               \r\n        </LayoutBodyAdmin>  \r\n    </Fragment>\r\n    )\r\n}\r\n\r\n\r\nManageAnalysisQuestion.propTypes = {\r\n    admin: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin: state.admin,\r\n    auth: state.authCollaborator\r\n})\r\n\r\nexport default connect(mapStateToProps, {getAnalysisQuestions})(ManageAnalysisQuestion)","// import Spinner from '../../../../components/layout/Spinner'\r\nimport LayoutBodyAdmin from \"../../../../components/LayoutAdminBody\"\r\nimport LayoutHeaderAdmin from \"../../../../components/LayoutAdmin\"\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport {getPendingProjects} from '../../../../../actions/admin'\r\nimport {Row} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport const ApproveProject = ({getPendingProjects, admin:{pendingProjects}}) => {\r\n  const [projects, setProjects] = useState([])  \r\n\r\n  useEffect(() => {\r\n    getPendingProjects()  \r\n  }, [getPendingProjects])\r\n\r\n  useEffect(() => {\r\n    setProjects(pendingProjects)\r\n  },[pendingProjects])\r\n\r\n  return (\r\n    <Fragment>\r\n      <LayoutHeaderAdmin />\r\n      <LayoutBodyAdmin> \r\n        <Row>\r\n        <div className=\"col-12\">                                \r\n          <div className=\"card shadow mb-4\">\r\n            <div className=\"card-header py-3\">\r\n              <h6 className=\"m-0 font-weight-bold text-primary\">Projects Registered</h6>                                      \r\n            </div>\r\n\r\n            <div className=\"card-body\">\r\n                <div className=\"table-responsive\">\r\n                    <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellspacing=\"0\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Nome</th>\r\n                            <th>Sede</th>\r\n                            <th>Data Inserimento</th>\r\n                            <th>???</th>\r\n                            <th>???</th>\r\n                            {/* <th>??</th>\r\n                            <th>??</th>\r\n                            <th>??</th> */}\r\n                        </tr>\r\n                    </thead>\r\n                    <tfoot>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Nome</th>\r\n                            <th>Sede</th>\r\n                            <th>Data Inserimento</th>\r\n                            <th>???</th>\r\n                            <th>???</th>\r\n                            {/* <th>??</th>\r\n                            <th>??</th>\r\n                            <th>??</th> */}\r\n                        </tr>\r\n                    </tfoot>\r\n                    <tbody>\r\n                    {\r\n                      projects.map(        \r\n                        (project, countProject) => (\r\n                          <tr key={countProject}>\r\n                            <td>{countProject}</td>\r\n                            <td> \r\n                                <Link to={`/admin/project/acceptance/${project._id}`}>{project.Name}</Link> \r\n                            </td>\r\n                            <td>{ project.Headquarter }</td>\r\n                            <td>{project.Date_Inserted}</td>\r\n                            <td></td>\r\n                          </tr>\r\n                        )\r\n                      )\r\n                    }                        \r\n                    </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            </div>\r\n          </div>\r\n        </Row>\r\n      </LayoutBodyAdmin>\r\n    </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin: state.admin,\r\n    auth: state.authCollaborator\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {getPendingProjects})(ApproveProject)\r\n","import LayoutBodyAdmin from \"../../../../components/LayoutAdminBody\"\r\nimport LayoutHeaderAdmin from \"../../../../components/LayoutAdmin\"\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\nimport {connect} from \"react-redux\"\r\nimport {getProjectById} from '../../../../../actions/project'\r\nimport {updateStateProject} from \"../../../../../actions/admin\";\r\nimport {Row} from 'react-bootstrap'\r\nimport Spinner from '../../../../../resources/differentResources/Spinner'\r\n\r\nexport const ProjectDetailApprovation = ({getProjectById, updateStateProject, match, admin, project:{project}, history}) => {\r\n  const [projectDetail, setProjetDetail] = useState('')\r\n  \r\n  useEffect(() => {\r\n    getProjectById(match.params.id)\r\n  }, [getProjectById, match.params.id])\r\n  \r\n  useEffect(() => {\r\n    setProjetDetail(project)\r\n  })\r\n  \r\n  return (\r\n    <Fragment>\r\n      <LayoutHeaderAdmin />\r\n      <LayoutBodyAdmin>\r\n        {!projectDetail ?\r\n          <Spinner /> :\r\n          <Fragment>\r\n            <div className=\"row pt-5\">\r\n              <div className=\"col-8 offset-2 jumbotron\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6\">\r\n                                <h1 className=\"display-3\">{project.Name}</h1>\r\n                            </div>\r\n                            <div className=\"col-6 text-right\">\r\n                                <h4> Founder: </h4>\r\n                            </div>\r\n                        </div>\r\n                        <h4>Descrizione idea</h4>\r\n                        <p className=\"lead\">{project.Description}</p>\r\n                        <hr className=\"my-4\" />\r\n                        \r\n                        <h4>Figure ricercate</h4>\r\n                        <span className=\"lead\">\r\n\r\n\r\n                            <ul className=\"list-group\">                                      \r\n                                {/* {\r\n                                    project.positions_searched.map((element, index) =>(\r\n                                        <li key={ index} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                                {element}\r\n                                        </li>\r\n                                    ))\r\n\r\n                                } */}\r\n                            </ul>\r\n                        </span>\r\n                        <hr className=\"my-4\" />\r\n\r\n                        <h4>Informazioni</h4>  \r\n                        <p className=\"lead\">Settore:  </p>\r\n                        \r\n                        <p className=\"lead\">Sede: {project.Headquarter}</p>\r\n                        <p className=\"lead\">Development stage: {project.Development_Stage.Development_Stage} </p>\r\n                        \r\n                        <hr className=\"my-4\" />     \r\n                        \r\n                        <h4>Domande</h4>\r\n                        {!project.ProjectAnalysis.length ? \r\n                          <p className='lead'>Non ha inserito risposte alle domande</p> :\r\n                          project.ProjectAnalysis.map((analysis, index) => (\r\n                            <p key={index} className=\"lead\">{index}. {analysis.Analysis_Question.Question}: <br /> {analysis.Answer}</p>\r\n                          ))}\r\n                </div>\r\n            </div>\r\n            <Row>\r\n              <div className=\"col-6 offset-3 text-center\">\r\n                <button onClick={() => updateStateProject('ACCEPTED', match.params.id, history)} href=\"#\" className=\"btn btn-primary btn-icon-split\">\r\n                  <span className=\"icon text-white-50\">\r\n                    <i className=\"fas fa-flag\"></i>\r\n                  </span>\r\n                  <span className=\"text\">Accetta</span>\r\n                </button>\r\n                {'  '}\r\n                <button onClick={() => updateStateProject('REJECTED', match.params.id, history)} href=\"#\" className=\"btn btn-danger btn-icon-split\">\r\n                  <span className=\"icon text-white-50\">\r\n                    <i className=\"fas fa-trash\"></i>\r\n                  </span>\r\n                  <span className=\"text\">Rifiuta</span>\r\n                </button>\r\n              </div>\r\n            </Row>\r\n\r\n        </Fragment>\r\n        }\r\n      </LayoutBodyAdmin>    \r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  admin: state.admin,\r\n  project: state.project\r\n})\r\n\r\nexport default connect(mapStateToProps, {getProjectById, updateStateProject})(ProjectDetailApprovation)\r\n","/**\r\n * \r\n * \r\n */\r\n\r\nimport React, {useEffect, useState} from 'react'\r\nimport {CSVLink, CSVDownload} from 'react-csv'\r\nimport {connect} from 'react-redux'\r\n\r\nimport Spinner from '../../../resources/differentResources/Spinner'\r\nimport LayoutBodyAdmin from \"../../components/LayoutAdminBody\"\r\nimport LayoutHeaderAdmin from \"../../components/LayoutAdmin\"\r\nimport {getUsersGeneralData, getCallData, getCandidaturesData} from '../../../actions/admin'\r\nimport user from '../../../reducers/user'\r\n\r\n\r\nconst myCSV = [['ID', 'Data Creazione', 'Nome', 'Cognome', 'Email', 'Telefono', 'Anno nascita', 'Città', 'Regione', 'Professione', 'Settore', 'Competenze', 'Biografia', 'N. Progetti Creati', \r\n'N. Call create', 'N. Candidature inviate', 'N. Candidature accettate', 'N. Candidature inviate in attesa', 'N. Candidature inviate rifiutate' ]];\r\n\r\nconst secondCSV = [['ID','Data Creazione', 'Nome progetto', 'Founder Email', 'Descrizione progetto', 'Settore', 'Fase di sviluppo', 'Figura ricercata', 'Competenze ricercate',\r\n 'Tipo di collaborazione', 'Vincolo geografico', 'Dove', 'Status call', 'Numero candidature',  'N. Candidature accettate', 'N. Candidature  in attesa', 'N. Candidature inviate rifiutate']]\r\n\r\n const thirdCSV = [['ID','Data Creazione', 'Cover letter', 'ID Progetto', 'Progetto', 'ID Call', 'Vincolo geografico', 'Status', 'Data Aggiornamento Stato', 'Motivazione rifiuto', 'Nome Team member' , 'Cognome Team member',\r\n'Email Team Member', 'Telefono Team Member', 'Età Team Member', 'Città Team Member', 'Professione Team member', 'Settore Team Member', 'Competenze Team Member', \r\n'Biografia Team Member', 'Nome Founde', 'Cognomer Founder', 'Email Founder', 'Telefono Founder', 'Età Founder', 'Città Founder', 'Professione Founder',\r\n'Settore Founder', 'Competenze Founder', 'Biografia Founder']]\r\n\r\n\r\nexport const DonwnloaDocuments = ({getUsersGeneralData, getCallData, getCandidaturesData, admin: {usersGeneralData, callsGeneralData, candidaturesGeneralData}}) => {\r\n    useEffect(() => {\r\n        getUsersGeneralData()\r\n        getCallData()\r\n        getCandidaturesData()        \r\n    }, [getUsersGeneralData, getCallData, getCandidaturesData])\r\n\r\n    const [usersList, setUsersList] = useState([])\r\n    const [callsList, setCallsList] = useState([])\r\n    const [candidaturesList, setCandidaturesList] = useState([])\r\n\r\n  return (\r\n    <>\r\n      <LayoutHeaderAdmin />\r\n      <LayoutBodyAdmin>\r\n\r\n        <div className=\"row\">                            \r\n          <div className=\"col-12\">                                \r\n            <div className=\"card shadow mb-4\">\r\n                <div className=\"card-header py-3\">\r\n                    <h6 className=\"m-0 font-weight-bold text-primary\">Download dati</h6><br />\r\n                    <button className=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\" \r\n                            onClick={() => {\r\n                                console.log('USERS')\r\n                                console.log('usersGeneralData', usersGeneralData)\r\n                                \r\n                                if(usersGeneralData !== null && usersGeneralData.length != 0) {\r\n\r\n                                    \r\n                                    usersGeneralData.map( (user) => \r\n                                        {\r\n                                            if( typeof user.Profile === 'undefined') user.Profile = {\r\n                                                Telephone: '',\r\n                                                Date_Of_Birth: '',\r\n                                                City_Living: '',\r\n                                                Position: '',\r\n                                                Skills: '',\r\n                                                Biography: ''\r\n                                            }\r\n\r\n                                            if( typeof user.Industry === 'undefined') user.Industry = {\r\n                                                Industry: ''\r\n                                            }\r\n                                            myCSV.push([user._id, user.Date, user.Name, user.Surname, user.Email, user.Profile.Telephone || '',  user.Profile.Date_Of_Birth || '', \r\n                                    user.Profile.City_Living || '', '', user.Profile.Position.Position, user.Industry.Industry || '', user.Profile.Skills || '', user.Profile.Biography || '', user.Projects,\r\n                                user.CallCreated, user.numberCandidatures, user.numberCandidaturesAccepted, user.numberCandidaturesWaiting, user.numberCandidaturesRejected ])}\r\n                                \r\n                                ) \r\n                                    \r\n                                // console.log('mycsv', myCSV)\r\n                                setUsersList(myCSV) \r\n\r\n                                }\r\n                                                 \r\n                                }\r\n                            }\r\n                        >\r\n                        <i className=\"fas fa-download fa-sm text-white-50\"> </i>                                  \r\n                        <CSVLink data={usersList} className=\"text-white\">Download Dati User </CSVLink>            \r\n                    </button>\r\n                    <br />\r\n                    <br />\r\n                    <button className=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\" \r\n                            onClick={() => {\r\n                                console.log('CALL Sec')\r\n                                console.log('callsGeneralData', callsGeneralData)\r\n                                \r\n                                if(callsGeneralData !== null && callsGeneralData.length != 0) {\r\n                                    console.log('CALL SECOND')\r\n                                    \r\n                                    callsGeneralData.map( (call) => \r\n                                        {\r\n                                            secondCSV.push([call._id, call.Date_Inserted, call?.Project.Name, call?.Founder.Email, call?.Project.Description, call?.Industry.Industry,\r\n                                            call?.Project.Development_Stage.Development_Stage, call?.Position.Position, call?.Skills.join(), call?.Type_Colaboration,  call?.Presence_Required, call?.City_Presence_Required,\r\n                                            call?.Status, call?.numberCandidatures, call?.numberCandidaturesAccepted, call?.numberCandidaturesWaiting, call?.numberCandidaturesRejected])}\r\n                                \r\n                                ) \r\n                                    \r\n                                console.log('secondCSV', secondCSV)\r\n                                setCallsList(secondCSV) \r\n\r\n                                }\r\n                                    console.log('end')             \r\n                                }\r\n                            }\r\n                        >\r\n                        <i className=\"fas fa-download fa-sm text-white-50\"> </i>                                  \r\n                        <CSVLink data={callsList} className=\"text-white\">Download Dati Call </CSVLink>            \r\n                    </button>\r\n                    <br />\r\n                    <br />\r\n                    <button className=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\" \r\n                            onClick={() => {\r\n                                \r\n                        if(candidaturesGeneralData !== null && candidaturesGeneralData.length != 0) {\r\n                            candidaturesGeneralData.map( (candidature) => \r\n                                {   \r\n                                    thirdCSV.push(\r\n                                        [\r\n                                            candidature._id, \r\n                                            candidature.Date_Inserted,\r\n                                            candidature.Motivational_Letter.replace(/['\"]+/g, ''),\r\n                                            candidature.Call_Project.Project._id,\r\n                                            candidature.Call_Project.Project.Name,\r\n                                            candidature.Call_Project._id,\r\n                                            (candidature.Call_Project.City_Presence_Required ? 'Si' : 'No'), \r\n                                            candidature.Status, candidature.Date_Closed, (candidature.Feedback ? candidature.Feedback : ''), \r\n                                            candidature?.User.Name, \r\n                                            candidature?.User.Surname, \r\n                                            candidature?.User.Email,\r\n                                            candidature?.ProfileCandidate?.Telephone,\r\n                                            candidature?.ProfileCandidate?.Date_Of_Birth, \r\n                                            candidature?.ProfileCandidate?.City_Living, \r\n                                            candidature?.ProfileCandidate?.Position?.Position, \r\n                                            candidature?.IndustryCandidate.Industry, \r\n                                            candidature?.ProfileCandidate?.Skills, \r\n                                            candidature?.ProfileCandidate?.Biography,\r\n                                            candidature?.OwnerUser?.Name, \r\n                                            candidature?.OwnerUser?.Surname,\r\n                                            candidature?.OwnerUser?.Email, \r\n                                            candidature?.OwnerProfile?.Telephone, \r\n                                            candidature?.OwnerProfile?.Date_Of_Birth, \r\n                                            candidature?.OwnerProfile?.City_Living, \r\n                                            candidature?.OwnerProfile?.Position.Position, \r\n                                            candidature?.OwnerIndustry?.Industry, \r\n                                            candidature?.OwnerProfile?.Skills,\r\n                                            candidature?.OwnerProfile?.Biography]\r\n                                            )\r\n                                }\r\n                        ) \r\n                                    \r\n                                console.log('mycsv', thirdCSV)\r\n                                setCandidaturesList(thirdCSV) \r\n\r\n                                }\r\n                                                 \r\n                                }\r\n                            }\r\n                        >\r\n                        <i className=\"fas fa-download fa-sm text-white-50\"> </i>                                  \r\n                        <CSVLink data={candidaturesList} className=\"text-white\">Download Dati Candidature </CSVLink>            \r\n                    </button>  \r\n                                                         \r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div> \r\n      </LayoutBodyAdmin>  \r\n    </>\r\n  )\r\n}\r\nconst mapStateToProps = state => ({\r\n    admin: state.admin,\r\n    auth: state.authCollaborator,\r\n    project: state.project\r\n})\r\n\r\nexport default connect(mapStateToProps, {getUsersGeneralData, getCallData, getCandidaturesData})(DonwnloaDocuments)\r\n","import React, { Fragment } from 'react'\r\nimport { Container, Row, Image } from 'react-bootstrap'\r\nimport Footer from '../../components/Footer'\r\nimport Head from '../../components/Head'\r\nimport Navbar from '../../components/NavbarPublic'\r\nimport {Link, Redirect, withRouter} from 'react-router-dom' \r\nimport { connect } from 'react-redux'\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <Fragment>\r\n             {/**Definition of the upper part of the page */}\r\n            <Head />\r\n            <Navbar />\r\n            {/** END */}\r\n\r\n            <Container fluid id=\"notFoundBackground\" className='my-auto'>\r\n                <Row className=\"pt-5\">\r\n                    <div className=\"pt-5 col-10 offset-1 col-md-8 offset-md-2 text-center text-white\">\r\n                        <h1>La pagina ricercata non è stata trovata!</h1>\r\n                        <h3>Ci dispiace, ma la pagina ricercata non è disponibile.</h3>\r\n                    </div>\r\n                </Row>\r\n                <Row>\r\n                    <div className=\"col-12  text-center mt-5\">\r\n                         <Link style={{width:'340px'}} type=\"button\" className=\"btn btn-primary btn-lg\" id='buttonLanding' to={`/`} >Ritorna alla homepage</Link>\r\n                    </div>\r\n                </Row>\r\n            </Container>\r\n            <Footer />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","/**\r\n * Page private that explains the project\r\n */\r\n\r\nimport React, { Fragment } from 'react'\r\nimport { Container, Row, Image } from 'react-bootstrap'\r\nimport Footer from '../../components/Footer'\r\nimport Image_1 from '../../../resources/img/about_us_image_1.jpg'\r\nimport Image_2 from '../../../resources/img/about_us_image_2.jpg'\r\nimport {Link, Redirect, withRouter} from 'react-router-dom' \r\nimport { connect } from 'react-redux'\r\nimport Navbar from '../../components/Navbar'\r\nimport Head from '../../components/Head'\r\nimport Menu from '../../components/Menu'\r\n\r\nconst AboutUsPrivate = () => {\r\n    return (\r\n        <Fragment>\r\n\r\n            {/**Definition of the upper part of the page */}\r\n                <Head />\r\n                <Navbar />\r\n                <Menu />\r\n            {/** END */}\r\n\r\n            <Container fluid id=\"background-about-us-svg\">\r\n                <Row className=\"pt-5\">\r\n                    <div className=\"col-md-8 offset-md-2 col-12 text-center \">\r\n                        <p id=\"about-text-first\" className=\"text-black bold-text-class\">Connettiamo chi ha un’idea imprenditoriale con chi ha<br/> giuste competenze e motivazione per realizzarla</p>\r\n                    </div>\r\n                </Row>\r\n                <Row>\r\n                    <div className=\"col-md-3 offset-md-2 col-10 offset-1 shadow\" id='containerFormCreateProject'>\r\n                        <Row>\r\n                            <div className=\"col-10 offset-1 col-md-12 offset-md-0 p-0\"> <Image src={Image_1} width=\"100%\" height='290px' style={{ borderRadius: '10%' }} /></div>\r\n                        </Row>\r\n                        <Row className=\"pt-5\">\r\n                            <div className=\"col-12 text-center text-white p-0\"><p id=\"about-text-card-first\" >Founder o aspiranti tali che cercano co-founder o team member</p></div>\r\n                        </Row>\r\n                        <Row>\r\n                            <div className=\"col-12 text-white p-0\">\r\n                                <ol>\r\n                                    <p id=\"about-text-card-second\"><li className=\"mt-3\">Carica il tuo progetto e indica la figura che cerchi</li></p>\r\n                                    <p id=\"about-text-card-second\"><li className=\"mt-3\">Ricevi candidature di potenziali team member</li></p>\r\n                                    <p id=\"about-text-card-second\"><li className=\"mt-3\">Seleziona i profili in linea con quanto richiesto dal processo</li></p>\r\n                                    <p id=\"about-text-card-second\"><li className=\"mt-3\">Incontra il potenziale team member</li></p> \r\n                                </ol>\r\n                            </div>\r\n                        </Row>\r\n                    </div>\r\n                    <div className=\"col-md-3 offset-md-2 col-10 offset-1 shadow\" id='containerFormCreateProject'>\r\n                        <Row>\r\n                            <div className=\"col-10 offset-1 col-md-12 offset-md-0 p-0\"> <Image src={Image_2} width=\"100%\" height='290px' style={{ borderRadius: '10%' }} /></div>\r\n                        </Row>\r\n                        <Row className=\"pt-5\">\r\n                            <div className=\"col-12 text-center text-white p-0\"><p id=\"about-text-card-first\">Professionisti che vogliono contribuire alla nascita di una startup</p></div>\r\n                        </Row>\r\n                        <Row>\r\n                            <div className=\"col-12 text-white p-0\">\r\n                                <ol>\r\n                                    <p id=\"about-text-card-second\"><li className=\"mt-3\">Scegli i progetti che più ti interessano</li></p>\r\n                                    <p id=\"about-text-card-second\"><li className=\"mt-3\">Invia la tua candidatura per conoscere il founder</li></p>\r\n                                    <p id=\"about-text-card-second\"><li className=\"mt-3\">Scopri se il tuo profilo è in linea con quanto richiesto dal progetto</li></p>\r\n                                    <p id=\"about-text-card-second\"><li className=\"mt-3\">Incontra l'aspirante founder</li></p> \r\n                                </ol>\r\n                            </div>\r\n                        </Row>\r\n                    </div>\r\n                </Row>\r\n                <Row className=\"mt-4 mt-md-0\">\r\n                    <div className=\"col-12 text-center my-auto\">                          \r\n                         <Link type=\"button\"  className=\"btn btn-primary btn-lg\" id='buttonLanding' to={`/create-project`} >Inizia ora</Link>\r\n                    </div>\r\n                </Row>\r\n                <Row className=\"mt-5 mb-5\">\r\n                    <div className=\"col-12\">\r\n                        <hr className='dashed-line' />\r\n                    </div>                    \r\n                </Row>\r\n            </Container>\r\n            <Container fluid id='background-about-us-svg_2'>\r\n                <Row>\r\n                    <div className=\"col-md-6 offset-md-3 col-10 offset-1\">\r\n\r\n                        <div id=\"cardProjectOutside\" className=\"card  shadow-lg p-3 mb-5 bg-white \">\r\n                            <div id=\"cardProjectInside\" className=\"row no-gutters text-white mb-3 shadow\">\r\n                                <div className=\"col-md-12\">\r\n                                {/* <img src=\"image.jpg\" className=\"card-img\" alt=\"...\" /> */}\r\n                                    <p id=\"about-text-card-third\" className=\"p-3 text-center\">Testiamo gli elementi chiave <br /> per costruire un team di successo</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row no-gutters\">\r\n                                <div className=\"col-12 p-0 text-black\">\r\n                                    <Row>\r\n                                        <div className=\"col-10 offset-1 col-md-2 offset-1 text-center my-auto\">\r\n                                            <h2 style={{fontSize:'70px'}}>1.</h2>\r\n                                        </div>\r\n                                        <div className=\"col-10 offset-1 col-md-8 \">\r\n                                            <p id=\"about-text-card-fourth\"><b>Competenze:</b></p>\r\n                                            <h5>Ricerca mirata delle competenze necessarie per creare team eterogenei</h5>\r\n                                        </div>\r\n                                    </Row>\r\n                                    <Row className='mt-5'>\r\n                                        <div className=\"col-10 offset-1 col-md-2 offset-1 text-center my-auto\">\r\n                                            <h2 style={{fontSize:'70px'}}>2.</h2>\r\n                                        </div>\r\n                                        <div className=\"col-10 offset-1 col-md-8 \">\r\n                                            <p id=\"about-text-card-fourth\"><b>Motivazione:</b></p>\r\n                                            <h5>La volontà di unirsi al  progetto viene subito testata</h5>\r\n                                        </div>\r\n                                    </Row>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Row>\r\n                <Row style={{marginTop: '10vh'}}>\r\n                    <div className=\"col-10 offset-1 col-md-6 offset-md-3 text-center text-black\">\r\n                        <Row>\r\n                            <div className='col-12'><h1 >Contattaci</h1></div>\r\n                        </Row>\r\n                        <Row>\r\n                            <div className='col-12' style={{fontSize:'28px'}}>\r\n                                <p> info@nucleus.it</p>\r\n                                {/* <p>Linkedin:ddddddds</p>                             */}\r\n                            </div>\r\n                        </Row>\r\n                    </div>\r\n                </Row>\r\n                <Row className=\"mt-5 mb-5\">\r\n                    <div className=\"col-12\">\r\n                        <hr className='dashed-line' />\r\n                    </div>                    \r\n                </Row>\r\n            </Container>\r\n            <Container>\r\n                <Row>\r\n                        <div className=\"col-10 offset-1 text-center text-black offset-md-1 mb-5\">\r\n                            <h1>Domande frequenti</h1>\r\n                        </div>\r\n                    </Row>\r\n                    <Row>\r\n                        <div className=\"col-10 col-md-10\">\r\n                            <p id=\"about-faq-question\">1. Se mi candido a un progetto, sono poi vincolato a prendervi parte?</p>\r\n                            <p id=\"about-faq-answer\">No, la candidatura è una semplice manifestazione di interesse a voler conoscere il founder o aspirante tale.</p>\r\n                            <br />\r\n                        </div>\r\n                    </Row>\r\n                    <Row>\r\n                         <div className=\"col-10 col-md-10\">\r\n                            <p id=\"about-faq-question\">2. Come avverrà l’incontro tra founder  e team member?</p>\r\n                            <p id=\"about-faq-answer\">Avverrà tramite videochiamata organizzata da Nucleus. </p>\r\n                            <br />\r\n                        </div>\r\n                    </Row>\r\n                    <Row>\r\n                    <div className=\"col-10 col-md-10\">\r\n                            <p id=\"about-faq-question\">3. Il servizio è a pagamento?</p>\r\n                            <p id=\"about-faq-answer\">No, al momento è completamente gratuito. </p>\r\n                            <br />\r\n                        </div>\r\n                    </Row>\r\n                    <Row>\r\n                    <div className=\"col-10 col-md-10\">\r\n                            <p id=\"about-faq-question\">4. Mi posso candidare a più progetti contemporaneamente?</p>\r\n                            <p id=\"about-faq-answer\">Sì, non c'è alcun limite.</p>\r\n                            <br />\r\n                        </div>\r\n                    </Row>\r\n                    <Row>\r\n                    <div className=\"col-10 col-md-10\">\r\n                            <p id=\"about-faq-question\">5. Ho una domanda che non è tra queste, come faccio?</p>\r\n                            <p id=\"about-faq-answer\">Per qualsiasi altra domanda e curiosità puoi scriverci a  info@nucleus.it.</p>\r\n                            <br />\r\n                        </div>\r\n                    </Row>\r\n            </Container>\r\n            <Footer />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    \r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {})(withRouter(AboutUsPrivate))\r\n","import React, {Fragment, useEffect} from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\n\n\n\n// import Alert from './components/layout/Alert'\n\nimport PrivateRoute from './components/routing/PrivateRoute'\nimport AdminRoute from './components/routing/AdminRoute'\n\n\n// CLIENT - NEW VERSION\nimport DashboardUser from './client/scenes/Dashboard/Dashboard'\nimport CreateProfileUser from './client/scenes/Profile/scenes/CreateProfile/CreateProfile'\nimport CreateProjectUser from './client/scenes/Project/scenes/CreateProject/CreateProject'\nimport SignUser from './client/scenes/Sign/Sign'\nimport UserListProjects from './client/scenes/Project/scenes/ProjectsOfTheUser/ProjectsOfTheUser'\nimport CreateCandidature from './client/scenes/Project/scenes/CreateCandidature/CreateCandidature'\nimport ListProjects from './client/scenes/Project/scenes/ListProjectsPlatform/ListProjectsPlatform'\nimport Landing from './client/scenes/Landing/Landing'\nimport CallView from './client/scenes/Project/scenes/CallView/CallView'\nimport MotivationalLetter from './client/scenes/Project/scenes/MotivationalLetter/MotivationalLetter'\nimport UserListCandidacies from './client/scenes/Candidature/scenes/CandidaciesOfTheUser/CandidaciesOfTheUser'\nimport ListCandidatesCall from './client/scenes/Candidature/scenes/CandidatesForCall/CandidatesForCall'\nimport UpdateCandidature from './client/scenes/Candidature/scenes/UpdateCandidature/UpdateCandidature'\nimport AboutUs from './client/scenes/AboutUs/AboutUs'\nimport ListCallPublic from './client/scenes/Landing/ListCallPublic'\nimport ResetPassword from './client/scenes/Sign/ResetPassword'\nimport ResetPasswordConferma from './client/scenes/Sign/ResetPasswordConferma'\n\n//Redux\nimport {Provider} from 'react-redux'\nimport store from './store'\nimport { loadUser} from './actions/auth'\nimport {loadCollaborator} from './actions/authCollaborator'\nimport setAuthToken from './utils/setAuthToken' \n\n// Header\nimport LayoutAdmin from './admin/components/LayoutAdmin'\n\n// Admin \nimport DashboardAdmin from './admin/scenes/Dashboard/DashboardAdmin'\nimport LoginAdministrator from './admin/scenes/Sign/scenes/Login/LoginAdministrator'\nimport RegisterAdministrator from './admin/scenes/Sign/scenes/Register/RegisterAdminstrator'\nimport DetailUserAdministrator from './admin/scenes/Analysis/scenes/UserDetail/UserDetail'\nimport DetailProjectAdministrator from './admin/scenes/Analysis/scenes/ProjectDetail/ProjectDetail'\nimport ManagePosition from './admin/scenes/Utilities/scenes/ManagePosition/ManagePosition'\nimport ManageIndustry from './admin/scenes/Utilities/scenes/ManageIndustry/ManageIndustry'\nimport ManageDevelopmentStage from './admin/scenes/Utilities/scenes/ManagementDevStage/ManagementDevStage'\nimport ManageAnalysisQuestion from './admin/scenes/Utilities/scenes/ManageAnalysisQuestions/ManageAnalysisQuestion'\nimport ApproveProject from './admin/scenes/Projects/scenes/ApproveProject/ApproveProject'\nimport ProjectDetailApprovation from \"./admin/scenes/Projects/scenes/ApproveProject/ProjectDetailApprovation\";\nimport DownloadDocuments from './admin/scenes/DownloadDocuments/DonwnloaDocuments'\n\n// Import Bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport NotFound from './client/scenes/NotFound/NotFound';\nimport AboutUsPrivate from './client/scenes/AboutUs/AboutUsPrivate';\n\n\nconst App = () => \n{\n  useEffect(() => {\n    setAuthToken(localStorage.token);\n    store.dispatch(loadUser());\n    store.dispatch(loadCollaborator());\n\n  }, [])\n  \n  //Source: https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n  // First we get the viewport height and we multiple it by 1% to get a value for a vh unit\n  let vh = window.innerHeight * 0.01;\n  // Then we set the value in the --vh custom property to the root of the document\n  document.documentElement.style.setProperty('--vh', `${vh}px`);\n\n  return (\n  <Provider store = {store}>\n    <Router>\n      <Fragment>        \n            {/* <Alert /> */}\n            <Switch>\n                <Route exact path=\"/\" component={Landing}/>\n              \n                {/**Client new pages */}\n                  <PrivateRoute exact path=\"/create-profile/:id?\" component={CreateProfileUser} />\n                  <PrivateRoute exact path=\"/dashboard\" component={DashboardUser} />\n                  <PrivateRoute exact path=\"/create-project\" component={CreateProjectUser} />\n                  <PrivateRoute exact path=\"/personal-list-projects\" component={UserListProjects} />\n                  <PrivateRoute exact path=\"/create-candidature/:id\" component={CreateCandidature} />\n                  <PrivateRoute exact path=\"/list-projects\" component={ListProjects} />\n                  <PrivateRoute exact path=\"/view-call/:id\" component={CallView} />\n                  <PrivateRoute exact path=\"/call/motivational-letter/:id\" component={MotivationalLetter} />\n                  <PrivateRoute exact path=\"/personal-list-candidacies\" component={UserListCandidacies} />\n                  <PrivateRoute exact path=\"/list-candidate/call/:id\" component={ListCandidatesCall} />\n                  <PrivateRoute exact path=\"/call/update-motivational-letter/:id\" component={UpdateCandidature} />\n                  <PrivateRoute exact path=\"/call/come-funziona-privata\" component={AboutUsPrivate} />\n\n                  <Route exact path=\"/reset-password\" component={ResetPassword} />\n                  <Route exact path=\"/reset-password-conferma\" component={ResetPasswordConferma} />\n\n                  <Route exact path=\"/sign/:id?\" component={SignUser} />\n                  <Route exact path=\"/come-funziona\" component={AboutUs} />\n                  <Route exact path=\"/list-calls\" component={ListCallPublic} />\n\n                {/* Admin section */}\n                      <AdminRoute exact path=\"/admin/dashboard\" component={DashboardAdmin} />            \n                      <Route exact path=\"/admin/login\" component={LoginAdministrator} />\n                      <Route exact path=\"/admin/register\" component={RegisterAdministrator} />\n                      <AdminRoute exact path=\"/admin/users/:id\" component={DetailUserAdministrator} />\n                      <AdminRoute exact path=\"/admin/projects/:id\" component={DetailProjectAdministrator} />\n\n                      {/* Utilities */}\n                            {/* <AdminRoute exact path=\"/admin/projects/:id\" component={DetailProjectAdministrator} />   */}\n                            <AdminRoute exact path=\"/admin/manage/position\" component={ManagePosition} />\n                            <AdminRoute exact path=\"/admin/manage/industry\" component={ManageIndustry} />\n                            <AdminRoute exact path=\"/admin/manage/development-stage\" component={ManageDevelopmentStage} />\n                            <AdminRoute exact path=\"/admin/manage/analysis-question\" component={ManageAnalysisQuestion} />\n                      {/* Utilities */}\n\n                      {/**Management projects */}\n                        <AdminRoute exact path=\"/admin/project/acceptance\" component={ApproveProject} />\n                        <AdminRoute exact path=\"/admin/project/acceptance/:id\" component={ProjectDetailApprovation} />\n                        <AdminRoute exact path=\"/admin/download-documents\" component={DownloadDocuments} />\n                      {/**Management projects */}\n                {/* Admin section */}\n                {/* Not found - 404 */}\n                <Route component={NotFound} />\n\n            </Switch>\n          \n            {/* <Footer /> */}\n      </Fragment>\n    </Router>\n\n  \n    \n\n</Provider>)}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter >\n      <App />\n      </BrowserRouter>\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}